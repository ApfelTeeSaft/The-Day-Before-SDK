#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_AmbientController

#include "Basic.hpp"

#include "E_HouseType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_AmbientController.BP_AmbientController_C
// 0x00C8 (0x0358 - 0x0290)
class ABP_AmbientController_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoxComponent*                          Box;                                               // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Root;                                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    DayForest;                                         // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    UpdateQuest;                                       // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    QuestNew;                                          // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    Bunker2EnabledAmbient;                             // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CustomAmbient;                                     // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    BunkerBaseAmbient;                                 // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Day_Forest_Sound_Volume_Volume_F145D7474791842CDE00FD868F9EBF6D; // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Day_Forest_Sound_Volume__Direction_F145D7474791842CDE00FD868F9EBF6D; // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DD[0x3];                                      // 0x02DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Day_Forest_Sound_Volume;                           // 0x02E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class AHouseBox_C*>                    HouseBoxes;                                        // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	class UFMODParamTask_C*                       FMODTask;                                          // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             PrevEvent;                                         // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UFMODEvent>              PrevEvent2;                                        // 0x0308(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	class AUltra_Dynamic_Sky_C*                   DayNight;                                          // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             TestReverbGroup;                                   // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     Fmod_snapshot_housebox;                            // 0x0348(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class ABP_BlizzardControllerV2_C*             BlizzardController;                                // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void Day_Forest_Sound_Volume__FinishedFunc();
	void Day_Forest_Sound_Volume__UpdateFunc();
	void EnteredHouse(E_HouseType NewParam);
	void ExecuteUbergraph_BP_AmbientController(int32 EntryPoint);
	void HouseBoxEntered(class AHouseBox_C* HouseBox);
	void HouseBoxLeaved(class AHouseBox_C* HouseBox);
	void LeavedHouse();
	void NewQuest();
	void OnBlizzardStart();
	void OnBlizzardStop();
	void OnEnterBunkerArea(class ABunkerAreaV2_C* Area);
	void OnEnterCustomAmbientArea(class UFMODEvent* FMODEvent);
	void OnLeaveBunkerArea(class ABunkerAreaV2_C* Area);
	void OnLeaveCustomAmbientArea();
	void QuestUpdate();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void StopFMODTask();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_AmbientController_C">();
	}
	static class ABP_AmbientController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_AmbientController_C>();
	}
};
static_assert(alignof(ABP_AmbientController_C) == 0x000008, "Wrong alignment on ABP_AmbientController_C");
static_assert(sizeof(ABP_AmbientController_C) == 0x000358, "Wrong size on ABP_AmbientController_C");
static_assert(offsetof(ABP_AmbientController_C, UberGraphFrame) == 0x000290, "Member 'ABP_AmbientController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Box) == 0x000298, "Member 'ABP_AmbientController_C::Box' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Root) == 0x0002A0, "Member 'ABP_AmbientController_C::Root' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, DayForest) == 0x0002A8, "Member 'ABP_AmbientController_C::DayForest' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, UpdateQuest) == 0x0002B0, "Member 'ABP_AmbientController_C::UpdateQuest' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, QuestNew) == 0x0002B8, "Member 'ABP_AmbientController_C::QuestNew' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Bunker2EnabledAmbient) == 0x0002C0, "Member 'ABP_AmbientController_C::Bunker2EnabledAmbient' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, CustomAmbient) == 0x0002C8, "Member 'ABP_AmbientController_C::CustomAmbient' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, BunkerBaseAmbient) == 0x0002D0, "Member 'ABP_AmbientController_C::BunkerBaseAmbient' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Day_Forest_Sound_Volume_Volume_F145D7474791842CDE00FD868F9EBF6D) == 0x0002D8, "Member 'ABP_AmbientController_C::Day_Forest_Sound_Volume_Volume_F145D7474791842CDE00FD868F9EBF6D' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Day_Forest_Sound_Volume__Direction_F145D7474791842CDE00FD868F9EBF6D) == 0x0002DC, "Member 'ABP_AmbientController_C::Day_Forest_Sound_Volume__Direction_F145D7474791842CDE00FD868F9EBF6D' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Day_Forest_Sound_Volume) == 0x0002E0, "Member 'ABP_AmbientController_C::Day_Forest_Sound_Volume' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, HouseBoxes) == 0x0002E8, "Member 'ABP_AmbientController_C::HouseBoxes' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, FMODTask) == 0x0002F8, "Member 'ABP_AmbientController_C::FMODTask' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, PrevEvent) == 0x000300, "Member 'ABP_AmbientController_C::PrevEvent' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, PrevEvent2) == 0x000308, "Member 'ABP_AmbientController_C::PrevEvent2' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, DayNight) == 0x000338, "Member 'ABP_AmbientController_C::DayNight' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, TestReverbGroup) == 0x000340, "Member 'ABP_AmbientController_C::TestReverbGroup' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, Fmod_snapshot_housebox) == 0x000348, "Member 'ABP_AmbientController_C::Fmod_snapshot_housebox' has a wrong offset!");
static_assert(offsetof(ABP_AmbientController_C, BlizzardController) == 0x000350, "Member 'ABP_AmbientController_C::BlizzardController' has a wrong offset!");

}

