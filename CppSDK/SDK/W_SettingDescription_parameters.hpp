#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_SettingDescription

#include "Basic.hpp"

#include "S_SettingDescriptionData_structs.hpp"


namespace SDK::Params
{

// Function W_SettingDescription.W_SettingDescription_C.ExecuteUbergraph_W_SettingDescription
// 0x0008 (0x0008 - 0x0000)
struct W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription) == 0x000004, "Wrong alignment on W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription");
static_assert(sizeof(W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription) == 0x000008, "Wrong size on W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription");
static_assert(offsetof(W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription, EntryPoint) == 0x000000, "Member 'W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_SettingDescription_C_ExecuteUbergraph_W_SettingDescription::K2Node_Event_IsDesignTime' has a wrong offset!");

// Function W_SettingDescription.W_SettingDescription_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_SettingDescription_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingDescription_C_PreConstruct) == 0x000001, "Wrong alignment on W_SettingDescription_C_PreConstruct");
static_assert(sizeof(W_SettingDescription_C_PreConstruct) == 0x000001, "Wrong size on W_SettingDescription_C_PreConstruct");
static_assert(offsetof(W_SettingDescription_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_SettingDescription_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_SettingDescription.W_SettingDescription_C.SetSettingName
// 0x0058 (0x0058 - 0x0000)
struct W_SettingDescription_C_SetSettingName final
{
public:
	class FName                                   Param_SettingName;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FS_SettingDescriptionData              CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0048)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_SettingDescription_C_SetSettingName) == 0x000008, "Wrong alignment on W_SettingDescription_C_SetSettingName");
static_assert(sizeof(W_SettingDescription_C_SetSettingName) == 0x000058, "Wrong size on W_SettingDescription_C_SetSettingName");
static_assert(offsetof(W_SettingDescription_C_SetSettingName, Param_SettingName) == 0x000000, "Member 'W_SettingDescription_C_SetSettingName::Param_SettingName' has a wrong offset!");
static_assert(offsetof(W_SettingDescription_C_SetSettingName, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'W_SettingDescription_C_SetSettingName::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_SettingDescription_C_SetSettingName, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000050, "Member 'W_SettingDescription_C_SetSettingName::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

