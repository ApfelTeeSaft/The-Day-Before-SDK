#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerDeadBody

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "LootPoint_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass PlayerDeadBody.PlayerDeadBody_C
// 0x00F0 (0x08A0 - 0x07B0)
#pragma pack(push, 0x1)
class alignas(0x10) APlayerDeadBody_C : public ALootPoint_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_PlayerDeadBody_C;                   // 0x07A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Scene;                                             // 0x07B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 BackpackSlot;                                      // 0x07B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 PantsSlot;                                         // 0x07C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 OuterwearSlot;                                     // 0x07C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 ArmorSlot;                                         // 0x07D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 HelmetSlot;                                        // 0x07D8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair2;                                             // 0x07E0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair1;                                             // 0x07E8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SkeletalMesh;                                      // 0x07F0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         BlendPhysic_Blend_45835B93403A712F3527068E5BEE67FF; // 0x07F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            BlendPhysic__Direction_45835B93403A712F3527068E5BEE67FF; // 0x07FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7FD[0x3];                                      // 0x07FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     BlendPhysic;                                       // 0x0800(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   PelvisBoneName;                                    // 0x0808(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Opa;                                               // 0x0810(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0818(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Bone_Name;                                         // 0x0830(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0838(0x0018)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseSnapshot                          SnapPose;                                          // 0x0850(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          StartPhysic;                                       // 0x0888(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            CurveBlend;                                        // 0x0890(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ActivateDeadBody();
	void AddImpulse(const struct FVector& Param_Impulse, const struct FVector& Param_Location, class FName BoneName);
	void ApplyPhysic(bool IsBlend);
	void BlendPhysic__FinishedFunc();
	void BlendPhysic__UpdateFunc();
	void CustomEvent_1(class FName NewParam);
	void DamageImpulseMulti(const struct FVector& Direction, const struct FVector& Param_Location, class FName BoneName);
	void DisableRagdoll();
	void EnableRagdoll();
	void ExecuteUbergraph_PlayerDeadBody(int32 EntryPoint);
	void StartBlendPhysics();
	void Take_Off_Clothes(class FName Param_Name);
	void UpdateMeshView(class USkeletalMeshComponent* EquipmentSlot, class USkeletalMesh* NewMesh, class UMaterial* NewMaterial);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerDeadBody_C">();
	}
	static class APlayerDeadBody_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<APlayerDeadBody_C>();
	}
};
#pragma pack(pop)
static_assert(alignof(APlayerDeadBody_C) == 0x000010, "Wrong alignment on APlayerDeadBody_C");
static_assert(sizeof(APlayerDeadBody_C) == 0x0008A0, "Wrong size on APlayerDeadBody_C");
static_assert(offsetof(APlayerDeadBody_C, UberGraphFrame_PlayerDeadBody_C) == 0x0007A8, "Member 'APlayerDeadBody_C::UberGraphFrame_PlayerDeadBody_C' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Scene) == 0x0007B0, "Member 'APlayerDeadBody_C::Scene' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, BackpackSlot) == 0x0007B8, "Member 'APlayerDeadBody_C::BackpackSlot' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, PantsSlot) == 0x0007C0, "Member 'APlayerDeadBody_C::PantsSlot' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, OuterwearSlot) == 0x0007C8, "Member 'APlayerDeadBody_C::OuterwearSlot' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, ArmorSlot) == 0x0007D0, "Member 'APlayerDeadBody_C::ArmorSlot' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, HelmetSlot) == 0x0007D8, "Member 'APlayerDeadBody_C::HelmetSlot' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Hair2) == 0x0007E0, "Member 'APlayerDeadBody_C::Hair2' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Hair1) == 0x0007E8, "Member 'APlayerDeadBody_C::Hair1' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, SkeletalMesh) == 0x0007F0, "Member 'APlayerDeadBody_C::SkeletalMesh' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, BlendPhysic_Blend_45835B93403A712F3527068E5BEE67FF) == 0x0007F8, "Member 'APlayerDeadBody_C::BlendPhysic_Blend_45835B93403A712F3527068E5BEE67FF' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, BlendPhysic__Direction_45835B93403A712F3527068E5BEE67FF) == 0x0007FC, "Member 'APlayerDeadBody_C::BlendPhysic__Direction_45835B93403A712F3527068E5BEE67FF' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, BlendPhysic) == 0x000800, "Member 'APlayerDeadBody_C::BlendPhysic' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, PelvisBoneName) == 0x000808, "Member 'APlayerDeadBody_C::PelvisBoneName' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Opa) == 0x000810, "Member 'APlayerDeadBody_C::Opa' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Impulse) == 0x000818, "Member 'APlayerDeadBody_C::Impulse' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Bone_Name) == 0x000830, "Member 'APlayerDeadBody_C::Bone_Name' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, Location) == 0x000838, "Member 'APlayerDeadBody_C::Location' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, SnapPose) == 0x000850, "Member 'APlayerDeadBody_C::SnapPose' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, StartPhysic) == 0x000888, "Member 'APlayerDeadBody_C::StartPhysic' has a wrong offset!");
static_assert(offsetof(APlayerDeadBody_C, CurveBlend) == 0x000890, "Member 'APlayerDeadBody_C::CurveBlend' has a wrong offset!");

}

