#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CampBonfire

#include "Basic.hpp"

#include "BP_CampBonfire_classes.hpp"
#include "BP_CampBonfire_parameters.hpp"


namespace SDK
{

// Function BP_CampBonfire.BP_CampBonfire_C.AddFuel
// (BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::AddFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "AddFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bFromSweep                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       SweepResult                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void ABP_CampBonfire_C::BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");

	Params::BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;
	Parms.bFromSweep = bFromSweep;
	Parms.SweepResult = std::move(SweepResult);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_CampBonfire_C_BndEvt__Sphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ClearHouseBox
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::ClearHouseBox()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ClearHouseBox");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.CookFoodV2
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CampCooking                   Food                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CampBonfire_C::CookFoodV2(const struct FS_CampCooking& Food)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "CookFoodV2");

	Params::BP_CampBonfire_C_CookFoodV2 Parms{};

	Parms.Food = std::move(Food);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.CookFoodV3
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CampCooking                   Food                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CampBonfire_C::CookFoodV3(const struct FS_CampCooking& Food)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "CookFoodV3");

	Params::BP_CampBonfire_C_CookFoodV3 Parms{};

	Parms.Food = std::move(Food);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.CookFoodV3_Multi
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::CookFoodV3_Multi()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "CookFoodV3_Multi");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.DestroyInteractable
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::DestroyInteractable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "DestroyInteractable");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ExecuteUbergraph_BP_CampBonfire
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::ExecuteUbergraph_BP_CampBonfire(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ExecuteUbergraph_BP_CampBonfire");

	Params::BP_CampBonfire_C_ExecuteUbergraph_BP_CampBonfire Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.GetActorType
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ActorType                             ActorType                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::GetActorType(E_ActorType* ActorType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "GetActorType");

	Params::BP_CampBonfire_C_GetActorType Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ActorType != nullptr)
		*ActorType = Parms.ActorType;
}


// Function BP_CampBonfire.BP_CampBonfire_C.HasFuel
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Has                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::HasFuel(bool* Has)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "HasFuel");

	Params::BP_CampBonfire_C_HasFuel Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Has != nullptr)
		*Has = Parms.Has;
}


// Function BP_CampBonfire.BP_CampBonfire_C.IsLocked?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::IsLocked_(bool* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "IsLocked?");

	Params::BP_CampBonfire_C_IsLocked_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;
}


// Function BP_CampBonfire.BP_CampBonfire_C.MultiStartIgnite
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::MultiStartIgnite(class ASurvivalPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "MultiStartIgnite");

	Params::BP_CampBonfire_C_MultiStartIgnite Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnAddFuelClient
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnAddFuelClient()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnAddFuelClient");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnBeginInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnBeginInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnBeginInteract");

	Params::BP_CampBonfire_C_OnBeginInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnBuildingState
// (BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnBuildingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnBuildingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnEndFuel
// (BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnEndFuel()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnEndFuel");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnEndFuelMulticast
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnEndFuelMulticast()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnEndFuelMulticast");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnFocused
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           HighlightActor                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UActorComponent*                  HighlightActorComponent                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// E_InteractType                          InteractType                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  LateTime                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnFocused");

	Params::BP_CampBonfire_C_OnFocused Parms{};

	Parms.Player = Player;
	Parms.HighlightActor = HighlightActor;
	Parms.HighlightActorComponent = HighlightActorComponent;

	UObject::ProcessEvent(Func, &Parms);

	if (InteractType != nullptr)
		*InteractType = Parms.InteractType;

	if (LateTime != nullptr)
		*LateTime = Parms.LateTime;
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnInteract");

	Params::BP_CampBonfire_C_OnInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract2
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnInteract2(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnInteract2");

	Params::BP_CampBonfire_C_OnInteract2 Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnInteract3
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnInteract3(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnInteract3");

	Params::BP_CampBonfire_C_OnInteract3 Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnInteractVehicle
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// int32                                   SitIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    SkipAnimation                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnInteractVehicle");

	Params::BP_CampBonfire_C_OnInteractVehicle Parms{};

	Parms.Player = Player;
	Parms.SitIndex = SitIndex;
	Parms.SkipAnimation = SkipAnimation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnLocalInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnLocalInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnLocalInteract");

	Params::BP_CampBonfire_C_OnLocalInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnLostFocus
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnLostFocus(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnLostFocus");

	Params::BP_CampBonfire_C_OnLostFocus Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnPlaceCamp
// (BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnPlaceCamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnPlaceCamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnSeen
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnSeen(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnSeen");

	Params::BP_CampBonfire_C_OnSeen Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnSquadCheckComplete
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::OnSquadCheckComplete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnSquadCheckComplete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.OnStopInteract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::OnStopInteract(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "OnStopInteract");

	Params::BP_CampBonfire_C_OnStopInteract Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.PreDestroy
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::PreDestroy()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "PreDestroy");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_CampBonfire_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ReceiveTick");

	Params::BP_CampBonfire_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.Release
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::Release(class ASurvivalPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "Release");

	Params::BP_CampBonfire_C_Release Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ReleaseMulti
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::ReleaseMulti()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ReleaseMulti");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.Run Lockpicking
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_CampBonfire_C::Run_Lockpicking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "Run Lockpicking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_CampBonfire.BP_CampBonfire_C.ServerStartCook
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_CampCooking                   Food                                                   (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ABP_CampBonfire_C::ServerStartCook(const struct FS_CampCooking& Food)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "ServerStartCook");

	Params::BP_CampBonfire_C_ServerStartCook Parms{};

	Parms.Food = std::move(Food);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.Set3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::Set3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "Set3DWidgetVisibility");

	Params::BP_CampBonfire_C_Set3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.SetTutorial3DWidgetVisibility
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Visible                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::SetTutorial3DWidgetVisibility(bool Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "SetTutorial3DWidgetVisibility");

	Params::BP_CampBonfire_C_SetTutorial3DWidgetVisibility Parms{};

	Parms.Visible = Visible;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_CampBonfire.BP_CampBonfire_C.SpawnFoodV2
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Param_Name                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// int32                                   Count                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APickableFood_C*                  Food                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::SpawnFoodV2(const class FString& Param_Name, int32 Count, class APickableFood_C** Food)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "SpawnFoodV2");

	Params::BP_CampBonfire_C_SpawnFoodV2 Parms{};

	Parms.Param_Name = std::move(Param_Name);
	Parms.Count = Count;

	UObject::ProcessEvent(Func, &Parms);

	if (Food != nullptr)
		*Food = Parms.Food;
}


// Function BP_CampBonfire.BP_CampBonfire_C.StartIgnite
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ASurvivalPlayer_C*                Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_CampBonfire_C::StartIgnite(class ASurvivalPlayer_C* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_CampBonfire_C", "StartIgnite");

	Params::BP_CampBonfire_C_StartIgnite Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}

}

