#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CarWithZombie

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "DayCycleState_structs.hpp"
#include "Survival_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_ZombieAnimType_structs.hpp"


namespace SDK::Params
{

// Function BP_CarWithZombie.BP_CarWithZombie_C.BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_SpawnTrigger_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'BP_CarWithZombie_C_BndEvt__BP_CarWithZombie_TriggerZone_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.Check Could Spawn
// 0x0060 (0x0060 - 0x0000)
struct BP_CarWithZombie_C_Check_Could_Spawn final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_Check_Could_Spawn) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_Check_Could_Spawn");
static_assert(sizeof(BP_CarWithZombie_C_Check_Could_Spawn) == 0x000060, "Wrong size on BP_CarWithZombie_C_Check_Could_Spawn");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, ReturnValue) == 0x000000, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000001, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, Temp_object_Variable) == 0x000008, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000018, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, K2Node_MakeArray_Array) == 0x000030, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_SphereOverlapActors_OutActors) == 0x000040, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_SphereOverlapActors_ReturnValue) == 0x000050, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_Array_Length_ReturnValue) == 0x000054, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Check_Could_Spawn, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'BP_CarWithZombie_C_Check_Could_Spawn::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.CheckZombieSpawn
// 0x0001 (0x0001 - 0x0000)
struct BP_CarWithZombie_C_CheckZombieSpawn final
{
public:
	bool                                          CallFunc_Check_Could_Spawn_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_CheckZombieSpawn) == 0x000001, "Wrong alignment on BP_CarWithZombie_C_CheckZombieSpawn");
static_assert(sizeof(BP_CarWithZombie_C_CheckZombieSpawn) == 0x000001, "Wrong size on BP_CarWithZombie_C_CheckZombieSpawn");
static_assert(offsetof(BP_CarWithZombie_C_CheckZombieSpawn, CallFunc_Check_Could_Spawn_ReturnValue) == 0x000000, "Member 'BP_CarWithZombie_C_CheckZombieSpawn::CallFunc_Check_Could_Spawn_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.DelayedTriggerZombie
// 0x0008 (0x0008 - 0x0000)
struct BP_CarWithZombie_C_DelayedTriggerZombie final
{
public:
	class AActor*                                 TrigerredActor;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_DelayedTriggerZombie) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_DelayedTriggerZombie");
static_assert(sizeof(BP_CarWithZombie_C_DelayedTriggerZombie) == 0x000008, "Wrong size on BP_CarWithZombie_C_DelayedTriggerZombie");
static_assert(offsetof(BP_CarWithZombie_C_DelayedTriggerZombie, TrigerredActor) == 0x000000, "Member 'BP_CarWithZombie_C_DelayedTriggerZombie::TrigerredActor' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.ExecuteUbergraph_BP_CarWithZombie
// 0x0580 (0x0580 - 0x0000)
struct BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ATDB_GameMode_C*                        K2Node_DynamicCast_AsTDB_Game_Mode;                // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep_1;           // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult_1;          // 0x0040(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AExplosive_Item_C*                      K2Node_DynamicCast_AsExplosive_Item;               // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              K2Node_DynamicCast_AsZombie;                       // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       CallFunc_GetCPPMovementType_ReturnValue;           // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_152[0x6];                                      // 0x0152(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_TrigerredActor;                 // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0178(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0188(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AZombieManager_C*                       CallFunc_GetZombieManager_ZombieManager;           // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0281(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0282(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0283(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Multiply_RotatorFloat_ReturnValue;        // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_CustomEvent_Other_Actor;                    // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0330(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_378[0x8];                                      // 0x0378(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0380(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombieCarTrigger_C*                    CallFunc_FinishSpawningActor_ReturnValue;          // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue_1;   // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0438(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AActor*                                 K2Node_CustomEvent_OtherActor;                     // 0x0520(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              K2Node_DynamicCast_AsZombie_1;                     // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_531[0x7];                                      // 0x0531(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AExplosive_Item_C*                      K2Node_DynamicCast_AsExplosive_Item_1;             // 0x0538(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0540(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_541[0x7];                                      // 0x0541(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	Survival::EMovementType                       CallFunc_GetCPPMovementType_ReturnValue_1;         // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_RotationStartZ_ImplicitCast;    // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0578(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie) == 0x000010, "Wrong alignment on BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie");
static_assert(sizeof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie) == 0x000580, "Wrong size on BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, EntryPoint) == 0x000000, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetGameMode_ReturnValue) == 0x000008, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsTDB_Game_Mode) == 0x000010, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsTDB_Game_Mode' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_IsValid_ReturnValue_1) == 0x00001A, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000020, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000028, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000030, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000038, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_bFromSweep_1) == 0x00003C, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_bFromSweep_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_SweepResult_1) == 0x000040, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_SweepResult_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsExplosive_Item) == 0x000128, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsExplosive_Item' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_1) == 0x000130, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsZombie) == 0x000138, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsZombie' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_2) == 0x000140, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetOwner_ReturnValue) == 0x000148, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetCPPMovementType_ReturnValue) == 0x000150, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetCPPMovementType_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000151, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_CustomEvent_TrigerredActor) == 0x000158, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_CustomEvent_TrigerredActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_IsValid_ReturnValue_2) == 0x000160, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000161, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000168, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherActor) == 0x000170, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherComp) == 0x000178, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000180, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_bFromSweep) == 0x000184, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_ComponentBoundEvent_SweepResult) == 0x000188, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetZombieManager_ZombieManager) == 0x000270, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetZombieManager_ZombieManager' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000278, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_3) == 0x000280, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_IsValid_ReturnValue_3) == 0x000281, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_HasAuthority_ReturnValue) == 0x000282, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_IsValid_ReturnValue_4) == 0x000283, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000288, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Multiply_RotatorFloat_ReturnValue) == 0x0002A0, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Multiply_RotatorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0002B8, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_ComposeRotators_ReturnValue) == 0x0002D0, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_BreakRotator_Roll) == 0x0002E8, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_BreakRotator_Pitch) == 0x0002EC, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_BreakRotator_Yaw) == 0x0002F0, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Abs_ReturnValue) == 0x0002F8, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_CustomEvent_Other_Actor) == 0x000300, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_CustomEvent_Other_Actor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x000308, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_4) == 0x000310, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000318, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000330, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Add_VectorVector_ReturnValue) == 0x000348, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_MakeRotator_ReturnValue) == 0x000360, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_MakeTransform_ReturnValue) == 0x000380, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003E0, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003E8, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0003F8, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetGenerateOverlapEvents_ReturnValue_1) == 0x000400, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetGenerateOverlapEvents_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_MakeRotator_ReturnValue_1) == 0x000408, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_ComposeRotators_ReturnValue_1) == 0x000420, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000438, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_CustomEvent_OtherActor) == 0x000520, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_CustomEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsZombie_1) == 0x000528, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsZombie_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_5) == 0x000530, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_AsExplosive_Item_1) == 0x000538, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_AsExplosive_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_DynamicCast_bSuccess_6) == 0x000540, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetOwner_ReturnValue_1) == 0x000548, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_GetCPPMovementType_ReturnValue_1) == 0x000550, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_GetCPPMovementType_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000551, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Abs_A_ImplicitCast) == 0x000558, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, K2Node_VariableSet_RotationStartZ_ImplicitCast) == 0x000560, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::K2Node_VariableSet_RotationStartZ_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000568, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000570, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000578, "Member 'BP_CarWithZombie_C_ExecuteUbergraph_BP_CarWithZombie::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.GenerateDayMeshType
// 0x0030 (0x0030 - 0x0000)
struct BP_CarWithZombie_C_GenerateDayMeshType final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedMeshType;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_GenerateDayMeshType) == 0x000004, "Wrong alignment on BP_CarWithZombie_C_GenerateDayMeshType");
static_assert(sizeof(BP_CarWithZombie_C_GenerateDayMeshType) == 0x000030, "Wrong size on BP_CarWithZombie_C_GenerateDayMeshType");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, MeshType) == 0x000000, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, GeneratedMeshType) == 0x000004, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::GeneratedMeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, Param_Index) == 0x000008, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, Temp_int_Variable) == 0x00000C, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_Array_Length_ReturnValue) == 0x00001C, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000020, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_Array_Get_Item) == 0x000024, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_Array_Length_ReturnValue_1) == 0x000028, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateDayMeshType, CallFunc_RandomInteger_ReturnValue) == 0x00002C, "Member 'BP_CarWithZombie_C_GenerateDayMeshType::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.GenerateNightMeshType
// 0x0030 (0x0030 - 0x0000)
struct BP_CarWithZombie_C_GenerateNightMeshType final
{
public:
	int32                                         MeshType;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         GeneratedMeshType;                                 // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_Index;                                       // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomInteger_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Get_Item;                           // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_GenerateNightMeshType) == 0x000004, "Wrong alignment on BP_CarWithZombie_C_GenerateNightMeshType");
static_assert(sizeof(BP_CarWithZombie_C_GenerateNightMeshType) == 0x000030, "Wrong size on BP_CarWithZombie_C_GenerateNightMeshType");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, MeshType) == 0x000000, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::MeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, GeneratedMeshType) == 0x000004, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::GeneratedMeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, Param_Index) == 0x000008, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::Param_Index' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, Temp_int_Variable) == 0x00000C, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_RandomInteger_ReturnValue) == 0x00001C, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_RandomInteger_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_Array_Length_ReturnValue_1) == 0x000024, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000028, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_GenerateNightMeshType, CallFunc_Array_Get_Item) == 0x00002C, "Member 'BP_CarWithZombie_C_GenerateNightMeshType::CallFunc_Array_Get_Item' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.InitializeLootPoints
// 0x0060 (0x0060 - 0x0000)
struct BP_CarWithZombie_C_InitializeLootPoints final
{
public:
	class ALootPoint_C*                           LootPoint;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* InteractedActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ALootPoint_C*                           K2Node_DynamicCast_AsLoot_Point;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_InitializeLootPoints) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_InitializeLootPoints");
static_assert(sizeof(BP_CarWithZombie_C_InitializeLootPoints) == 0x000060, "Wrong size on BP_CarWithZombie_C_InitializeLootPoints");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, LootPoint) == 0x000000, "Member 'BP_CarWithZombie_C_InitializeLootPoints::LootPoint' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, Temp_int_Array_Index_Variable) == 0x000008, "Member 'BP_CarWithZombie_C_InitializeLootPoints::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CarWithZombie_C_InitializeLootPoints::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_CarWithZombie_C_InitializeLootPoints::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_GetAllChildActors_ChildActors) == 0x000028, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_Array_Add_ReturnValue) == 0x000038, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_Array_Get_Item) == 0x000040, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, K2Node_DynamicCast_AsLoot_Point) == 0x000050, "Member 'BP_CarWithZombie_C_InitializeLootPoints::K2Node_DynamicCast_AsLoot_Point' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'BP_CarWithZombie_C_InitializeLootPoints::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_InitializeLootPoints, CallFunc_Less_IntInt_ReturnValue) == 0x000059, "Member 'BP_CarWithZombie_C_InitializeLootPoints::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.NightZombieChance
// 0x0003 (0x0003 - 0x0000)
struct BP_CarWithZombie_C_NightZombieChance final
{
public:
	bool                                          CallFunc_GetChanceIsLowerThan_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDayCycleState                                CallFunc_GetDayCycleState_ReturnValue;             // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_NightZombieChance) == 0x000001, "Wrong alignment on BP_CarWithZombie_C_NightZombieChance");
static_assert(sizeof(BP_CarWithZombie_C_NightZombieChance) == 0x000003, "Wrong size on BP_CarWithZombie_C_NightZombieChance");
static_assert(offsetof(BP_CarWithZombie_C_NightZombieChance, CallFunc_GetChanceIsLowerThan_ReturnValue) == 0x000000, "Member 'BP_CarWithZombie_C_NightZombieChance::CallFunc_GetChanceIsLowerThan_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_NightZombieChance, CallFunc_GetDayCycleState_ReturnValue) == 0x000001, "Member 'BP_CarWithZombie_C_NightZombieChance::CallFunc_GetDayCycleState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_NightZombieChance, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'BP_CarWithZombie_C_NightZombieChance::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.OnBoxOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_CarWithZombie_C_OnBoxOverlap final
{
public:
	class AActor*                                 Other_Actor;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_OnBoxOverlap) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_OnBoxOverlap");
static_assert(sizeof(BP_CarWithZombie_C_OnBoxOverlap) == 0x000008, "Wrong size on BP_CarWithZombie_C_OnBoxOverlap");
static_assert(offsetof(BP_CarWithZombie_C_OnBoxOverlap, Other_Actor) == 0x000000, "Member 'BP_CarWithZombie_C_OnBoxOverlap::Other_Actor' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.OnInteracted
// 0x0008 (0x0008 - 0x0000)
struct BP_CarWithZombie_C_OnInteracted final
{
public:
	class AActor*                                 InteractedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_OnInteracted) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_OnInteracted");
static_assert(sizeof(BP_CarWithZombie_C_OnInteracted) == 0x000008, "Wrong size on BP_CarWithZombie_C_OnInteracted");
static_assert(offsetof(BP_CarWithZombie_C_OnInteracted, InteractedActor) == 0x000000, "Member 'BP_CarWithZombie_C_OnInteracted::InteractedActor' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.OnSphereOverlap
// 0x0008 (0x0008 - 0x0000)
struct BP_CarWithZombie_C_OnSphereOverlap final
{
public:
	class AActor*                                 OtherActor;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_OnSphereOverlap) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_OnSphereOverlap");
static_assert(sizeof(BP_CarWithZombie_C_OnSphereOverlap) == 0x000008, "Wrong size on BP_CarWithZombie_C_OnSphereOverlap");
static_assert(offsetof(BP_CarWithZombie_C_OnSphereOverlap, OtherActor) == 0x000000, "Member 'BP_CarWithZombie_C_OnSphereOverlap::OtherActor' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.SetLinkedQuests
// 0x0010 (0x0010 - 0x0000)
struct BP_CarWithZombie_C_SetLinkedQuests final
{
public:
	TArray<class UQuest*>                         Param_LinkedQuests;                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_CarWithZombie_C_SetLinkedQuests) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_SetLinkedQuests");
static_assert(sizeof(BP_CarWithZombie_C_SetLinkedQuests) == 0x000010, "Wrong size on BP_CarWithZombie_C_SetLinkedQuests");
static_assert(offsetof(BP_CarWithZombie_C_SetLinkedQuests, Param_LinkedQuests) == 0x000000, "Member 'BP_CarWithZombie_C_SetLinkedQuests::Param_LinkedQuests' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.SetupCooldownTimer
// 0x0028 (0x0028 - 0x0000)
struct BP_CarWithZombie_C_SetupCooldownTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsValidTimerHandle_ReturnValue;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_SetupCooldownTimer) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_SetupCooldownTimer");
static_assert(sizeof(BP_CarWithZombie_C_SetupCooldownTimer) == 0x000028, "Wrong size on BP_CarWithZombie_C_SetupCooldownTimer");
static_assert(offsetof(BP_CarWithZombie_C_SetupCooldownTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CarWithZombie_C_SetupCooldownTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetupCooldownTimer, CallFunc_K2_IsValidTimerHandle_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_SetupCooldownTimer::CallFunc_K2_IsValidTimerHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetupCooldownTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_CarWithZombie_C_SetupCooldownTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetupCooldownTimer, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000020, "Member 'BP_CarWithZombie_C_SetupCooldownTimer::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.SetZombieDoorLootPoint
// 0x0038 (0x0038 - 0x0000)
struct BP_CarWithZombie_C_SetZombieDoorLootPoint final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0014(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ALootPoint_C*                           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ActorHasTag_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_SetZombieDoorLootPoint) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_SetZombieDoorLootPoint");
static_assert(sizeof(BP_CarWithZombie_C_SetZombieDoorLootPoint) == 0x000038, "Wrong size on BP_CarWithZombie_C_SetZombieDoorLootPoint");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, K2Node_CreateDelegate_OutputDelegate) == 0x000014, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_SetZombieDoorLootPoint, CallFunc_ActorHasTag_ReturnValue) == 0x000032, "Member 'BP_CarWithZombie_C_SetZombieDoorLootPoint::CallFunc_ActorHasTag_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.Spawn Zombie
// 0x0110 (0x0110 - 0x0000)
struct BP_CarWithZombie_C_Spawn_Zombie final
{
public:
	class ABP_Door_C*                             DummyDoor;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	EZombieType                                   ZombieTypeCPP;                                     // 0x0008(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_ZombieAnimType                              ZombieAnimType;                                    // 0x0009(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ZombieMeshType;                                    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetGenerateOverlapEvents_ReturnValue;     // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATargetPoint*>                   K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GenerateDayMeshType_MeshType;             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GenerateNightMeshType_MeshType;           // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class AActor* SenseSourceActor)> K2Node_CreateDelegate_OutputDelegate;              // 0x0034(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0xC];                                       // 0x0044(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00F8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              CallFunc_RequestSpawnOfZombie_SpawnedZombie;       // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_Spawn_Zombie) == 0x000010, "Wrong alignment on BP_CarWithZombie_C_Spawn_Zombie");
static_assert(sizeof(BP_CarWithZombie_C_Spawn_Zombie) == 0x000110, "Wrong size on BP_CarWithZombie_C_Spawn_Zombie");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, DummyDoor) == 0x000000, "Member 'BP_CarWithZombie_C_Spawn_Zombie::DummyDoor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, ZombieTypeCPP) == 0x000008, "Member 'BP_CarWithZombie_C_Spawn_Zombie::ZombieTypeCPP' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, ZombieAnimType) == 0x000009, "Member 'BP_CarWithZombie_C_Spawn_Zombie::ZombieAnimType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, ZombieMeshType) == 0x00000C, "Member 'BP_CarWithZombie_C_Spawn_Zombie::ZombieMeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_GetGenerateOverlapEvents_ReturnValue) == 0x000011, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_GetGenerateOverlapEvents_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, K2Node_MakeArray_Array) == 0x000018, "Member 'BP_CarWithZombie_C_Spawn_Zombie::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_DoesSocketExist_ReturnValue) == 0x000028, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_GenerateDayMeshType_MeshType) == 0x00002C, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_GenerateDayMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_GenerateNightMeshType_MeshType) == 0x000030, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_GenerateNightMeshType_MeshType' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, K2Node_CreateDelegate_OutputDelegate) == 0x000034, "Member 'BP_CarWithZombie_C_Spawn_Zombie::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_BreakTransform_Location) == 0x0000B0, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_BreakTransform_Rotation) == 0x0000C8, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_BreakTransform_Scale) == 0x0000E0, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000F8, "Member 'BP_CarWithZombie_C_Spawn_Zombie::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_Spawn_Zombie, CallFunc_RequestSpawnOfZombie_SpawnedZombie) == 0x000108, "Member 'BP_CarWithZombie_C_Spawn_Zombie::CallFunc_RequestSpawnOfZombie_SpawnedZombie' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.TriggerZombie
// 0x0010 (0x0010 - 0x0000)
struct BP_CarWithZombie_C_TriggerZombie final
{
public:
	class AActor*                                 InteractedActor;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_TriggerZombie) == 0x000008, "Wrong alignment on BP_CarWithZombie_C_TriggerZombie");
static_assert(sizeof(BP_CarWithZombie_C_TriggerZombie) == 0x000010, "Wrong size on BP_CarWithZombie_C_TriggerZombie");
static_assert(offsetof(BP_CarWithZombie_C_TriggerZombie, InteractedActor) == 0x000000, "Member 'BP_CarWithZombie_C_TriggerZombie::InteractedActor' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_TriggerZombie, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'BP_CarWithZombie_C_TriggerZombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.UserConstructionScript
// 0x00E0 (0x00E0 - 0x0000)
struct BP_CarWithZombie_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllChildActors_ChildActors;            // 0x0018(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_DoorNavModifier_C> K2Node_DynamicCast_AsBPI_Door_Nav_Modifier;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0050(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UStaticMeshComponent*>           CallFunc_GetComponentsByTag_ReturnValue;           // 0x00B8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_UserConstructionScript) == 0x000010, "Wrong alignment on BP_CarWithZombie_C_UserConstructionScript");
static_assert(sizeof(BP_CarWithZombie_C_UserConstructionScript) == 0x0000E0, "Wrong size on BP_CarWithZombie_C_UserConstructionScript");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, Temp_bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'BP_CarWithZombie_C_UserConstructionScript::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000004, "Member 'BP_CarWithZombie_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'BP_CarWithZombie_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_GetAllChildActors_ChildActors) == 0x000018, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_GetAllChildActors_ChildActors' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, K2Node_DynamicCast_AsBPI_Door_Nav_Modifier) == 0x000038, "Member 'BP_CarWithZombie_C_UserConstructionScript::K2Node_DynamicCast_AsBPI_Door_Nav_Modifier' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'BP_CarWithZombie_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000049, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_DoesImplementInterface_ReturnValue) == 0x00004A, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_BooleanAND_ReturnValue) == 0x00004B, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_GetSocketTransform_ReturnValue) == 0x000050, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_DoesSocketExist_ReturnValue) == 0x0000B0, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_GetComponentsByTag_ReturnValue) == 0x0000B8, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_CarWithZombie_C_UserConstructionScript, CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast) == 0x0000D0, "Member 'BP_CarWithZombie_C_UserConstructionScript::CallFunc_SetSphereRadius_InSphereRadius_ImplicitCast' has a wrong offset!");

// Function BP_CarWithZombie.BP_CarWithZombie_C.ZombieDied
// 0x0010 (0x0010 - 0x0000)
struct BP_CarWithZombie_C_ZombieDied final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_CarWithZombie_C_ZombieDied) == 0x000004, "Wrong alignment on BP_CarWithZombie_C_ZombieDied");
static_assert(sizeof(BP_CarWithZombie_C_ZombieDied) == 0x000010, "Wrong size on BP_CarWithZombie_C_ZombieDied");
static_assert(offsetof(BP_CarWithZombie_C_ZombieDied, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'BP_CarWithZombie_C_ZombieDied::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");

}

