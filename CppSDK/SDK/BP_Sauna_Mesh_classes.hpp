#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Sauna_Mesh

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_Sauna_Mesh.BP_Sauna_Mesh_C
// 0x0050 (0x02E0 - 0x0290)
class ABP_Sauna_Mesh_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USkeletalMeshComponent*                 Hair2;                                             // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Pants;                                             // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 beard;                                             // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Hair;                                              // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Outerwear;                                         // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Surv_Ref;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_Sauna_Entering_C*                   Entering;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_Sauna_Mesh(int32 EntryPoint);
	void Head_Customization();
	void Mesh_Update(class ASurvivalPlayer_C* SurvRef);
	void MeshCheck();
	void SetMaterial(const struct FS_SaveStructure& Save, class USkeletalMeshComponent* Outwear, class USkeletalMeshComponent* Param_Pants);
	void SetMeshMaterial(class UMeshComponent* GetMat, class UPrimitiveComponent* Target);
	void SetSkeletalCloth(class USkeletalMeshComponent* SMRef, TSoftObjectPtr<class USkeletalMesh> SSMRef);
	class UMaterialInterface* Skin_Tone(float Value, class USkeletalMeshComponent* SelfComp, class USkeletalMeshComponent* SurvComp);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_Sauna_Mesh_C">();
	}
	static class ABP_Sauna_Mesh_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_Sauna_Mesh_C>();
	}
};
static_assert(alignof(ABP_Sauna_Mesh_C) == 0x000008, "Wrong alignment on ABP_Sauna_Mesh_C");
static_assert(sizeof(ABP_Sauna_Mesh_C) == 0x0002E0, "Wrong size on ABP_Sauna_Mesh_C");
static_assert(offsetof(ABP_Sauna_Mesh_C, UberGraphFrame) == 0x000290, "Member 'ABP_Sauna_Mesh_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Hair2) == 0x000298, "Member 'ABP_Sauna_Mesh_C::Hair2' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Pants) == 0x0002A0, "Member 'ABP_Sauna_Mesh_C::Pants' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, beard) == 0x0002A8, "Member 'ABP_Sauna_Mesh_C::beard' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Hair) == 0x0002B0, "Member 'ABP_Sauna_Mesh_C::Hair' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Head) == 0x0002B8, "Member 'ABP_Sauna_Mesh_C::Head' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Outerwear) == 0x0002C0, "Member 'ABP_Sauna_Mesh_C::Outerwear' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Scene) == 0x0002C8, "Member 'ABP_Sauna_Mesh_C::Scene' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Surv_Ref) == 0x0002D0, "Member 'ABP_Sauna_Mesh_C::Surv_Ref' has a wrong offset!");
static_assert(offsetof(ABP_Sauna_Mesh_C, Entering) == 0x0002D8, "Member 'ABP_Sauna_Mesh_C::Entering' has a wrong offset!");

}

