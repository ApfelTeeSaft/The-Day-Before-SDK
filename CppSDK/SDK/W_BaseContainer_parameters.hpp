#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_BaseContainer

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"
#include "SlateCore_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "E_BaseContainerType_structs.hpp"
#include "F_SlotSettings_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_SlotStatus_structs.hpp"


namespace SDK::Params
{

// Function W_BaseContainer.W_BaseContainer_C.AddHostedData
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_AddHostedData final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          RemoveHostFromContainer;                           // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_AddHostedData) == 0x000008, "Wrong alignment on W_BaseContainer_C_AddHostedData");
static_assert(sizeof(W_BaseContainer_C_AddHostedData) == 0x000010, "Wrong size on W_BaseContainer_C_AddHostedData");
static_assert(offsetof(W_BaseContainer_C_AddHostedData, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_AddHostedData::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddHostedData, RemoveHostFromContainer) == 0x000008, "Member 'W_BaseContainer_C_AddHostedData::RemoveHostFromContainer' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.AddItemBySlotIndex
// 0x02C8 (0x02C8 - 0x0000)
struct W_BaseContainer_C_AddItemBySlotIndex final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  Item;                                              // 0x0008(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0070(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0290(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x02BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_AddItemBySlotIndex) == 0x000008, "Wrong alignment on W_BaseContainer_C_AddItemBySlotIndex");
static_assert(sizeof(W_BaseContainer_C_AddItemBySlotIndex) == 0x0002C8, "Wrong size on W_BaseContainer_C_AddItemBySlotIndex");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, Param_Index) == 0x000000, "Member 'W_BaseContainer_C_AddItemBySlotIndex::Param_Index' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, Item) == 0x000008, "Member 'W_BaseContainer_C_AddItemBySlotIndex::Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000070, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_GetChildAt_ReturnValue) == 0x000290, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, K2Node_DynamicCast_AsW_Base_Slot) == 0x000298, "Member 'W_BaseContainer_C_AddItemBySlotIndex::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, K2Node_DynamicCast_bSuccess) == 0x0002A0, "Member 'W_BaseContainer_C_AddItemBySlotIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_BreakVector2D_X) == 0x0002A8, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_BreakVector2D_Y) == 0x0002B0, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_Round_ReturnValue) == 0x0002B8, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_Round_ReturnValue_1) == 0x0002BC, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_SelectInt_ReturnValue) == 0x0002C0, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemBySlotIndex, CallFunc_SelectInt_ReturnValue_1) == 0x0002C4, "Member 'W_BaseContainer_C_AddItemBySlotIndex::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.AddItemSomewhere
// 0x0500 (0x0500 - 0x0000)
struct W_BaseContainer_C_AddItemSomewhere final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         OldIndex;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          NewSlot;                                           // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_Can;                           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanAddItem_ToStack;                       // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0080(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1; // 0x02C0(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_EmptySlotFound_;             // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E1[0x7];                                      // 0x04E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_GetEmptySlot_SlotRef;                     // 0x04E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_GetSlotByItemId_Slot_Ref;                 // 0x04F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotByItemId_SlotFound_;               // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_AddItemSomewhere) == 0x000008, "Wrong alignment on W_BaseContainer_C_AddItemSomewhere");
static_assert(sizeof(W_BaseContainer_C_AddItemSomewhere) == 0x000500, "Wrong size on W_BaseContainer_C_AddItemSomewhere");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, Item) == 0x000000, "Member 'W_BaseContainer_C_AddItemSomewhere::Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, NewIndex) == 0x000068, "Member 'W_BaseContainer_C_AddItemSomewhere::NewIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, OldIndex) == 0x00006C, "Member 'W_BaseContainer_C_AddItemSomewhere::OldIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, NewSlot) == 0x000070, "Member 'W_BaseContainer_C_AddItemSomewhere::NewSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_CanAddItem_Can) == 0x000078, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_CanAddItem_Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_CanAddItem_ToStack) == 0x000079, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_CanAddItem_ToStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000080, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_BreakVector2D_X) == 0x0002A0, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_BreakVector2D_Y) == 0x0002A8, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_GetSlotIndex_SlotIndex) == 0x0002B0, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_Round_ReturnValue) == 0x0002B4, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_Round_ReturnValue_1) == 0x0002B8, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_Round_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1) == 0x0002C0, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_GetEmptySlot_EmptySlotFound_) == 0x0004E0, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_GetEmptySlot_EmptySlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_GetEmptySlot_SlotRef) == 0x0004E8, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_GetEmptySlot_SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_GetSlotByItemId_Slot_Ref) == 0x0004F0, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_GetSlotByItemId_Slot_Ref' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddItemSomewhere, CallFunc_GetSlotByItemId_SlotFound_) == 0x0004F8, "Member 'W_BaseContainer_C_AddItemSomewhere::CallFunc_GetSlotByItemId_SlotFound_' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.AddSplitedItemToSlot
// 0x00F8 (0x00F8 - 0x0000)
struct W_BaseContainer_C_AddSplitedItemToSlot final
{
public:
	int32                                         SplitCount;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipientSlotIndex;                                // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SenderSlotIndex;                                   // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  NewItemData;                                       // 0x0018(0x0068)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_Copy_ReturnValue;                           // 0x0088(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_AddSplitedItemToSlot) == 0x000008, "Wrong alignment on W_BaseContainer_C_AddSplitedItemToSlot");
static_assert(sizeof(W_BaseContainer_C_AddSplitedItemToSlot) == 0x0000F8, "Wrong size on W_BaseContainer_C_AddSplitedItemToSlot");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, SplitCount) == 0x000000, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::SplitCount' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, RecipientSlotIndex) == 0x000010, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::RecipientSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, SenderSlotIndex) == 0x000014, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::SenderSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, NewItemData) == 0x000018, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::NewItemData' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x000080, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, K2Node_Copy_ReturnValue) == 0x000088, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_AddSplitedItemToSlot, CallFunc_GetSlotIndex_SlotIndex) == 0x0000F0, "Member 'W_BaseContainer_C_AddSplitedItemToSlot::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.BindSplitWidgetEvents
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_BindSplitWidgetEvents final
{
public:
	class UW_BaseSplitWidget_C*                   SplitWidget;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_BindSplitWidgetEvents) == 0x000008, "Wrong alignment on W_BaseContainer_C_BindSplitWidgetEvents");
static_assert(sizeof(W_BaseContainer_C_BindSplitWidgetEvents) == 0x000008, "Wrong size on W_BaseContainer_C_BindSplitWidgetEvents");
static_assert(offsetof(W_BaseContainer_C_BindSplitWidgetEvents, SplitWidget) == 0x000000, "Member 'W_BaseContainer_C_BindSplitWidgetEvents::SplitWidget' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CalculateHighlighterDim
// 0x0088 (0x0088 - 0x0000)
struct W_BaseContainer_C_CalculateHighlighterDim final
{
public:
	TArray<class UW_BaseSlot_C*>                  Slots;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector2D                              Dimention;                                         // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item_1;                         // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex__1;    // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex__1;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CalculateHighlighterDim) == 0x000008, "Wrong alignment on W_BaseContainer_C_CalculateHighlighterDim");
static_assert(sizeof(W_BaseContainer_C_CalculateHighlighterDim) == 0x000088, "Wrong size on W_BaseContainer_C_CalculateHighlighterDim");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, Slots) == 0x000000, "Member 'W_BaseContainer_C_CalculateHighlighterDim::Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, Dimention) == 0x000010, "Member 'W_BaseContainer_C_CalculateHighlighterDim::Dimention' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Subtract_IntInt_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotIndex_SlotIndex) == 0x000034, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Array_Get_Item_1) == 0x000038, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000040, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000044, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotIndex_SlotIndex_1) == 0x000048, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotIndex_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotLocationByIndex_ColumnIndex__1) == 0x00004C, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotLocationByIndex_ColumnIndex__1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_GetSlotLocationByIndex_RowIndex__1) == 0x000050, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_GetSlotLocationByIndex_RowIndex__1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000054, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000058, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Add_IntInt_ReturnValue) == 0x00005C, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterDim, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_CalculateHighlighterDim::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CalculateHighlighterPosition
// 0x0070 (0x0070 - 0x0000)
struct W_BaseContainer_C_CalculateHighlighterPosition final
{
public:
	TArray<class UW_BaseSlot_C*>                  HighlightedSlots;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector2D                              ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_2;            // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_3;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CalculateHighlighterPosition) == 0x000008, "Wrong alignment on W_BaseContainer_C_CalculateHighlighterPosition");
static_assert(sizeof(W_BaseContainer_C_CalculateHighlighterPosition) == 0x000070, "Wrong size on W_BaseContainer_C_CalculateHighlighterPosition");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, HighlightedSlots) == 0x000000, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::HighlightedSlots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Array_Get_Item) == 0x000020, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_GetSlotIndex_SlotIndex) == 0x000028, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x00002C, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000030, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Multiply_IntInt_ReturnValue) == 0x000034, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000038, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Multiply_IntInt_ReturnValue_2) == 0x00003C, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Multiply_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Multiply_IntInt_ReturnValue_3) == 0x000040, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Multiply_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Add_IntInt_ReturnValue_1) == 0x000048, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000050, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000058, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterPosition, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_CalculateHighlighterPosition::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Can Drop On Slot
// 0x0050 (0x0050 - 0x0000)
struct W_BaseContainer_C_Can_Drop_On_Slot final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHostedItemRotate__Rotated;              // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ContainerOwner_C>   K2Node_DynamicCast_AsI_Container_Owner;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDrop_Can;                              // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSizeOfHostedItem_X;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSizeOfHostedItem_Y;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FindAndCheckTargetLocation_CanDrop;       // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindAndCheckTargetLocation_TargetSlotsArray; // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Can_Drop_On_Slot) == 0x000008, "Wrong alignment on W_BaseContainer_C_Can_Drop_On_Slot");
static_assert(sizeof(W_BaseContainer_C_Can_Drop_On_Slot) == 0x000050, "Wrong size on W_BaseContainer_C_Can_Drop_On_Slot");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, SenderContainer) == 0x000000, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::SenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, Can) == 0x000010, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_IsHostedItemRotate__Rotated) == 0x000011, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_IsHostedItemRotate__Rotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, K2Node_DynamicCast_AsI_Container_Owner) == 0x000018, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::K2Node_DynamicCast_AsI_Container_Owner' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_IsValid_ReturnValue) == 0x000029, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_CanDrop_Can) == 0x00002A, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_CanDrop_Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_DoesImplementInterface_ReturnValue) == 0x00002B, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_GetSizeOfHostedItem_X) == 0x00002C, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_GetSizeOfHostedItem_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_GetSizeOfHostedItem_Y) == 0x000030, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_GetSizeOfHostedItem_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_FindAndCheckTargetLocation_CanDrop) == 0x000034, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_FindAndCheckTargetLocation_CanDrop' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_FindAndCheckTargetLocation_TargetSlotsArray) == 0x000038, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_FindAndCheckTargetLocation_TargetSlotsArray' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Drop_On_Slot, CallFunc_BooleanAND_ReturnValue) == 0x000048, "Member 'W_BaseContainer_C_Can_Drop_On_Slot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Can Stack On Slot
// 0x0290 (0x0290 - 0x0000)
struct W_BaseContainer_C_Can_Stack_On_Slot final
{
public:
	struct FFItemInfo                             SenderItemInfo;                                    // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSizeX;                                         // 0x0228(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSizeY;                                         // 0x022C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0230(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Canstack;                                          // 0x0231(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  TargetSlotsArray;                                  // 0x0238(0x0010)(Parm, OutParm, ContainsInstancedReference)
	TArray<class UW_BaseSlot_C*>                  SlotsArray;                                        // 0x0248(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0264(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemId_ItemID;                         // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26C[0x4];                                      // 0x026C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindEnvirons_Slots;                       // 0x0270(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_MaxStack;                        // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanStack_CanStack;                        // 0x028C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x028D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Can_Stack_On_Slot) == 0x000008, "Wrong alignment on W_BaseContainer_C_Can_Stack_On_Slot");
static_assert(sizeof(W_BaseContainer_C_Can_Stack_On_Slot) == 0x000290, "Wrong size on W_BaseContainer_C_Can_Stack_On_Slot");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, SenderItemInfo) == 0x000000, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::SenderItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, RecipientSlot) == 0x000220, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, ItemSizeX) == 0x000228, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::ItemSizeX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, ItemSizeY) == 0x00022C, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::ItemSizeY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, IsRotated) == 0x000230, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, Canstack) == 0x000231, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::Canstack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, TargetSlotsArray) == 0x000238, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::TargetSlotsArray' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, SlotsArray) == 0x000248, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::SlotsArray' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_SelectInt_ReturnValue) == 0x000258, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_SelectInt_ReturnValue_1) == 0x00025C, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_Array_Add_ReturnValue) == 0x000260, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_GetSlotIndex_SlotIndex) == 0x000264, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_GetItemId_ItemID) == 0x000268, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_GetItemId_ItemID' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_FindEnvirons_Slots) == 0x000270, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_FindEnvirons_Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000280, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_GetCount_MaxStack) == 0x000284, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_GetCount_MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_GetCount_Count) == 0x000288, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_CanStack_CanStack) == 0x00028C, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_CanStack_CanStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Can_Stack_On_Slot, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00028D, "Member 'W_BaseContainer_C_Can_Stack_On_Slot::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CanDrag
// 0x0028 (0x0028 - 0x0000)
struct W_BaseContainer_C_CanDrag final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasItem_Has;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ContainerOwner_C>   K2Node_DynamicCast_AsI_Container_Owner;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDrag_can;                              // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CanDrag) == 0x000008, "Wrong alignment on W_BaseContainer_C_CanDrag");
static_assert(sizeof(W_BaseContainer_C_CanDrag) == 0x000028, "Wrong size on W_BaseContainer_C_CanDrag");
static_assert(offsetof(W_BaseContainer_C_CanDrag, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_CanDrag::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, Can) == 0x000008, "Member 'W_BaseContainer_C_CanDrag::Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_HasItem_Has) == 0x000009, "Member 'W_BaseContainer_C_CanDrag::CallFunc_HasItem_Has' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'W_BaseContainer_C_CanDrag::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_DoesImplementInterface_ReturnValue) == 0x00000B, "Member 'W_BaseContainer_C_CanDrag::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00000C, "Member 'W_BaseContainer_C_CanDrag::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, K2Node_DynamicCast_AsI_Container_Owner) == 0x000010, "Member 'W_BaseContainer_C_CanDrag::K2Node_DynamicCast_AsI_Container_Owner' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'W_BaseContainer_C_CanDrag::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000021, "Member 'W_BaseContainer_C_CanDrag::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_BooleanOR_ReturnValue) == 0x000022, "Member 'W_BaseContainer_C_CanDrag::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_BooleanAND_ReturnValue) == 0x000023, "Member 'W_BaseContainer_C_CanDrag::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDrag, CallFunc_CanDrag_can) == 0x000024, "Member 'W_BaseContainer_C_CanDrag::CallFunc_CanDrag_can' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CanDragItem
// 0x0030 (0x0030 - 0x0000)
struct W_BaseContainer_C_CanDragItem final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPanelWidget*                           CallFunc_GetParent_ReturnValue;                    // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_ContainerOwner_C>   K2Node_DynamicCast_AsI_Container_Owner;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDrag_can;                              // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CanDragItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_CanDragItem");
static_assert(sizeof(W_BaseContainer_C_CanDragItem) == 0x000030, "Wrong size on W_BaseContainer_C_CanDragItem");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_CanDragItem::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, CallFunc_GetParent_ReturnValue) == 0x000008, "Member 'W_BaseContainer_C_CanDragItem::CallFunc_GetParent_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, CallFunc_DoesImplementInterface_ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_CanDragItem::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, K2Node_DynamicCast_AsI_Container_Owner) == 0x000018, "Member 'W_BaseContainer_C_CanDragItem::K2Node_DynamicCast_AsI_Container_Owner' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_BaseContainer_C_CanDragItem::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanDragItem, CallFunc_CanDrag_can) == 0x000029, "Member 'W_BaseContainer_C_CanDragItem::CallFunc_CanDrag_can' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ChangeCountOfHostedItem
// 0x0004 (0x0004 - 0x0000)
struct W_BaseContainer_C_ChangeCountOfHostedItem final
{
public:
	int32                                         NewCount;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ChangeCountOfHostedItem) == 0x000004, "Wrong alignment on W_BaseContainer_C_ChangeCountOfHostedItem");
static_assert(sizeof(W_BaseContainer_C_ChangeCountOfHostedItem) == 0x000004, "Wrong size on W_BaseContainer_C_ChangeCountOfHostedItem");
static_assert(offsetof(W_BaseContainer_C_ChangeCountOfHostedItem, NewCount) == 0x000000, "Member 'W_BaseContainer_C_ChangeCountOfHostedItem::NewCount' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ChangeItemCount
// 0x0018 (0x0018 - 0x0000)
struct W_BaseContainer_C_ChangeItemCount final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewCount;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Map_Find_Value;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ChangeItemCount) == 0x000008, "Wrong alignment on W_BaseContainer_C_ChangeItemCount");
static_assert(sizeof(W_BaseContainer_C_ChangeItemCount) == 0x000018, "Wrong size on W_BaseContainer_C_ChangeItemCount");
static_assert(offsetof(W_BaseContainer_C_ChangeItemCount, SlotIndex) == 0x000000, "Member 'W_BaseContainer_C_ChangeItemCount::SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ChangeItemCount, NewCount) == 0x000004, "Member 'W_BaseContainer_C_ChangeItemCount::NewCount' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ChangeItemCount, CallFunc_Map_Find_Value) == 0x000008, "Member 'W_BaseContainer_C_ChangeItemCount::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ChangeItemCount, CallFunc_Map_Find_ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_ChangeItemCount::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ClearContainer
// 0x0048 (0x0048 - 0x0000)
struct W_BaseContainer_C_ClearContainer final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ClearContainer) == 0x000008, "Wrong alignment on W_BaseContainer_C_ClearContainer");
static_assert(sizeof(W_BaseContainer_C_ClearContainer) == 0x000048, "Wrong size on W_BaseContainer_C_ClearContainer");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, Temp_int_Array_Index_Variable) == 0x000000, "Member 'W_BaseContainer_C_ClearContainer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'W_BaseContainer_C_ClearContainer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'W_BaseContainer_C_ClearContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, CallFunc_GetAllChildren_ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_ClearContainer::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_ClearContainer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_BaseContainer_C_ClearContainer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_ClearContainer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, K2Node_DynamicCast_AsW_Base_Slot) == 0x000038, "Member 'W_BaseContainer_C_ClearContainer::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ClearContainer, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_BaseContainer_C_ClearContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ContainerEvent_ItemIndexChanged__DelegateSignature
// 0x000C (0x000C - 0x0000)
struct W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature final
{
public:
	E_BaseContainerType                           Param_ContainerType;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         OldIndex;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature) == 0x000004, "Wrong alignment on W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature) == 0x00000C, "Wrong size on W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature, Param_ContainerType) == 0x000000, "Member 'W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature::Param_ContainerType' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature, OldIndex) == 0x000004, "Member 'W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature::OldIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature, NewIndex) == 0x000008, "Member 'W_BaseContainer_C_ContainerEvent_ItemIndexChanged__DelegateSignature::NewIndex' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ContainerEvent_SplitItemBetweenSlots__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature final
{
public:
	E_BaseContainerType                           Param_ContainerType;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SenderSlotIndex;                                   // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipientSlotIndex;                                // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SplitCount;                                        // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature) == 0x000004, "Wrong alignment on W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature) == 0x000010, "Wrong size on W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature, Param_ContainerType) == 0x000000, "Member 'W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature::Param_ContainerType' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature, SenderSlotIndex) == 0x000004, "Member 'W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature::SenderSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature, RecipientSlotIndex) == 0x000008, "Member 'W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature::RecipientSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature, SplitCount) == 0x00000C, "Member 'W_BaseContainer_C_ContainerEvent_SplitItemBetweenSlots__DelegateSignature::SplitCount' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CreateGrid
// 0x0050 (0x0050 - 0x0000)
struct W_BaseContainer_C_CreateGrid final
{
public:
	int32                                         CurrentSlotIndex;                                  // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentColumnNumber;                               // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRowNumber;                                  // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUniformGridSlot*                       CallFunc_AddChildToUniformGrid_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CreateGrid) == 0x000008, "Wrong alignment on W_BaseContainer_C_CreateGrid");
static_assert(sizeof(W_BaseContainer_C_CreateGrid) == 0x000050, "Wrong size on W_BaseContainer_C_CreateGrid");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CurrentSlotIndex) == 0x000000, "Member 'W_BaseContainer_C_CreateGrid::CurrentSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CurrentColumnNumber) == 0x000004, "Member 'W_BaseContainer_C_CreateGrid::CurrentColumnNumber' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CurrentRowNumber) == 0x000008, "Member 'W_BaseContainer_C_CreateGrid::CurrentRowNumber' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, Temp_int_Variable) == 0x000018, "Member 'W_BaseContainer_C_CreateGrid::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Create_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, Temp_int_Variable_1) == 0x00002C, "Member 'W_BaseContainer_C_CreateGrid::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, Temp_int_Variable_2) == 0x000034, "Member 'W_BaseContainer_C_CreateGrid::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_AddChildToUniformGrid_ReturnValue) == 0x000038, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_AddChildToUniformGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Add_IntInt_ReturnValue_2) == 0x000040, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Subtract_IntInt_ReturnValue) == 0x000044, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000048, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00004C, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CreateGrid, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x00004D, "Member 'W_BaseContainer_C_CreateGrid::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ExecuteUbergraph_W_BaseContainer
// 0x0380 (0x0380 - 0x0000)
struct W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_CustomEvent_Slot;                           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RemoveHostFromContainer;        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfo_PickupInfo;                 // 0x0018(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  K2Node_Copy_ReturnValue;                           // 0x0088(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent_1;                       // 0x00F0(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation_1;                          // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x0170(0x0078)(ConstParm)
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FContainerPickupsInfo                  K2Node_MakeStruct_ContainerPickupsInfo;            // 0x01F0(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(const struct FFItemInfo& SenderItemInfo, class UW_BaseSlot_C* RecipientSlot)> K2Node_CreateDelegate_OutputDelegate;              // 0x0258(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSplitWidget_C*                   K2Node_CustomEvent_SplitWidget;                    // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Length;                         // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_BaseSlot_C* SlotRef)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0284(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_CustomEvent_SlotRef_1;                      // 0x0298(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_BaseSlot_C* SlotRef, class UW_BaseDragWidget_C* DragWidget)> K2Node_CreateDelegate_OutputDelegate_2;            // 0x02A0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_CustomEvent_SlotRef;                        // 0x02B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseDragWidget_C*                    K2Node_CustomEvent_DragWidget;                     // 0x02B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_BaseContainer_C* SenderContainer, class UW_BaseSlot_C* RecipientSlot)> K2Node_CreateDelegate_OutputDelegate_3;            // 0x02C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_CustomEvent_RecipientSlot_2;                // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseContainer_C*                     K2Node_CustomEvent_SenderContainer_3;              // 0x02D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseContainer_C*                     K2Node_CustomEvent_SenderContainer_2;              // 0x02E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Count;                          // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_CustomEvent_RecipientSlot_1;                // 0x02F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseContainer_C*                     K2Node_CustomEvent_SenderContainer_1;              // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UW_BaseSlot_C* RecipientSlot, class UW_BaseContainer_C* SenderContainer)> K2Node_CreateDelegate_OutputDelegate_4;            // 0x0300(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_ContainerOwner_C>   K2Node_DynamicCast_AsI_Container_Owner;            // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0321(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesImplementInterface_ReturnValue;       // 0x0322(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_323[0x1];                                      // 0x0323(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UW_BaseContainer_C* SenderContainer)> K2Node_CreateDelegate_OutputDelegate_5;            // 0x0324(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(int32 Count, class UW_BaseSlot_C* RecipientSlot, class UW_BaseContainer_C* SenderContainer)> K2Node_CreateDelegate_OutputDelegate_6;            // 0x0334(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_346[0x2];                                      // 0x0346(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseContainer_C*                     K2Node_CustomEvent_SenderContainer;                // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_CustomEvent_RecipientSlot;                  // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SelfTestForSlots_ReturnValue;             // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCountOfHostedItem_Count;               // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0360(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x7];                                      // 0x0369(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSplitWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0370(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer) == 0x000008, "Wrong alignment on W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer");
static_assert(sizeof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer) == 0x000380, "Wrong size on W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, EntryPoint) == 0x000000, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_Slot) == 0x000008, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_RemoveHostFromContainer) == 0x000010, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_RemoveHostFromContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_GetPickupInfo_PickupInfo) == 0x000018, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_GetPickupInfo_PickupInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_GetSlotIndex_SlotIndex) == 0x000080, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Copy_ReturnValue) == 0x000088, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Copy_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Event_PointerEvent_1) == 0x0000F0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Event_PointerEvent_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Event_Operation_1) == 0x000168, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Event_Operation_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Event_PointerEvent) == 0x000170, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Event_Operation) == 0x0001E8, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_MakeStruct_ContainerPickupsInfo) == 0x0001F0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_MakeStruct_ContainerPickupsInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate) == 0x000258, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SplitWidget) == 0x000268, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SplitWidget' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_Length) == 0x000270, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_Length' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Divide_IntInt_ReturnValue) == 0x000274, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Percent_IntInt_ReturnValue) == 0x000278, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Greater_IntInt_ReturnValue) == 0x00027C, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Add_IntInt_ReturnValue) == 0x000280, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_1) == 0x000284, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SlotRef_1) == 0x000298, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SlotRef_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_2) == 0x0002A0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SlotRef) == 0x0002B0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_DragWidget) == 0x0002B8, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_DragWidget' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_3) == 0x0002C0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_RecipientSlot_2) == 0x0002D0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_RecipientSlot_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SenderContainer_3) == 0x0002D8, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SenderContainer_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SenderContainer_2) == 0x0002E0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SenderContainer_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_Count) == 0x0002E8, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_RecipientSlot_1) == 0x0002F0, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_RecipientSlot_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SenderContainer_1) == 0x0002F8, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SenderContainer_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_4) == 0x000300, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_DynamicCast_AsI_Container_Owner) == 0x000310, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_DynamicCast_AsI_Container_Owner' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_DynamicCast_bSuccess) == 0x000320, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_IsValid_ReturnValue) == 0x000321, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_DoesImplementInterface_ReturnValue) == 0x000322, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_DoesImplementInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_5) == 0x000324, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CreateDelegate_OutputDelegate_6) == 0x000334, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CreateDelegate_OutputDelegate_6' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000344, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000345, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_SenderContainer) == 0x000348, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_SenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_CustomEvent_RecipientSlot) == 0x000350, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_CustomEvent_RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_BooleanOR_ReturnValue) == 0x000358, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_SelfTestForSlots_ReturnValue) == 0x000359, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_SelfTestForSlots_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00035A, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_BooleanAND_ReturnValue) == 0x00035B, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_GetCountOfHostedItem_Count) == 0x00035C, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_GetCountOfHostedItem_Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_GetOwningPlayer_ReturnValue) == 0x000360, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000368, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_Create_ReturnValue) == 0x000370, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, CallFunc_BooleanAND_ReturnValue_1) == 0x000378, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, Temp_bool_Variable) == 0x000379, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer, K2Node_Select_Default) == 0x00037C, "Member 'W_BaseContainer_C_ExecuteUbergraph_W_BaseContainer::K2Node_Select_Default' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.FindAndCheckTargetLocation
// 0x00B8 (0x00B8 - 0x0000)
struct W_BaseContainer_C_FindAndCheckTargetLocation final
{
public:
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSizeX;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSizeY;                                         // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Candrop;                                           // 0x0011(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  TargetSlotsArray;                                  // 0x0018(0x0010)(Parm, OutParm, ContainsInstancedReference)
	bool                                          bCanDrop;                                          // 0x0028(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  SlotsArray;                                        // 0x0030(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0070(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty;                        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty_1;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex_1;                 // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindEnvirons_Slots;                       // 0x00A0(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_FindAndCheckTargetLocation) == 0x000008, "Wrong alignment on W_BaseContainer_C_FindAndCheckTargetLocation");
static_assert(sizeof(W_BaseContainer_C_FindAndCheckTargetLocation) == 0x0000B8, "Wrong size on W_BaseContainer_C_FindAndCheckTargetLocation");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, RecipientSlot) == 0x000000, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, ItemSizeX) == 0x000008, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::ItemSizeX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, ItemSizeY) == 0x00000C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::ItemSizeY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, IsRotated) == 0x000010, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, Candrop) == 0x000011, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::Candrop' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, TargetSlotsArray) == 0x000018, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::TargetSlotsArray' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, bCanDrop) == 0x000028, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::bCanDrop' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, SlotsArray) == 0x000030, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::SlotsArray' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_SelectInt_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_SelectInt_ReturnValue_1) == 0x000044, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_GetSlotIndex_SlotIndex) == 0x000048, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x00004C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000050, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, Temp_bool_True_if_break_was_hit_Variable) == 0x000054, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Not_PreBool_ReturnValue) == 0x00005C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x000060, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, Temp_int_Array_Index_Variable) == 0x000064, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, Temp_int_Loop_Counter_Variable) == 0x000068, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Array_Get_Item) == 0x000070, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_IsEmpty__bIsEmpty) == 0x00007C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_IsEmpty__bIsEmpty' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Less_IntInt_ReturnValue) == 0x00007D, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007E, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_BooleanAND_ReturnValue) == 0x00007F, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000080, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_SelectInt_ReturnValue_2) == 0x000084, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000088, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_SelectInt_ReturnValue_3) == 0x00008C, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_IsEmpty__bIsEmpty_1) == 0x000090, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_IsEmpty__bIsEmpty_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_GetSlotIndex_SlotIndex_1) == 0x000094, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_GetSlotIndex_SlotIndex_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_BooleanAND_ReturnValue_1) == 0x000098, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_FindEnvirons_Slots) == 0x0000A0, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_FindEnvirons_Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_BooleanAND_ReturnValue_2) == 0x0000B0, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindAndCheckTargetLocation, CallFunc_Array_Add_ReturnValue) == 0x0000B4, "Member 'W_BaseContainer_C_FindAndCheckTargetLocation::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.FindEnvirons
// 0x00A0 (0x00A0 - 0x0000)
struct W_BaseContainer_C_FindEnvirons final
{
public:
	int32                                         ItemSizeX;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSizeY;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseIndex;                                         // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  Slots;                                             // 0x0010(0x0010)(Parm, OutParm, ContainsInstancedReference)
	int32                                         FinishIndexRow;                                    // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndexRow;                                     // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FinishIndexColumn;                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         StartIndexColumn;                                  // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentRow;                                        // 0x0030(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentColumn;                                     // 0x0034(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  ArrayOfSlots;                                      // 0x0038(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          bIsFirstIteration_;                                // 0x0048(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBySlotLocation_SlotIndex;         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndexBySlotLocation_Result;            // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_FindEnvirons) == 0x000008, "Wrong alignment on W_BaseContainer_C_FindEnvirons");
static_assert(sizeof(W_BaseContainer_C_FindEnvirons) == 0x0000A0, "Wrong size on W_BaseContainer_C_FindEnvirons");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, ItemSizeX) == 0x000000, "Member 'W_BaseContainer_C_FindEnvirons::ItemSizeX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, ItemSizeY) == 0x000004, "Member 'W_BaseContainer_C_FindEnvirons::ItemSizeY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, BaseIndex) == 0x000008, "Member 'W_BaseContainer_C_FindEnvirons::BaseIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, Slots) == 0x000010, "Member 'W_BaseContainer_C_FindEnvirons::Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, FinishIndexRow) == 0x000020, "Member 'W_BaseContainer_C_FindEnvirons::FinishIndexRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, StartIndexRow) == 0x000024, "Member 'W_BaseContainer_C_FindEnvirons::StartIndexRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, FinishIndexColumn) == 0x000028, "Member 'W_BaseContainer_C_FindEnvirons::FinishIndexColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, StartIndexColumn) == 0x00002C, "Member 'W_BaseContainer_C_FindEnvirons::StartIndexColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CurrentRow) == 0x000030, "Member 'W_BaseContainer_C_FindEnvirons::CurrentRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CurrentColumn) == 0x000034, "Member 'W_BaseContainer_C_FindEnvirons::CurrentColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, ArrayOfSlots) == 0x000038, "Member 'W_BaseContainer_C_FindEnvirons::ArrayOfSlots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, bIsFirstIteration_) == 0x000048, "Member 'W_BaseContainer_C_FindEnvirons::bIsFirstIteration_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, Temp_int_Variable) == 0x00004C, "Member 'W_BaseContainer_C_FindEnvirons::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000050, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000054, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005C, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005D, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_BooleanAND_ReturnValue) == 0x00005E, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00005F, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000068, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Add_IntInt_ReturnValue_2) == 0x00006C, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_GetIndexBySlotLocation_SlotIndex) == 0x000070, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_GetIndexBySlotLocation_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_GetIndexBySlotLocation_Result) == 0x000074, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_GetIndexBySlotLocation_Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_GetChildAt_ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, Temp_int_Variable_1) == 0x000080, "Member 'W_BaseContainer_C_FindEnvirons::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, K2Node_DynamicCast_AsW_Base_Slot) == 0x000088, "Member 'W_BaseContainer_C_FindEnvirons::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, K2Node_DynamicCast_bSuccess) == 0x000090, "Member 'W_BaseContainer_C_FindEnvirons::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Array_Add_ReturnValue) == 0x000094, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000098, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_FindEnvirons, CallFunc_Add_IntInt_ReturnValue_3) == 0x00009C, "Member 'W_BaseContainer_C_FindEnvirons::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Get Recipient Slot with Offset
// 0x0068 (0x0068 - 0x0000)
struct W_BaseContainer_C_Get_Recipient_Slot_with_Offset final
{
public:
	int32                                         X_SenderSlotSize;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_SenderSlotSize;                                  // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RealRecipientSlotIndex;                            // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         DropPivotIndex;                                    // 0x0010(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0014(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInRow;                                // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NumberOfCellsInColumn;                             // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Drop_Offset_X_Offset;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Get_Drop_Offset_Y_Offset;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBySlotLocation_SlotIndex;         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndexBySlotLocation_Result;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset) == 0x000008, "Wrong alignment on W_BaseContainer_C_Get_Recipient_Slot_with_Offset");
static_assert(sizeof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset) == 0x000068, "Wrong size on W_BaseContainer_C_Get_Recipient_Slot_with_Offset");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, X_SenderSlotSize) == 0x000000, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::X_SenderSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, Y_SenderSlotSize) == 0x000004, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::Y_SenderSlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, IsRotated) == 0x000008, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, RealRecipientSlotIndex) == 0x00000C, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::RealRecipientSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, DropPivotIndex) == 0x000010, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::DropPivotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, Result) == 0x000014, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, RecipientSlot) == 0x000018, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, NumberOfCellsInRow) == 0x000020, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::NumberOfCellsInRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, NumberOfCellsInColumn) == 0x000024, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::NumberOfCellsInColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_SelectInt_ReturnValue_1) == 0x00002C, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000030, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000034, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_Get_Drop_Offset_X_Offset) == 0x000038, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_Get_Drop_Offset_X_Offset' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_Get_Drop_Offset_Y_Offset) == 0x00003C, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_Get_Drop_Offset_Y_Offset' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_GetIndexBySlotLocation_SlotIndex) == 0x000048, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_GetIndexBySlotLocation_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_GetIndexBySlotLocation_Result) == 0x00004C, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_GetIndexBySlotLocation_Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, CallFunc_GetChildAt_ReturnValue) == 0x000050, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, K2Node_DynamicCast_AsW_Base_Slot) == 0x000058, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Recipient_Slot_with_Offset, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'W_BaseContainer_C_Get_Recipient_Slot_with_Offset::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetFirstValidItem
// 0x0020 (0x0020 - 0x0000)
struct W_BaseContainer_C_GetFirstValidItem final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 CallFunc_Map_Keys_Keys;                            // 0x0008(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetFirstValidItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetFirstValidItem");
static_assert(sizeof(W_BaseContainer_C_GetFirstValidItem) == 0x000020, "Wrong size on W_BaseContainer_C_GetFirstValidItem");
static_assert(offsetof(W_BaseContainer_C_GetFirstValidItem, Param_Index) == 0x000000, "Member 'W_BaseContainer_C_GetFirstValidItem::Param_Index' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetFirstValidItem, CallFunc_Map_Keys_Keys) == 0x000008, "Member 'W_BaseContainer_C_GetFirstValidItem::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetFirstValidItem, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_GetFirstValidItem::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetIndexOfHostedItem
// 0x0004 (0x0004 - 0x0000)
struct W_BaseContainer_C_GetIndexOfHostedItem final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetIndexOfHostedItem) == 0x000004, "Wrong alignment on W_BaseContainer_C_GetIndexOfHostedItem");
static_assert(sizeof(W_BaseContainer_C_GetIndexOfHostedItem) == 0x000004, "Wrong size on W_BaseContainer_C_GetIndexOfHostedItem");
static_assert(offsetof(W_BaseContainer_C_GetIndexOfHostedItem, SlotIndex) == 0x000000, "Member 'W_BaseContainer_C_GetIndexOfHostedItem::SlotIndex' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetNumItems
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_GetNumItems final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Length_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetNumItems) == 0x000004, "Wrong alignment on W_BaseContainer_C_GetNumItems");
static_assert(sizeof(W_BaseContainer_C_GetNumItems) == 0x000008, "Wrong size on W_BaseContainer_C_GetNumItems");
static_assert(offsetof(W_BaseContainer_C_GetNumItems, ReturnValue) == 0x000000, "Member 'W_BaseContainer_C_GetNumItems::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetNumItems, CallFunc_Map_Length_ReturnValue) == 0x000004, "Member 'W_BaseContainer_C_GetNumItems::CallFunc_Map_Length_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSlotByIndex
// 0x0020 (0x0020 - 0x0000)
struct W_BaseContainer_C_GetSlotByIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Map_Find_Value;                           // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSlotByIndex) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetSlotByIndex");
static_assert(sizeof(W_BaseContainer_C_GetSlotByIndex) == 0x000020, "Wrong size on W_BaseContainer_C_GetSlotByIndex");
static_assert(offsetof(W_BaseContainer_C_GetSlotByIndex, SlotIndex) == 0x000000, "Member 'W_BaseContainer_C_GetSlotByIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByIndex, Value) == 0x000008, "Member 'W_BaseContainer_C_GetSlotByIndex::Value' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByIndex, CallFunc_Map_Find_Value) == 0x000010, "Member 'W_BaseContainer_C_GetSlotByIndex::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByIndex, CallFunc_Map_Find_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_GetSlotByIndex::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSlotSettings
// 0x0020 (0x0020 - 0x0000)
struct W_BaseContainer_C_GetSlotSettings final
{
public:
	struct FF_SlotSettings                        Param_SlotSettings;                                // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSlotSettings) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetSlotSettings");
static_assert(sizeof(W_BaseContainer_C_GetSlotSettings) == 0x000020, "Wrong size on W_BaseContainer_C_GetSlotSettings");
static_assert(offsetof(W_BaseContainer_C_GetSlotSettings, Param_SlotSettings) == 0x000000, "Member 'W_BaseContainer_C_GetSlotSettings::Param_SlotSettings' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.HighlightSlots
// 0x01B8 (0x01B8 - 0x0000)
struct W_BaseContainer_C_HighlightSlots final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              SlotDim;                                           // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Dim;                                               // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          InvalidMove;                                       // 0x0038(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  FoundSlots;                                        // 0x0040(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	class UW_BaseSlot_C*                          CachedSlot;                                        // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LastY;                                             // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastX;                                             // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromY;                                             // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FromX;                                             // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSizeOfHostedItem_X;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSizeOfHostedItem_Y;                    // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Recipient_Slot_with_Offset_Result;    // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot; // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Can_Drop_On_Slot_Can;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty;                        // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex__1;    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex__1;       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0151(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0152(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_153[0x1];                                      // 0x0153(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBySlotLocation_SlotIndex;         // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndexBySlotLocation_Result;            // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0168(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0181(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_182[0x2];                                      // 0x0182(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x01A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A5[0x3];                                      // 0x01A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_HighlightSlots) == 0x000008, "Wrong alignment on W_BaseContainer_C_HighlightSlots");
static_assert(sizeof(W_BaseContainer_C_HighlightSlots) == 0x0001B8, "Wrong size on W_BaseContainer_C_HighlightSlots");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, SlotIndex) == 0x000000, "Member 'W_BaseContainer_C_HighlightSlots::SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, SlotDim) == 0x000008, "Member 'W_BaseContainer_C_HighlightSlots::SlotDim' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, IsRotated) == 0x000018, "Member 'W_BaseContainer_C_HighlightSlots::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, SlotRef) == 0x000020, "Member 'W_BaseContainer_C_HighlightSlots::SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, Dim) == 0x000028, "Member 'W_BaseContainer_C_HighlightSlots::Dim' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, InvalidMove) == 0x000038, "Member 'W_BaseContainer_C_HighlightSlots::InvalidMove' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, FoundSlots) == 0x000040, "Member 'W_BaseContainer_C_HighlightSlots::FoundSlots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CachedSlot) == 0x000050, "Member 'W_BaseContainer_C_HighlightSlots::CachedSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, LastY) == 0x000058, "Member 'W_BaseContainer_C_HighlightSlots::LastY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, LastX) == 0x00005C, "Member 'W_BaseContainer_C_HighlightSlots::LastX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, FromY) == 0x000060, "Member 'W_BaseContainer_C_HighlightSlots::FromY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, FromX) == 0x000064, "Member 'W_BaseContainer_C_HighlightSlots::FromX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X) == 0x000068, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x000078, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x00007C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, Temp_int_Variable) == 0x000090, "Member 'W_BaseContainer_C_HighlightSlots::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X_1) == 0x000098, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y_1) == 0x0000A0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Array_Length_ReturnValue) == 0x0000A8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_FTrunc_ReturnValue) == 0x0000B8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSizeOfHostedItem_X) == 0x0000C0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSizeOfHostedItem_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSizeOfHostedItem_Y) == 0x0000C4, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSizeOfHostedItem_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Get_Recipient_Slot_with_Offset_Result) == 0x0000C8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Get_Recipient_Slot_with_Offset_Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot) == 0x0000D0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Get_Recipient_Slot_with_Offset_RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Can_Drop_On_Slot_Can) == 0x0000D8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Can_Drop_On_Slot_Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X_2) == 0x0000E0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y_2) == 0x0000E8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X_3) == 0x0000F0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y_3) == 0x0000F8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_FTrunc_ReturnValue_1) == 0x000100, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X_4) == 0x000108, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y_4) == 0x000110, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_FTrunc_ReturnValue_2) == 0x000118, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_X_5) == 0x000120, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BreakVector2D_Y_5) == 0x000128, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, Temp_int_Variable_1) == 0x000130, "Member 'W_BaseContainer_C_HighlightSlots::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Add_IntInt_ReturnValue_1) == 0x000134, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_IsEmpty__bIsEmpty) == 0x000138, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_IsEmpty__bIsEmpty' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSlotIndex_SlotIndex) == 0x00013C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Array_Add_ReturnValue) == 0x000140, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSlotLocationByIndex_ColumnIndex__1) == 0x000144, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSlotLocationByIndex_ColumnIndex__1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetSlotLocationByIndex_RowIndex__1) == 0x000148, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetSlotLocationByIndex_RowIndex__1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Subtract_IntInt_ReturnValue) == 0x00014C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000150, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Less_IntInt_ReturnValue_1) == 0x000151, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BooleanAND_ReturnValue) == 0x000152, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Add_IntInt_ReturnValue_2) == 0x000154, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Add_IntInt_ReturnValue_3) == 0x000158, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00015C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetIndexBySlotLocation_SlotIndex) == 0x000160, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetIndexBySlotLocation_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetIndexBySlotLocation_Result) == 0x000164, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetIndexBySlotLocation_Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000165, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_GetChildAt_ReturnValue) == 0x000168, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, K2Node_DynamicCast_AsW_Base_Slot) == 0x000170, "Member 'W_BaseContainer_C_HighlightSlots::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, K2Node_DynamicCast_bSuccess) == 0x000178, "Member 'W_BaseContainer_C_HighlightSlots::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x00017C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000180, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Greater_IntInt_ReturnValue) == 0x000181, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_SelectInt_ReturnValue) == 0x000184, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000188, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000190, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_FTrunc_ReturnValue_3) == 0x000198, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_IsValid_ReturnValue) == 0x00019C, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001A0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Less_IntInt_ReturnValue_2) == 0x0001A4, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0001A8, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001B0, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_HighlightSlots, CallFunc_BooleanAND_ReturnValue_1) == 0x0001B1, "Member 'W_BaseContainer_C_HighlightSlots::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.IsHostRotationChanged
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_IsHostRotationChanged final
{
public:
	bool                                          Param_bIsHostRotationChanged;                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_IsHostRotationChanged) == 0x000001, "Wrong alignment on W_BaseContainer_C_IsHostRotationChanged");
static_assert(sizeof(W_BaseContainer_C_IsHostRotationChanged) == 0x000001, "Wrong size on W_BaseContainer_C_IsHostRotationChanged");
static_assert(offsetof(W_BaseContainer_C_IsHostRotationChanged, Param_bIsHostRotationChanged) == 0x000000, "Member 'W_BaseContainer_C_IsHostRotationChanged::Param_bIsHostRotationChanged' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.IsItemPriceless
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_IsItemPriceless final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_IsItemPriceless) == 0x000004, "Wrong alignment on W_BaseContainer_C_IsItemPriceless");
static_assert(sizeof(W_BaseContainer_C_IsItemPriceless) == 0x000010, "Wrong size on W_BaseContainer_C_IsItemPriceless");
static_assert(offsetof(W_BaseContainer_C_IsItemPriceless, ItemId) == 0x000000, "Member 'W_BaseContainer_C_IsItemPriceless::ItemId' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_IsItemPriceless, ReturnValue) == 0x000004, "Member 'W_BaseContainer_C_IsItemPriceless::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_IsItemPriceless, CallFunc_Array_Find_ReturnValue) == 0x000008, "Member 'W_BaseContainer_C_IsItemPriceless::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_IsItemPriceless, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00000C, "Member 'W_BaseContainer_C_IsItemPriceless::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.MoveHighlighter
// 0x0140 (0x0140 - 0x0000)
struct W_BaseContainer_C_MoveHighlighter final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  HighlightedSlots;                                  // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	bool                                          Candrop;                                           // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Rotated;                                           // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_CalculateHighlighterPosition_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_CalculateHighlighterDim_Dimention;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           CallFunc_SetHighlighterBrush_BG_Sprite1;           // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	uint8                                         Pad_58[0x8];                                       // 0x0058(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            CallFunc_MakeBrushFromSprite_ReturnValue;          // 0x0060(0x00D0)()
	struct FVector2D                              CallFunc_RecalculateHighlighterSize_Size;          // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_MoveHighlighter) == 0x000010, "Wrong alignment on W_BaseContainer_C_MoveHighlighter");
static_assert(sizeof(W_BaseContainer_C_MoveHighlighter) == 0x000140, "Wrong size on W_BaseContainer_C_MoveHighlighter");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_MoveHighlighter::SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, HighlightedSlots) == 0x000008, "Member 'W_BaseContainer_C_MoveHighlighter::HighlightedSlots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, Candrop) == 0x000018, "Member 'W_BaseContainer_C_MoveHighlighter::Candrop' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, Rotated) == 0x000019, "Member 'W_BaseContainer_C_MoveHighlighter::Rotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_CalculateHighlighterPosition_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_CalculateHighlighterPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_CalculateHighlighterDim_Dimention) == 0x000038, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_CalculateHighlighterDim_Dimention' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_SlotAsCanvasSlot_ReturnValue_1) == 0x000048, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_SlotAsCanvasSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_SetHighlighterBrush_BG_Sprite1) == 0x000050, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_SetHighlighterBrush_BG_Sprite1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_MakeBrushFromSprite_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_MakeBrushFromSprite_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHighlighter, CallFunc_RecalculateHighlighterSize_Size) == 0x000130, "Member 'W_BaseContainer_C_MoveHighlighter::CallFunc_RecalculateHighlighterSize_Size' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.MoveHostedItemToSlot
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_MoveHostedItemToSlot final
{
public:
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipientSlotIndex;                                // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_MoveHostedItemToSlot) == 0x000008, "Wrong alignment on W_BaseContainer_C_MoveHostedItemToSlot");
static_assert(sizeof(W_BaseContainer_C_MoveHostedItemToSlot) == 0x000010, "Wrong size on W_BaseContainer_C_MoveHostedItemToSlot");
static_assert(offsetof(W_BaseContainer_C_MoveHostedItemToSlot, RecipientSlot) == 0x000000, "Member 'W_BaseContainer_C_MoveHostedItemToSlot::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHostedItemToSlot, RecipientSlotIndex) == 0x000008, "Member 'W_BaseContainer_C_MoveHostedItemToSlot::RecipientSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_MoveHostedItemToSlot, CallFunc_GetSlotIndex_SlotIndex) == 0x00000C, "Member 'W_BaseContainer_C_MoveHostedItemToSlot::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OccupySlotsForSizeOfItem
// 0x0060 (0x0060 - 0x0000)
struct W_BaseContainer_C_OccupySlotsForSizeOfItem final
{
public:
	int32                                         ItemSlotSizeX;                                     // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotSizeY;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemSlotIndex;                                     // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsFirstIteration;                                 // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentRow;                                        // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentColumn;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndexRow;                                      // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstIndexRow;                                     // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LastIndexColumn;                                   // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         FirstIndexColumn;                                  // 0x0024(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         BaseIndex;                                         // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindEnvirons_Slots;                       // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OccupySlotsForSizeOfItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_OccupySlotsForSizeOfItem");
static_assert(sizeof(W_BaseContainer_C_OccupySlotsForSizeOfItem) == 0x000060, "Wrong size on W_BaseContainer_C_OccupySlotsForSizeOfItem");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, ItemSlotSizeX) == 0x000000, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::ItemSlotSizeX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, ItemSlotSizeY) == 0x000004, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::ItemSlotSizeY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, ItemSlotIndex) == 0x000008, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::ItemSlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, bIsFirstIteration) == 0x00000C, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::bIsFirstIteration' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CurrentRow) == 0x000010, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CurrentRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CurrentColumn) == 0x000014, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CurrentColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, LastIndexRow) == 0x000018, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::LastIndexRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, FirstIndexRow) == 0x00001C, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::FirstIndexRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, LastIndexColumn) == 0x000020, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::LastIndexColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, FirstIndexColumn) == 0x000024, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::FirstIndexColumn' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, BaseIndex) == 0x000028, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::BaseIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CallFunc_FindEnvirons_Slots) == 0x000030, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CallFunc_FindEnvirons_Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, Temp_int_Array_Index_Variable) == 0x000040, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CallFunc_Array_Length_ReturnValue) == 0x000044, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CallFunc_Array_Get_Item) == 0x000048, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OccupySlotsForSizeOfItem, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'W_BaseContainer_C_OccupySlotsForSizeOfItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OnDragCancelled
// 0x0080 (0x0080 - 0x0000)
struct W_BaseContainer_C_OnDragCancelled final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OnDragCancelled) == 0x000008, "Wrong alignment on W_BaseContainer_C_OnDragCancelled");
static_assert(sizeof(W_BaseContainer_C_OnDragCancelled) == 0x000080, "Wrong size on W_BaseContainer_C_OnDragCancelled");
static_assert(offsetof(W_BaseContainer_C_OnDragCancelled, PointerEvent) == 0x000000, "Member 'W_BaseContainer_C_OnDragCancelled::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnDragCancelled, Operation) == 0x000078, "Member 'W_BaseContainer_C_OnDragCancelled::Operation' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct W_BaseContainer_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OnDragLeave) == 0x000008, "Wrong alignment on W_BaseContainer_C_OnDragLeave");
static_assert(sizeof(W_BaseContainer_C_OnDragLeave) == 0x000080, "Wrong size on W_BaseContainer_C_OnDragLeave");
static_assert(offsetof(W_BaseContainer_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'W_BaseContainer_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnDragLeave, Operation) == 0x000078, "Member 'W_BaseContainer_C_OnDragLeave::Operation' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OnDrop
// 0x00C0 (0x00C0 - 0x0000)
struct W_BaseContainer_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OnDrop) == 0x000008, "Wrong alignment on W_BaseContainer_C_OnDrop");
static_assert(sizeof(W_BaseContainer_C_OnDrop) == 0x0000C0, "Wrong size on W_BaseContainer_C_OnDrop");
static_assert(offsetof(W_BaseContainer_C_OnDrop, MyGeometry) == 0x000000, "Member 'W_BaseContainer_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnDrop, PointerEvent) == 0x000038, "Member 'W_BaseContainer_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnDrop, Operation) == 0x0000B0, "Member 'W_BaseContainer_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'W_BaseContainer_C_OnDrop::ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OnKeyDown
// 0x0208 (0x0208 - 0x0000)
struct W_BaseContainer_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OnKeyDown) == 0x000008, "Wrong alignment on W_BaseContainer_C_OnKeyDown");
static_assert(sizeof(W_BaseContainer_C_OnKeyDown) == 0x000208, "Wrong size on W_BaseContainer_C_OnKeyDown");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'W_BaseContainer_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'W_BaseContainer_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'W_BaseContainer_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'W_BaseContainer_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'W_BaseContainer_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.OnKeyUp
// 0x0208 (0x0208 - 0x0000)
struct W_BaseContainer_C_OnKeyUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_OnKeyUp) == 0x000008, "Wrong alignment on W_BaseContainer_C_OnKeyUp");
static_assert(sizeof(W_BaseContainer_C_OnKeyUp) == 0x000208, "Wrong size on W_BaseContainer_C_OnKeyUp");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, MyGeometry) == 0x000000, "Member 'W_BaseContainer_C_OnKeyUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, InKeyEvent) == 0x000038, "Member 'W_BaseContainer_C_OnKeyUp::InKeyEvent' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_OnKeyUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, CallFunc_Handled_ReturnValue) == 0x000130, "Member 'W_BaseContainer_C_OnKeyUp::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'W_BaseContainer_C_OnKeyUp::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_OnKeyUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'W_BaseContainer_C_OnKeyUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.RecalculateHighlighterSize
// 0x0098 (0x0098 - 0x0000)
struct W_BaseContainer_C_RecalculateHighlighterSize final
{
public:
	double                                        SingleSlotSizeX;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        SingleSlotSizeY;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Dimention;                                         // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DistanceBetweenSlots;                              // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Size;                                              // 0x0028(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DFloat_ReturnValue;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_RecalculateHighlighterSize) == 0x000008, "Wrong alignment on W_BaseContainer_C_RecalculateHighlighterSize");
static_assert(sizeof(W_BaseContainer_C_RecalculateHighlighterSize) == 0x000098, "Wrong size on W_BaseContainer_C_RecalculateHighlighterSize");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, SingleSlotSizeX) == 0x000000, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::SingleSlotSizeX' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, SingleSlotSizeY) == 0x000008, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::SingleSlotSizeY' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, Dimention) == 0x000010, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::Dimention' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, DistanceBetweenSlots) == 0x000020, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::DistanceBetweenSlots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, Size) == 0x000028, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::Size' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_BreakVector2D_X) == 0x000038, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_BreakVector2D_Y) == 0x000040, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_Subtract_Vector2DFloat_ReturnValue) == 0x000048, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_Subtract_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_MakeVector2D_ReturnValue) == 0x000078, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_RecalculateHighlighterSize, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'W_BaseContainer_C_RecalculateHighlighterSize::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Remove Item By Slot Index
// 0x0068 (0x0068 - 0x0000)
struct W_BaseContainer_C_Remove_Item_By_Slot_Index final
{
public:
	int32                                         Param_Index;                                       // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemSlotDimension_X;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemSlotDimension_Y;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsRotated__Result;                        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  CallFunc_FindEnvirons_Slots;                       // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Remove_Item_By_Slot_Index) == 0x000008, "Wrong alignment on W_BaseContainer_C_Remove_Item_By_Slot_Index");
static_assert(sizeof(W_BaseContainer_C_Remove_Item_By_Slot_Index) == 0x000068, "Wrong size on W_BaseContainer_C_Remove_Item_By_Slot_Index");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, Param_Index) == 0x000000, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::Param_Index' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_GetChildAt_ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_Map_Remove_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, K2Node_DynamicCast_AsW_Base_Slot) == 0x000020, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_GetItemSlotDimension_X) == 0x00002C, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_GetItemSlotDimension_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_GetItemSlotDimension_Y) == 0x000030, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_GetItemSlotDimension_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_IsRotated__Result) == 0x000034, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_IsRotated__Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_SelectInt_ReturnValue) == 0x000038, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_SelectInt_ReturnValue_1) == 0x00003C, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_FindEnvirons_Slots) == 0x000040, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_FindEnvirons_Slots' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_Array_Get_Item) == 0x000058, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Remove_Item_By_Slot_Index, CallFunc_Less_IntInt_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_Remove_Item_By_Slot_Index::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.ReturnHostedDataToSlot
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_ReturnHostedDataToSlot final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_ReturnHostedDataToSlot) == 0x000001, "Wrong alignment on W_BaseContainer_C_ReturnHostedDataToSlot");
static_assert(sizeof(W_BaseContainer_C_ReturnHostedDataToSlot) == 0x000001, "Wrong size on W_BaseContainer_C_ReturnHostedDataToSlot");
static_assert(offsetof(W_BaseContainer_C_ReturnHostedDataToSlot, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'W_BaseContainer_C_ReturnHostedDataToSlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SelfTestForSlots
// 0x0020 (0x0020 - 0x0000)
struct W_BaseContainer_C_SelfTestForSlots final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsNotIndexTheSame;                                 // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotIndex_SlotIndex;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SelfTestForSlots) == 0x000008, "Wrong alignment on W_BaseContainer_C_SelfTestForSlots");
static_assert(sizeof(W_BaseContainer_C_SelfTestForSlots) == 0x000020, "Wrong size on W_BaseContainer_C_SelfTestForSlots");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, SenderContainer) == 0x000000, "Member 'W_BaseContainer_C_SelfTestForSlots::SenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_SelfTestForSlots::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, ReturnValue) == 0x000010, "Member 'W_BaseContainer_C_SelfTestForSlots::ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, IsNotIndexTheSame) == 0x000011, "Member 'W_BaseContainer_C_SelfTestForSlots::IsNotIndexTheSame' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, CallFunc_GetSlotIndex_SlotIndex) == 0x000014, "Member 'W_BaseContainer_C_SelfTestForSlots::CallFunc_GetSlotIndex_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_SelfTestForSlots::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SelfTestForSlots, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'W_BaseContainer_C_SelfTestForSlots::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SetCapacity
// 0x0004 (0x0004 - 0x0000)
struct W_BaseContainer_C_SetCapacity final
{
public:
	int32                                         Length;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SetCapacity) == 0x000004, "Wrong alignment on W_BaseContainer_C_SetCapacity");
static_assert(sizeof(W_BaseContainer_C_SetCapacity) == 0x000004, "Wrong size on W_BaseContainer_C_SetCapacity");
static_assert(offsetof(W_BaseContainer_C_SetCapacity, Length) == 0x000000, "Member 'W_BaseContainer_C_SetCapacity::Length' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SetCollisionEnabled
// 0x0038 (0x0038 - 0x0000)
struct W_BaseContainer_C_SetCollisionEnabled final
{
public:
	bool                                          In_Is_Enabled;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  CallFunc_Map_Values_Values;                        // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SetCollisionEnabled) == 0x000008, "Wrong alignment on W_BaseContainer_C_SetCollisionEnabled");
static_assert(sizeof(W_BaseContainer_C_SetCollisionEnabled) == 0x000038, "Wrong size on W_BaseContainer_C_SetCollisionEnabled");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, In_Is_Enabled) == 0x000000, "Member 'W_BaseContainer_C_SetCollisionEnabled::In_Is_Enabled' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, Temp_int_Array_Index_Variable) == 0x000004, "Member 'W_BaseContainer_C_SetCollisionEnabled::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'W_BaseContainer_C_SetCollisionEnabled::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'W_BaseContainer_C_SetCollisionEnabled::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, CallFunc_Map_Values_Values) == 0x000010, "Member 'W_BaseContainer_C_SetCollisionEnabled::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_SetCollisionEnabled::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, CallFunc_Array_Get_Item) == 0x000028, "Member 'W_BaseContainer_C_SetCollisionEnabled::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetCollisionEnabled, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_SetCollisionEnabled::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SetHighlighterBrush
// 0x0130 (0x0130 - 0x0000)
struct W_BaseContainer_C_SetHighlighterBrush final
{
public:
	struct FVector2D                              Dim;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Candrop;                                           // 0x0011(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           BG_Sprite1;                                        // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           BG_Sprite;                                         // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X;                                                 // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_1;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_2;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_3;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_4;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_5;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_6;                            // 0x0080(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_7;                            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default;                             // 0x0090(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_1;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_2;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           K2Node_Select_Default_3;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UPaperSprite*                           Temp_object_Variable_8;                            // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_9;                            // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_4;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_10;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB[0x5];                                       // 0x00EB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           Temp_object_Variable_11;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x00FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPaperSprite*                           K2Node_Select_Default_5;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SetHighlighterBrush) == 0x000008, "Wrong alignment on W_BaseContainer_C_SetHighlighterBrush");
static_assert(sizeof(W_BaseContainer_C_SetHighlighterBrush) == 0x000130, "Wrong size on W_BaseContainer_C_SetHighlighterBrush");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Dim) == 0x000000, "Member 'W_BaseContainer_C_SetHighlighterBrush::Dim' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, IsRotated) == 0x000010, "Member 'W_BaseContainer_C_SetHighlighterBrush::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Candrop) == 0x000011, "Member 'W_BaseContainer_C_SetHighlighterBrush::Candrop' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, BG_Sprite1) == 0x000018, "Member 'W_BaseContainer_C_SetHighlighterBrush::BG_Sprite1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, BG_Sprite) == 0x000020, "Member 'W_BaseContainer_C_SetHighlighterBrush::BG_Sprite' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Y) == 0x000028, "Member 'W_BaseContainer_C_SetHighlighterBrush::Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, X) == 0x00002C, "Member 'W_BaseContainer_C_SetHighlighterBrush::X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable) == 0x000030, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable) == 0x000038, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_1) == 0x000040, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable_1) == 0x000048, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_2) == 0x000050, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_3) == 0x000058, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable_2) == 0x000060, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_4) == 0x000068, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_5) == 0x000070, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable_3) == 0x000078, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_6) == 0x000080, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_7) == 0x000088, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default) == 0x000090, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default_1) == 0x000098, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default_2) == 0x0000A0, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default_3) == 0x0000A8, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_8) == 0x0000B0, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000B8, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_9) == 0x0000C0, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000C8, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue) == 0x0000C9, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000CA, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable_4) == 0x0000CB, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000CC, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue_1) == 0x0000CD, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default_4) == 0x0000D0, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000D8, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0000D9, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_10) == 0x0000E0, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue_2) == 0x0000E8, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0000E9, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0000EA, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_object_Variable_11) == 0x0000F0, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue_3) == 0x0000F8, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0000F9, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0000FA, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, Temp_bool_Variable_5) == 0x0000FB, "Member 'W_BaseContainer_C_SetHighlighterBrush::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue_4) == 0x0000FC, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, K2Node_Select_Default_5) == 0x000100, "Member 'W_BaseContainer_C_SetHighlighterBrush::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000108, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000109, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BreakVector2D_X) == 0x000110, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BreakVector2D_Y) == 0x000118, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_BooleanAND_ReturnValue_5) == 0x000120, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_Round_ReturnValue) == 0x000124, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SetHighlighterBrush, CallFunc_Round_ReturnValue_1) == 0x000128, "Member 'W_BaseContainer_C_SetHighlighterBrush::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SetHostedItemRotate
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_SetHostedItemRotate final
{
public:
	bool                                          Rotated;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SetHostedItemRotate) == 0x000001, "Wrong alignment on W_BaseContainer_C_SetHostedItemRotate");
static_assert(sizeof(W_BaseContainer_C_SetHostedItemRotate) == 0x000001, "Wrong size on W_BaseContainer_C_SetHostedItemRotate");
static_assert(offsetof(W_BaseContainer_C_SetHostedItemRotate, Rotated) == 0x000000, "Member 'W_BaseContainer_C_SetHostedItemRotate::Rotated' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SetHostRotationChanged
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_SetHostRotationChanged final
{
public:
	bool                                          Param_bIsHostRotationChanged;                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SetHostRotationChanged) == 0x000001, "Wrong alignment on W_BaseContainer_C_SetHostRotationChanged");
static_assert(sizeof(W_BaseContainer_C_SetHostRotationChanged) == 0x000001, "Wrong size on W_BaseContainer_C_SetHostRotationChanged");
static_assert(offsetof(W_BaseContainer_C_SetHostRotationChanged, Param_bIsHostRotationChanged) == 0x000000, "Member 'W_BaseContainer_C_SetHostRotationChanged::Param_bIsHostRotationChanged' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Slot Event Stack Binding
// 0x0240 (0x0240 - 0x0000)
struct W_BaseContainer_C_Slot_Event_Stack_Binding final
{
public:
	struct FFItemInfo                             SenderItemInfo;                                    // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         RecipientRemainingCapacity;                        // 0x0228(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_MaxStack;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Slot_Event_Stack_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_Slot_Event_Stack_Binding");
static_assert(sizeof(W_BaseContainer_C_Slot_Event_Stack_Binding) == 0x000240, "Wrong size on W_BaseContainer_C_Slot_Event_Stack_Binding");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, SenderItemInfo) == 0x000000, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::SenderItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, RecipientSlot) == 0x000220, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, RecipientRemainingCapacity) == 0x000228, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::RecipientRemainingCapacity' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, CallFunc_GetCount_MaxStack) == 0x00022C, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::CallFunc_GetCount_MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, CallFunc_GetCount_Count) == 0x000230, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, CallFunc_Subtract_IntInt_ReturnValue) == 0x000234, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000238, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Slot_Event_Stack_Binding, CallFunc_Greater_IntInt_ReturnValue) == 0x00023C, "Member 'W_BaseContainer_C_Slot_Event_Stack_Binding::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragCanceled__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragCanceled__DelegateSignature::SlotRef' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragCanceled_Binding
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragCanceled_Binding final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragCanceled_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragCanceled_Binding");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragCanceled_Binding) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_DragCanceled_Binding");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragCanceled_Binding, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragCanceled_Binding::SlotRef' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragEnter__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragEnter__DelegateSignature::SlotRef' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragLeave__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragLeave__DelegateSignature::SlotRef' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragStarted__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseDragWidget_C*                    DragWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature) == 0x000010, "Wrong size on W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature::SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature, DragWidget) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_DragStarted__DelegateSignature::DragWidget' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_DragStarted_Binding
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SlotEvent_DragStarted_Binding final
{
public:
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseDragWidget_C*                    DragWidget;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_DragStarted_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_DragStarted_Binding");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_DragStarted_Binding) == 0x000010, "Wrong size on W_BaseContainer_C_SlotEvent_DragStarted_Binding");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragStarted_Binding, SlotRef) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_DragStarted_Binding::SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_DragStarted_Binding, DragWidget) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_DragStarted_Binding::DragWidget' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_Drop__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SlotEvent_Drop__DelegateSignature final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_Drop__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_Drop__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_Drop__DelegateSignature) == 0x000010, "Wrong size on W_BaseContainer_C_SlotEvent_Drop__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Drop__DelegateSignature, SenderContainer) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_Drop__DelegateSignature::SenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Drop__DelegateSignature, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_Drop__DelegateSignature::RecipientSlot' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_Drop_Binding
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SlotEvent_Drop_Binding final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_Drop_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_Drop_Binding");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_Drop_Binding) == 0x000010, "Wrong size on W_BaseContainer_C_SlotEvent_Drop_Binding");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Drop_Binding, SenderContainer) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_Drop_Binding::SenderContainer' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Drop_Binding, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_Drop_Binding::RecipientSlot' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_Hover__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_Hover__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_Hover__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_Hover__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_Hover__DelegateSignature) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_Hover__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Hover__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_Hover__DelegateSignature::Param_Slot' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_MouseButtonDoubleClicked__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          PointerEvent;                                      // 0x0008(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature) == 0x000080, "Wrong size on W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature, PointerEvent) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_MouseButtonDoubleClicked__DelegateSignature::PointerEvent' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_MouseButtonPressed__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FPointerEvent                          PointerEvent;                                      // 0x0008(0x0078)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature) == 0x000080, "Wrong size on W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature, PointerEvent) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_MouseButtonPressed__DelegateSignature::PointerEvent' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_Stack__DelegateSignature
// 0x0228 (0x0228 - 0x0000)
struct W_BaseContainer_C_SlotEvent_Stack__DelegateSignature final
{
public:
	struct FFItemInfo                             SenderItemInfo;                                    // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0220(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_Stack__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_Stack__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_Stack__DelegateSignature) == 0x000228, "Wrong size on W_BaseContainer_C_SlotEvent_Stack__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Stack__DelegateSignature, SenderItemInfo) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_Stack__DelegateSignature::SenderItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Stack__DelegateSignature, RecipientSlot) == 0x000220, "Member 'W_BaseContainer_C_SlotEvent_Stack__DelegateSignature::RecipientSlot' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_StatusChanged__DelegateSignature
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_SlotStatus                                  Status;                                            // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature) == 0x000010, "Wrong size on W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature::Param_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature, Status) == 0x000008, "Member 'W_BaseContainer_C_SlotEvent_StatusChanged__DelegateSignature::Status' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SlotEvent_Unhover__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature final
{
public:
	class UW_BaseSlot_C*                          Param_Slot;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature) == 0x000008, "Wrong alignment on W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature");
static_assert(sizeof(W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature) == 0x000008, "Wrong size on W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature");
static_assert(offsetof(W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature, Param_Slot) == 0x000000, "Member 'W_BaseContainer_C_SlotEvent_Unhover__DelegateSignature::Param_Slot' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SplitWidgetEvent_OnAccept_Binding
// 0x0018 (0x0018 - 0x0000)
struct W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding");
static_assert(sizeof(W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding) == 0x000018, "Wrong size on W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding, Count) == 0x000000, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding::Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding, RecipientSlot) == 0x000008, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding, SenderContainer) == 0x000010, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnAccept_Binding::SenderContainer' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SplitWidgetEvent_OnAcceptFull_Binding
// 0x0010 (0x0010 - 0x0000)
struct W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding final
{
public:
	class UW_BaseSlot_C*                          RecipientSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding");
static_assert(sizeof(W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding) == 0x000010, "Wrong size on W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding, RecipientSlot) == 0x000000, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding::RecipientSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding, SenderContainer) == 0x000008, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnAcceptFull_Binding::SenderContainer' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.SplitWidgetEvent_OnCancel_Binding
// 0x0008 (0x0008 - 0x0000)
struct W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding final
{
public:
	class UW_BaseContainer_C*                     SenderContainer;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding) == 0x000008, "Wrong alignment on W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding");
static_assert(sizeof(W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding) == 0x000008, "Wrong size on W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding");
static_assert(offsetof(W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding, SenderContainer) == 0x000000, "Member 'W_BaseContainer_C_SplitWidgetEvent_OnCancel_Binding::SenderContainer' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CalculateHighlighterSize
// 0x00B0 (0x00B0 - 0x0000)
struct W_BaseContainer_C_CalculateHighlighterSize final
{
public:
	struct FVector2D                              SlotDim;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsRotated;                                         // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              HighlighterSize;                                   // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CalculateHighlighterSize) == 0x000008, "Wrong alignment on W_BaseContainer_C_CalculateHighlighterSize");
static_assert(sizeof(W_BaseContainer_C_CalculateHighlighterSize) == 0x0000B0, "Wrong size on W_BaseContainer_C_CalculateHighlighterSize");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, SlotDim) == 0x000000, "Member 'W_BaseContainer_C_CalculateHighlighterSize::SlotDim' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, IsRotated) == 0x000010, "Member 'W_BaseContainer_C_CalculateHighlighterSize::IsRotated' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, HighlighterSize) == 0x000018, "Member 'W_BaseContainer_C_CalculateHighlighterSize::HighlighterSize' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_BreakVector2D_X) == 0x000028, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, Temp_bool_Variable) == 0x000038, "Member 'W_BaseContainer_C_CalculateHighlighterSize::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000068, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_MakeVector2D_ReturnValue) == 0x000080, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, CallFunc_MakeVector2D_ReturnValue_1) == 0x000090, "Member 'W_BaseContainer_C_CalculateHighlighterSize::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CalculateHighlighterSize, K2Node_Select_Default) == 0x0000A0, "Member 'W_BaseContainer_C_CalculateHighlighterSize::K2Node_Select_Default' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.CanAddItem
// 0x02C0 (0x02C0 - 0x0000)
struct W_BaseContainer_C_CanAddItem final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Can;                                               // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ToStack;                                           // 0x0069(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         AddCount;                                          // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetEmptySlot_EmptySlotFound_;             // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_GetEmptySlot_SlotRef;                     // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0080(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CallFunc_GetSlotByItemId_Slot_Ref;                 // 0x02A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetSlotByItemId_SlotFound_;               // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetCount_MaxStack;                        // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetCount_Count;                           // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_CanAddItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_CanAddItem");
static_assert(sizeof(W_BaseContainer_C_CanAddItem) == 0x0002C0, "Wrong size on W_BaseContainer_C_CanAddItem");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, Item) == 0x000000, "Member 'W_BaseContainer_C_CanAddItem::Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, Can) == 0x000068, "Member 'W_BaseContainer_C_CanAddItem::Can' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, ToStack) == 0x000069, "Member 'W_BaseContainer_C_CanAddItem::ToStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, AddCount) == 0x00006C, "Member 'W_BaseContainer_C_CanAddItem::AddCount' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetEmptySlot_EmptySlotFound_) == 0x000070, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetEmptySlot_EmptySlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetEmptySlot_SlotRef) == 0x000078, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetEmptySlot_SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000080, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetSlotByItemId_Slot_Ref) == 0x0002A0, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetSlotByItemId_Slot_Ref' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetSlotByItemId_SlotFound_) == 0x0002A8, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetSlotByItemId_SlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetCount_MaxStack) == 0x0002AC, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetCount_MaxStack' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GetCount_Count) == 0x0002B0, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GetCount_Count' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_Add_IntInt_ReturnValue) == 0x0002B4, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_CanAddItem, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0002B8, "Member 'W_BaseContainer_C_CanAddItem::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Get Capacity
// 0x0050 (0x0050 - 0x0000)
struct W_BaseContainer_C_Get_Capacity final
{
public:
	int32                                         Used;                                              // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxCapacity;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VolumeUsed;                                        // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UW_BaseSlot_C*>                  CallFunc_Map_Values_Values;                        // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemSlotDimension_X;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetItemSlotDimension_Y;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Get_Capacity) == 0x000008, "Wrong alignment on W_BaseContainer_C_Get_Capacity");
static_assert(sizeof(W_BaseContainer_C_Get_Capacity) == 0x000050, "Wrong size on W_BaseContainer_C_Get_Capacity");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, Used) == 0x000000, "Member 'W_BaseContainer_C_Get_Capacity::Used' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, MaxCapacity) == 0x000004, "Member 'W_BaseContainer_C_Get_Capacity::MaxCapacity' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, VolumeUsed) == 0x000008, "Member 'W_BaseContainer_C_Get_Capacity::VolumeUsed' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'W_BaseContainer_C_Get_Capacity::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'W_BaseContainer_C_Get_Capacity::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Map_Values_Values) == 0x000018, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_GetChildrenCount_ReturnValue) == 0x000028, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Array_Get_Item) == 0x000030, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_GetItemSlotDimension_X) == 0x000038, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_GetItemSlotDimension_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_GetItemSlotDimension_Y) == 0x00003C, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_GetItemSlotDimension_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Multiply_IntInt_ReturnValue) == 0x000044, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Capacity, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'W_BaseContainer_C_Get_Capacity::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.Get Drop Offset
// 0x002C (0x002C - 0x0000)
struct W_BaseContainer_C_Get_Drop_Offset final
{
public:
	int32                                         PivotIndex;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_SlotSize;                                        // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_SlotSize;                                        // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_Offset;                                          // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Offset;                                          // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotArea;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_Get_Drop_Offset) == 0x000004, "Wrong alignment on W_BaseContainer_C_Get_Drop_Offset");
static_assert(sizeof(W_BaseContainer_C_Get_Drop_Offset) == 0x00002C, "Wrong size on W_BaseContainer_C_Get_Drop_Offset");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, PivotIndex) == 0x000000, "Member 'W_BaseContainer_C_Get_Drop_Offset::PivotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, X_SlotSize) == 0x000004, "Member 'W_BaseContainer_C_Get_Drop_Offset::X_SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, Y_SlotSize) == 0x000008, "Member 'W_BaseContainer_C_Get_Drop_Offset::Y_SlotSize' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, X_Offset) == 0x00000C, "Member 'W_BaseContainer_C_Get_Drop_Offset::X_Offset' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, Y_Offset) == 0x000010, "Member 'W_BaseContainer_C_Get_Drop_Offset::Y_Offset' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, SlotArea) == 0x000014, "Member 'W_BaseContainer_C_Get_Drop_Offset::SlotArea' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_Multiply_IntInt_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00001E, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x00001F, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000021, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000022, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x000023, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x000024, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000025, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x000026, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x000027, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x000028, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_Get_Drop_Offset, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x000029, "Member 'W_BaseContainer_C_Get_Drop_Offset::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetContainerType
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_GetContainerType final
{
public:
	E_BaseContainerType                           Param_ContainerType;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetContainerType) == 0x000001, "Wrong alignment on W_BaseContainer_C_GetContainerType");
static_assert(sizeof(W_BaseContainer_C_GetContainerType) == 0x000001, "Wrong size on W_BaseContainer_C_GetContainerType");
static_assert(offsetof(W_BaseContainer_C_GetContainerType, Param_ContainerType) == 0x000000, "Member 'W_BaseContainer_C_GetContainerType::Param_ContainerType' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetCountOfHostedItem
// 0x0004 (0x0004 - 0x0000)
struct W_BaseContainer_C_GetCountOfHostedItem final
{
public:
	int32                                         Count;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetCountOfHostedItem) == 0x000004, "Wrong alignment on W_BaseContainer_C_GetCountOfHostedItem");
static_assert(sizeof(W_BaseContainer_C_GetCountOfHostedItem) == 0x000004, "Wrong size on W_BaseContainer_C_GetCountOfHostedItem");
static_assert(offsetof(W_BaseContainer_C_GetCountOfHostedItem, Count) == 0x000000, "Member 'W_BaseContainer_C_GetCountOfHostedItem::Count' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetDataOfHostedItem
// 0x0068 (0x0068 - 0x0000)
struct W_BaseContainer_C_GetDataOfHostedItem final
{
public:
	struct FContainerPickupsInfo                  Param_DataOfHostedItem;                            // 0x0000(0x0068)(Parm, OutParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetDataOfHostedItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetDataOfHostedItem");
static_assert(sizeof(W_BaseContainer_C_GetDataOfHostedItem) == 0x000068, "Wrong size on W_BaseContainer_C_GetDataOfHostedItem");
static_assert(offsetof(W_BaseContainer_C_GetDataOfHostedItem, Param_DataOfHostedItem) == 0x000000, "Member 'W_BaseContainer_C_GetDataOfHostedItem::Param_DataOfHostedItem' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetEmptySlot
// 0x0368 (0x0368 - 0x0000)
struct W_BaseContainer_C_GetEmptySlot final
{
public:
	struct FContainerPickupsInfo                  Item;                                              // 0x0000(0x0068)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          EmptySlotFound_;                                   // 0x0068(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          SlotRef;                                           // 0x0070(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          CachedSlot;                                        // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSlotNotEmpty;                                     // 0x0080(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSlotFound;                                        // 0x0081(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x2];                                       // 0x0082(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentGridIndex;                                  // 0x0084(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemWidth;                                         // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ItemHeight;                                        // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo; // 0x0090(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DE[0x2];                                      // 0x02DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetIndexBySlotLocation_SlotIndex;         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetIndexBySlotLocation_Result;            // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty;                        // 0x02F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F6[0x2];                                      // 0x02F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x02F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0300(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsEmpty__bIsEmpty_1;                      // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0311(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_312[0x2];                                      // 0x0312(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x3];                                      // 0x0319(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSlotLocationByIndex_ColumnIndex_;      // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetSlotLocationByIndex_RowIndex_;         // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x3];                                      // 0x0329(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x032C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x033C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x033D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x033E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x033F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0342(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_343[0x5];                                      // 0x0343(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue_1;                 // 0x0348(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot_1;                // 0x0350(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x3];                                      // 0x0359(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x035C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_4;           // 0x0364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0365(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetEmptySlot) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetEmptySlot");
static_assert(sizeof(W_BaseContainer_C_GetEmptySlot) == 0x000368, "Wrong size on W_BaseContainer_C_GetEmptySlot");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Item) == 0x000000, "Member 'W_BaseContainer_C_GetEmptySlot::Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, EmptySlotFound_) == 0x000068, "Member 'W_BaseContainer_C_GetEmptySlot::EmptySlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, SlotRef) == 0x000070, "Member 'W_BaseContainer_C_GetEmptySlot::SlotRef' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CachedSlot) == 0x000078, "Member 'W_BaseContainer_C_GetEmptySlot::CachedSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, bSlotNotEmpty) == 0x000080, "Member 'W_BaseContainer_C_GetEmptySlot::bSlotNotEmpty' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, bSlotFound) == 0x000081, "Member 'W_BaseContainer_C_GetEmptySlot::bSlotFound' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CurrentGridIndex) == 0x000084, "Member 'W_BaseContainer_C_GetEmptySlot::CurrentGridIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, ItemWidth) == 0x000088, "Member 'W_BaseContainer_C_GetEmptySlot::ItemWidth' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, ItemHeight) == 0x00008C, "Member 'W_BaseContainer_C_GetEmptySlot::ItemHeight' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo) == 0x000090, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_ConvertPickupItemToItemInfoFunc_ItemInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_bool_Variable) == 0x0002B0, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BreakVector2D_X) == 0x0002B8, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BreakVector2D_Y) == 0x0002C0, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_FTrunc_ReturnValue) == 0x0002C8, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_FTrunc_ReturnValue_1) == 0x0002CC, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue) == 0x0002D0, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_int_Variable) == 0x0002D4, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue) == 0x0002D8, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_bool_Variable_1) == 0x0002DC, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_1) == 0x0002DD, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_int_Variable_1) == 0x0002E0, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_1) == 0x0002E4, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue) == 0x0002E8, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_int_Variable_2) == 0x0002EC, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetIndexBySlotLocation_SlotIndex) == 0x0002F0, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetIndexBySlotLocation_SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetIndexBySlotLocation_Result) == 0x0002F4, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetIndexBySlotLocation_Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_IsEmpty__bIsEmpty) == 0x0002F5, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_IsEmpty__bIsEmpty' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetChildAt_ReturnValue) == 0x0002F8, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, K2Node_DynamicCast_AsW_Base_Slot) == 0x000300, "Member 'W_BaseContainer_C_GetEmptySlot::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, K2Node_DynamicCast_bSuccess) == 0x000308, "Member 'W_BaseContainer_C_GetEmptySlot::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_2) == 0x00030C, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_IsEmpty__bIsEmpty_1) == 0x000310, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_IsEmpty__bIsEmpty_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, Temp_bool_Variable_2) == 0x000311, "Member 'W_BaseContainer_C_GetEmptySlot::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000314, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Not_PreBool_ReturnValue_2) == 0x000318, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetSlotLocationByIndex_ColumnIndex_) == 0x00031C, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetSlotLocationByIndex_ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetSlotLocationByIndex_RowIndex_) == 0x000320, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetSlotLocationByIndex_RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_3) == 0x000324, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000328, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_4) == 0x00032C, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue) == 0x000330, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000331, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_5) == 0x000334, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Add_IntInt_ReturnValue_6) == 0x000338, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x00033C, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x00033D, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_1) == 0x00033E, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_2) == 0x00033F, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000340, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000341, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_3) == 0x000342, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetChildAt_ReturnValue_1) == 0x000348, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetChildAt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, K2Node_DynamicCast_AsW_Base_Slot_1) == 0x000350, "Member 'W_BaseContainer_C_GetEmptySlot::K2Node_DynamicCast_AsW_Base_Slot_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, K2Node_DynamicCast_bSuccess_1) == 0x000358, "Member 'W_BaseContainer_C_GetEmptySlot::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_GetChildrenCount_ReturnValue) == 0x00035C, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000360, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_LessEqual_IntInt_ReturnValue_4) == 0x000364, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_LessEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetEmptySlot, CallFunc_BooleanAND_ReturnValue_4) == 0x000365, "Member 'W_BaseContainer_C_GetEmptySlot::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetIndexBySlotLocation
// 0x0030 (0x0030 - 0x0000)
struct W_BaseContainer_C_GetIndexBySlotLocation final
{
public:
	int32                                         ColumnIndex_;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex_;                                         // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SlotIndex_Loc;                                     // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex;                                       // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F[0x1];                                       // 0x001F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetIndexBySlotLocation) == 0x000004, "Wrong alignment on W_BaseContainer_C_GetIndexBySlotLocation");
static_assert(sizeof(W_BaseContainer_C_GetIndexBySlotLocation) == 0x000030, "Wrong size on W_BaseContainer_C_GetIndexBySlotLocation");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, ColumnIndex_) == 0x000000, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, RowIndex_) == 0x000004, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, SlotIndex) == 0x000008, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, Result) == 0x00000C, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::Result' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, SlotIndex_Loc) == 0x000010, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::SlotIndex_Loc' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, RowIndex) == 0x000014, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::RowIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, ColumnIndex) == 0x000018, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::ColumnIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00001C, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x00001D, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_BooleanOR_ReturnValue) == 0x00001E, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_Multiply_IntInt_ReturnValue) == 0x000024, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_Subtract_IntInt_ReturnValue) == 0x000028, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetIndexBySlotLocation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'W_BaseContainer_C_GetIndexBySlotLocation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetItemsWeight
// 0x0058 (0x0058 - 0x0000)
struct W_BaseContainer_C_GetItemsWeight final
{
public:
	double                                        Weight;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TotalWeight;                                       // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetItemWeight_Weight;                     // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetItemsWeight) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetItemsWeight");
static_assert(sizeof(W_BaseContainer_C_GetItemsWeight) == 0x000058, "Wrong size on W_BaseContainer_C_GetItemsWeight");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, Weight) == 0x000000, "Member 'W_BaseContainer_C_GetItemsWeight::Weight' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, TotalWeight) == 0x000008, "Member 'W_BaseContainer_C_GetItemsWeight::TotalWeight' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_BaseContainer_C_GetItemsWeight::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_BaseContainer_C_GetItemsWeight::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Map_Values_Values) == 0x000020, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_GetItemWeight_Weight) == 0x000048, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_GetItemWeight_Weight' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetItemsWeight, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'W_BaseContainer_C_GetItemsWeight::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSizeOfHostedItem
// 0x0248 (0x0248 - 0x0000)
struct W_BaseContainer_C_GetSizeOfHostedItem final
{
public:
	int32                                         X;                                                 // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y;                                                 // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFItemInfo                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0220)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue_1;                      // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSizeOfHostedItem) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetSizeOfHostedItem");
static_assert(sizeof(W_BaseContainer_C_GetSizeOfHostedItem) == 0x000248, "Wrong size on W_BaseContainer_C_GetSizeOfHostedItem");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, X) == 0x000000, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, Y) == 0x000004, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000228, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_BreakVector2D_X) == 0x000230, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_BreakVector2D_Y) == 0x000238, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_Round_ReturnValue) == 0x000240, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSizeOfHostedItem, CallFunc_Round_ReturnValue_1) == 0x000244, "Member 'W_BaseContainer_C_GetSizeOfHostedItem::CallFunc_Round_ReturnValue_1' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSlotByItemId
// 0x0078 (0x0078 - 0x0000)
struct W_BaseContainer_C_GetSlotByItemId final
{
public:
	int32                                         ItemId;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          Slot_Ref;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          SlotFound_;                                        // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bSlotFound_;                                       // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CurrentSlot;                                       // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0038(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_Array_Get_Item;                           // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          K2Node_DynamicCast_AsW_Base_Slot;                  // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemId_ItemID;                         // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSlotByItemId) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetSlotByItemId");
static_assert(sizeof(W_BaseContainer_C_GetSlotByItemId) == 0x000078, "Wrong size on W_BaseContainer_C_GetSlotByItemId");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, ItemId) == 0x000000, "Member 'W_BaseContainer_C_GetSlotByItemId::ItemId' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, Slot_Ref) == 0x000008, "Member 'W_BaseContainer_C_GetSlotByItemId::Slot_Ref' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, SlotFound_) == 0x000010, "Member 'W_BaseContainer_C_GetSlotByItemId::SlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, bSlotFound_) == 0x000011, "Member 'W_BaseContainer_C_GetSlotByItemId::bSlotFound_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CurrentSlot) == 0x000018, "Member 'W_BaseContainer_C_GetSlotByItemId::CurrentSlot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, Temp_bool_True_if_break_was_hit_Variable) == 0x000020, "Member 'W_BaseContainer_C_GetSlotByItemId::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, Temp_int_Array_Index_Variable) == 0x000024, "Member 'W_BaseContainer_C_GetSlotByItemId::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'W_BaseContainer_C_GetSlotByItemId::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_GetAllChildren_ReturnValue) == 0x000038, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_Array_Get_Item) == 0x000050, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_Less_IntInt_ReturnValue) == 0x000058, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, K2Node_DynamicCast_AsW_Base_Slot) == 0x000060, "Member 'W_BaseContainer_C_GetSlotByItemId::K2Node_DynamicCast_AsW_Base_Slot' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'W_BaseContainer_C_GetSlotByItemId::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_BooleanAND_ReturnValue) == 0x000069, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_GetItemId_ItemID) == 0x00006C, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_GetItemId_ItemID' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByItemId, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000070, "Member 'W_BaseContainer_C_GetSlotByItemId::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSlotByName
// 0x00B8 (0x00B8 - 0x0000)
struct W_BaseContainer_C_GetSlotByName final
{
public:
	class FName                                   ItemName;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_BaseSlot_C*                          SlotWidget;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_BaseSlot_C*>                  CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_BaseSlot_C*                          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_GetPickupInfo_PickupInfo;                 // 0x0048(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSlotByName) == 0x000008, "Wrong alignment on W_BaseContainer_C_GetSlotByName");
static_assert(sizeof(W_BaseContainer_C_GetSlotByName) == 0x0000B8, "Wrong size on W_BaseContainer_C_GetSlotByName");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, ItemName) == 0x000000, "Member 'W_BaseContainer_C_GetSlotByName::ItemName' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, SlotWidget) == 0x000008, "Member 'W_BaseContainer_C_GetSlotByName::SlotWidget' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, Temp_int_Array_Index_Variable) == 0x000010, "Member 'W_BaseContainer_C_GetSlotByName::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'W_BaseContainer_C_GetSlotByName::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_Map_Values_Values) == 0x000020, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_Array_Get_Item) == 0x000038, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_GetPickupInfo_PickupInfo) == 0x000048, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_GetPickupInfo_PickupInfo' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotByName, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0000B0, "Member 'W_BaseContainer_C_GetSlotByName::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.GetSlotLocationByIndex
// 0x0020 (0x0020 - 0x0000)
struct W_BaseContainer_C_GetSlotLocationByIndex final
{
public:
	int32                                         SlotIndex;                                         // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex_;                                      // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex_;                                         // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SlotIndex_Loc;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RowIndex;                                          // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ColumnIndex;                                       // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_GetSlotLocationByIndex) == 0x000004, "Wrong alignment on W_BaseContainer_C_GetSlotLocationByIndex");
static_assert(sizeof(W_BaseContainer_C_GetSlotLocationByIndex) == 0x000020, "Wrong size on W_BaseContainer_C_GetSlotLocationByIndex");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, SlotIndex) == 0x000000, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::SlotIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, ColumnIndex_) == 0x000004, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::ColumnIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, RowIndex_) == 0x000008, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::RowIndex_' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, SlotIndex_Loc) == 0x00000C, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::SlotIndex_Loc' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, RowIndex) == 0x000010, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::RowIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, ColumnIndex) == 0x000014, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::ColumnIndex' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, CallFunc_Divide_IntInt_ReturnValue) == 0x000018, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_BaseContainer_C_GetSlotLocationByIndex, CallFunc_Percent_IntInt_ReturnValue) == 0x00001C, "Member 'W_BaseContainer_C_GetSlotLocationByIndex::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.IsContainerHost?
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_IsContainerHost_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_IsContainerHost_) == 0x000001, "Wrong alignment on W_BaseContainer_C_IsContainerHost_");
static_assert(sizeof(W_BaseContainer_C_IsContainerHost_) == 0x000001, "Wrong size on W_BaseContainer_C_IsContainerHost_");
static_assert(offsetof(W_BaseContainer_C_IsContainerHost_, Result) == 0x000000, "Member 'W_BaseContainer_C_IsContainerHost_::Result' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.IsHostedItemRotate?
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_IsHostedItemRotate_ final
{
public:
	bool                                          Rotated;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_IsHostedItemRotate_) == 0x000001, "Wrong alignment on W_BaseContainer_C_IsHostedItemRotate_");
static_assert(sizeof(W_BaseContainer_C_IsHostedItemRotate_) == 0x000001, "Wrong size on W_BaseContainer_C_IsHostedItemRotate_");
static_assert(offsetof(W_BaseContainer_C_IsHostedItemRotate_, Rotated) == 0x000000, "Member 'W_BaseContainer_C_IsHostedItemRotate_::Rotated' has a wrong offset!");

// Function W_BaseContainer.W_BaseContainer_C.NeedSplitEventForHostingItem?
// 0x0001 (0x0001 - 0x0000)
struct W_BaseContainer_C_NeedSplitEventForHostingItem_ final
{
public:
	bool                                          Res;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_BaseContainer_C_NeedSplitEventForHostingItem_) == 0x000001, "Wrong alignment on W_BaseContainer_C_NeedSplitEventForHostingItem_");
static_assert(sizeof(W_BaseContainer_C_NeedSplitEventForHostingItem_) == 0x000001, "Wrong size on W_BaseContainer_C_NeedSplitEventForHostingItem_");
static_assert(offsetof(W_BaseContainer_C_NeedSplitEventForHostingItem_, Res) == 0x000000, "Member 'W_BaseContainer_C_NeedSplitEventForHostingItem_::Res' has a wrong offset!");

}

