#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BTT_GeneratePatrolPoint

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "AIModule_structs.hpp"
#include "AIModule_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BTT_GeneratePatrolPoint.BTT_GeneratePatrolPoint_C
// 0x00A0 (0x0148 - 0x00A8)
class UBTT_GeneratePatrolPoint_C final : public UBTTask_BlueprintBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A8(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	double                                        GenerationRadius;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinDistance;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FoundLocation;                                     // 0x00C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Random_Location;                                   // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LocationGenerated;                                 // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  Controlled_Pawn;                                   // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FBlackboardKeySelector                 AroundKey;                                         // 0x00F0(0x0028)(Edit, BlueprintVisible)
	struct FBlackboardKeySelector                 LocationKey;                                       // 0x0118(0x0028)(Edit, BlueprintVisible)
	class AZombie_C*                              Zombie;                                            // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BTT_GeneratePatrolPoint(int32 EntryPoint);
	void ReceiveExecuteAI(class AAIController* OwnerController, class APawn* ControlledPawn);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BTT_GeneratePatrolPoint_C">();
	}
	static class UBTT_GeneratePatrolPoint_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBTT_GeneratePatrolPoint_C>();
	}
};
static_assert(alignof(UBTT_GeneratePatrolPoint_C) == 0x000008, "Wrong alignment on UBTT_GeneratePatrolPoint_C");
static_assert(sizeof(UBTT_GeneratePatrolPoint_C) == 0x000148, "Wrong size on UBTT_GeneratePatrolPoint_C");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, UberGraphFrame) == 0x0000A8, "Member 'UBTT_GeneratePatrolPoint_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, GenerationRadius) == 0x0000B0, "Member 'UBTT_GeneratePatrolPoint_C::GenerationRadius' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, MinDistance) == 0x0000B8, "Member 'UBTT_GeneratePatrolPoint_C::MinDistance' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, FoundLocation) == 0x0000C0, "Member 'UBTT_GeneratePatrolPoint_C::FoundLocation' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, Random_Location) == 0x0000C8, "Member 'UBTT_GeneratePatrolPoint_C::Random_Location' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, LocationGenerated) == 0x0000E0, "Member 'UBTT_GeneratePatrolPoint_C::LocationGenerated' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, Controlled_Pawn) == 0x0000E8, "Member 'UBTT_GeneratePatrolPoint_C::Controlled_Pawn' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, AroundKey) == 0x0000F0, "Member 'UBTT_GeneratePatrolPoint_C::AroundKey' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, LocationKey) == 0x000118, "Member 'UBTT_GeneratePatrolPoint_C::LocationKey' has a wrong offset!");
static_assert(offsetof(UBTT_GeneratePatrolPoint_C, Zombie) == 0x000140, "Member 'UBTT_GeneratePatrolPoint_C::Zombie' has a wrong offset!");

}

