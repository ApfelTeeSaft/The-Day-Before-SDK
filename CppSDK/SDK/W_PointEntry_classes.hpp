#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_PointEntry

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_PointEntry.W_PointEntry_C
// 0x0098 (0x0318 - 0x0280)
class UW_PointEntry_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                ChooseButton;                                      // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 FrontLayer;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_18;                                          // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RegionTextView;                                    // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FName                                   RegionName;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UW_ChoosePoint_C*                       Parent;                                            // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpening;                                         // 0x02B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Duration;                                          // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spent;                                             // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsClosing;                                         // 0x02D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsOpened;                                          // 0x02D1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D2[0x6];                                      // 0x02D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        OpenWeight;                                        // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDisappear;                                       // 0x02E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLoading;                                         // 0x02E1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E2[0x6];                                      // 0x02E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ButtonStartY;                                      // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ButtonLoadY;                                       // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPaperSprite*                           Sprite;                                            // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Text;                                              // 0x0300(0x0018)(Edit, BlueprintVisible)

public:
	void bLock();
	void BndEvt__Button_60_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BP_OnEntryReleased();
	void BP_OnItemExpansionChanged(bool bIsExpanded);
	void BP_OnItemSelectionChanged(bool bIsSelected);
	void Close();
	void Construct();
	void Disappear();
	void ExecuteUbergraph_W_PointEntry(int32 EntryPoint);
	void Extend();
	void OnChooseRegion(class FName Region);
	void OnClickRegion(class FName Region);
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void Open();
	void Reset();
	void SetButtonOpacity(double Opa);
	void SetTextAndButtonOpacity(double Opacity);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Unlock();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_PointEntry_C">();
	}
	static class UW_PointEntry_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_PointEntry_C>();
	}
};
static_assert(alignof(UW_PointEntry_C) == 0x000008, "Wrong alignment on UW_PointEntry_C");
static_assert(sizeof(UW_PointEntry_C) == 0x000318, "Wrong size on UW_PointEntry_C");
static_assert(offsetof(UW_PointEntry_C, UberGraphFrame) == 0x000280, "Member 'UW_PointEntry_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, ChooseButton) == 0x000288, "Member 'UW_PointEntry_C::ChooseButton' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, FrontLayer) == 0x000290, "Member 'UW_PointEntry_C::FrontLayer' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Image_18) == 0x000298, "Member 'UW_PointEntry_C::Image_18' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, RegionTextView) == 0x0002A0, "Member 'UW_PointEntry_C::RegionTextView' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, RegionName) == 0x0002A8, "Member 'UW_PointEntry_C::RegionName' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Parent) == 0x0002B0, "Member 'UW_PointEntry_C::Parent' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, IsOpening) == 0x0002B8, "Member 'UW_PointEntry_C::IsOpening' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Duration) == 0x0002C0, "Member 'UW_PointEntry_C::Duration' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Spent) == 0x0002C8, "Member 'UW_PointEntry_C::Spent' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, IsClosing) == 0x0002D0, "Member 'UW_PointEntry_C::IsClosing' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, IsOpened) == 0x0002D1, "Member 'UW_PointEntry_C::IsOpened' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, OpenWeight) == 0x0002D8, "Member 'UW_PointEntry_C::OpenWeight' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, IsDisappear) == 0x0002E0, "Member 'UW_PointEntry_C::IsDisappear' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, IsLoading) == 0x0002E1, "Member 'UW_PointEntry_C::IsLoading' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, ButtonStartY) == 0x0002E8, "Member 'UW_PointEntry_C::ButtonStartY' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, ButtonLoadY) == 0x0002F0, "Member 'UW_PointEntry_C::ButtonLoadY' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Sprite) == 0x0002F8, "Member 'UW_PointEntry_C::Sprite' has a wrong offset!");
static_assert(offsetof(UW_PointEntry_C, Text) == 0x000300, "Member 'UW_PointEntry_C::Text' has a wrong offset!");

}

