#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Vehicle_LightController

#include "Basic.hpp"

#include "VehicleSystemPlugin_classes.hpp"
#include "LightConfig_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Vehicle_LightController.Vehicle_LightController_C
// 0x0030 (0x02D0 - 0x02A0)
class UVehicle_LightController_C final : public UVehicleComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x02A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<class ULightComponent*>                LightSources;                                      // 0x02A8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FLightConfig>                   Relations;                                         // 0x02B8(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Intensity;                                         // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_Vehicle_LightController(int32 EntryPoint);
	void GetIntensity(double* Param_Intensity);
	void HasActiveLights(bool* Active);
	void Illuminate(double Param_Intensity);
	void Init();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Vehicle_LightController_C">();
	}
	static class UVehicle_LightController_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UVehicle_LightController_C>();
	}
};
static_assert(alignof(UVehicle_LightController_C) == 0x000010, "Wrong alignment on UVehicle_LightController_C");
static_assert(sizeof(UVehicle_LightController_C) == 0x0002D0, "Wrong size on UVehicle_LightController_C");
static_assert(offsetof(UVehicle_LightController_C, UberGraphFrame) == 0x0002A0, "Member 'UVehicle_LightController_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UVehicle_LightController_C, LightSources) == 0x0002A8, "Member 'UVehicle_LightController_C::LightSources' has a wrong offset!");
static_assert(offsetof(UVehicle_LightController_C, Relations) == 0x0002B8, "Member 'UVehicle_LightController_C::Relations' has a wrong offset!");
static_assert(offsetof(UVehicle_LightController_C, Intensity) == 0x0002C8, "Member 'UVehicle_LightController_C::Intensity' has a wrong offset!");

}

