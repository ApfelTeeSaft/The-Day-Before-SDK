#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZombieDeadBody

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "DismembermentPart_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass ZombieDeadBody.ZombieDeadBody_C
// 0x0150 (0x0468 - 0x0318)
class AZombieDeadBody_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   RightLeg;                                          // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftLeg;                                           // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   RightArm;                                          // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   LeftArm;                                           // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Body;                                              // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Feet;                                              // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Head;                                              // 0x0350(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         DecayTimeline_DecayValue_F6DBDDEC4801F170B7EABEAA7EEA67B4; // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            DecayTimeline__Direction_F6DBDDEC4801F170B7EABEAA7EEA67B4; // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35D[0x3];                                      // 0x035D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     DecayTimeline;                                     // 0x0360(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              Zombie;                                            // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ShowingTimer;                                      // 0x0370(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         ZombieMeshType;                                    // 0x0378(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TSoftObjectPtr<class UStaticMesh>>     DismembermentParts;                                // 0x0380(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           LeftArmTimer;                                      // 0x0390(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RightArmTimer;                                     // 0x0398(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           LeftLegTimer;                                      // 0x03A0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RightLegTimer;                                     // 0x03A8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedLeftArmDecal;                               // 0x03B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedRightArmDecal;                              // 0x03B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedLeftLegDecal;                               // 0x03B2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnedRightLegDecal;                              // 0x03B3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        HitDecalLifeSpan;                                  // 0x03B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PoolDecalLifeSpan;                                 // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBoneName;                                      // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FPoseSnapshot                          AfterDeathPose;                                    // 0x03D0(0x0038)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          AfterDeath;                                        // 0x0408(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x7];                                      // 0x0409(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieDeadBodyLootPoint_C*             LootPoint;                                         // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnFinishInitialization;                            // 0x0418(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          NoPhysics;                                         // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       AllMaterials;                                      // 0x0430(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FTimerHandle                           DecayStartTimer;                                   // 0x0440(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         DecayStartDelay;                                   // 0x0448(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   DecayKey;                                          // 0x044C(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DecayCurve;                                        // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ADropBox_LP_C*                          LootPointBag;                                      // 0x0460(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeComponentsTickEnabled(bool NeedTick);
	void ChangeComponentsTickInterval(double TickInterval);
	void CheckCouldShow();
	void CheckLeftArmHit();
	void CheckLeftLegHit();
	void CheckRightArmHit();
	void CheckRightLegHit();
	void CreateDMIForMesh(class UMeshComponent*& Mesh);
	void DecayTimeline__FinishedFunc();
	void DecayTimeline__UpdateFunc();
	void ExecuteUbergraph_ZombieDeadBody(int32 EntryPoint);
	void FinishInitialization();
	void Initialize(bool Param_NoPhysics);
	void LoadDismemberMeshes();
	void OnFinishInitialization__DelegateSignature();
	void OnLoaded_38F3396D4956D571BDCB9AA41630DFA8(class UObject* Loaded);
	void OnLoaded_38F3396D4956D571BDCB9AA4A15074E6(class UObject* Loaded);
	void OnLoaded_38F3396D4956D571BDCB9AA4A3D9809F(class UObject* Loaded);
	void OnLoaded_38F3396D4956D571BDCB9AA4CD186DA2(class UObject* Loaded);
	void ReceiveBeginPlay();
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void ReceiveTick(float DeltaSeconds);
	void SetBodyTransform();
	void SetLootPoint(class AZombieDeadBodyLootPoint_C* Param_LootPoint);
	void SetLootPointBag(class ADropBox_LP_C* Param_LootPointBag);
	void SetSkeletalMeshes();
	void SetupSkeletalMeshMaterials();
	void Show_Dismembered_Mesh_Part(EDismembermentPart DismembermentPart, const struct FVector& TraceStart, const struct FVector& LimbImpulse);
	void SpawnDecalUnderLimb(const struct FVector& LimbLocation, class UMaterialInstance* DecalToSpawn, int32 DecalMinSize, int32 DecalMaxSize, double DecalLifeSpan, struct FSpawnDecalStructure* ResultStructure);
	void StartDecayZombie();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ZombieDeadBody_C">();
	}
	static class AZombieDeadBody_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AZombieDeadBody_C>();
	}
};
static_assert(alignof(AZombieDeadBody_C) == 0x000008, "Wrong alignment on AZombieDeadBody_C");
static_assert(sizeof(AZombieDeadBody_C) == 0x000468, "Wrong size on AZombieDeadBody_C");
static_assert(offsetof(AZombieDeadBody_C, UberGraphFrame) == 0x000318, "Member 'AZombieDeadBody_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, RightLeg) == 0x000320, "Member 'AZombieDeadBody_C::RightLeg' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LeftLeg) == 0x000328, "Member 'AZombieDeadBody_C::LeftLeg' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, RightArm) == 0x000330, "Member 'AZombieDeadBody_C::RightArm' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LeftArm) == 0x000338, "Member 'AZombieDeadBody_C::LeftArm' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, Body) == 0x000340, "Member 'AZombieDeadBody_C::Body' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, Feet) == 0x000348, "Member 'AZombieDeadBody_C::Feet' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, Head) == 0x000350, "Member 'AZombieDeadBody_C::Head' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayTimeline_DecayValue_F6DBDDEC4801F170B7EABEAA7EEA67B4) == 0x000358, "Member 'AZombieDeadBody_C::DecayTimeline_DecayValue_F6DBDDEC4801F170B7EABEAA7EEA67B4' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayTimeline__Direction_F6DBDDEC4801F170B7EABEAA7EEA67B4) == 0x00035C, "Member 'AZombieDeadBody_C::DecayTimeline__Direction_F6DBDDEC4801F170B7EABEAA7EEA67B4' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayTimeline) == 0x000360, "Member 'AZombieDeadBody_C::DecayTimeline' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, Zombie) == 0x000368, "Member 'AZombieDeadBody_C::Zombie' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, ShowingTimer) == 0x000370, "Member 'AZombieDeadBody_C::ShowingTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, ZombieMeshType) == 0x000378, "Member 'AZombieDeadBody_C::ZombieMeshType' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DismembermentParts) == 0x000380, "Member 'AZombieDeadBody_C::DismembermentParts' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LeftArmTimer) == 0x000390, "Member 'AZombieDeadBody_C::LeftArmTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, RightArmTimer) == 0x000398, "Member 'AZombieDeadBody_C::RightArmTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LeftLegTimer) == 0x0003A0, "Member 'AZombieDeadBody_C::LeftLegTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, RightLegTimer) == 0x0003A8, "Member 'AZombieDeadBody_C::RightLegTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, SpawnedLeftArmDecal) == 0x0003B0, "Member 'AZombieDeadBody_C::SpawnedLeftArmDecal' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, SpawnedRightArmDecal) == 0x0003B1, "Member 'AZombieDeadBody_C::SpawnedRightArmDecal' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, SpawnedLeftLegDecal) == 0x0003B2, "Member 'AZombieDeadBody_C::SpawnedLeftLegDecal' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, SpawnedRightLegDecal) == 0x0003B3, "Member 'AZombieDeadBody_C::SpawnedRightLegDecal' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, HitDecalLifeSpan) == 0x0003B8, "Member 'AZombieDeadBody_C::HitDecalLifeSpan' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, PoolDecalLifeSpan) == 0x0003C0, "Member 'AZombieDeadBody_C::PoolDecalLifeSpan' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, RootBoneName) == 0x0003C8, "Member 'AZombieDeadBody_C::RootBoneName' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, AfterDeathPose) == 0x0003D0, "Member 'AZombieDeadBody_C::AfterDeathPose' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, AfterDeath) == 0x000408, "Member 'AZombieDeadBody_C::AfterDeath' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LootPoint) == 0x000410, "Member 'AZombieDeadBody_C::LootPoint' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, OnFinishInitialization) == 0x000418, "Member 'AZombieDeadBody_C::OnFinishInitialization' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, NoPhysics) == 0x000428, "Member 'AZombieDeadBody_C::NoPhysics' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, AllMaterials) == 0x000430, "Member 'AZombieDeadBody_C::AllMaterials' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayStartTimer) == 0x000440, "Member 'AZombieDeadBody_C::DecayStartTimer' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayStartDelay) == 0x000448, "Member 'AZombieDeadBody_C::DecayStartDelay' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayKey) == 0x00044C, "Member 'AZombieDeadBody_C::DecayKey' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, DecayCurve) == 0x000458, "Member 'AZombieDeadBody_C::DecayCurve' has a wrong offset!");
static_assert(offsetof(AZombieDeadBody_C, LootPointBag) == 0x000460, "Member 'AZombieDeadBody_C::LootPointBag' has a wrong offset!");

}

