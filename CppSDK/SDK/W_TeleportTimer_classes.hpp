#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TeleportTimer

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "FMODStudio_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_TeleportTimer.W_TeleportTimer_C
// 0x0128 (0x03A8 - 0x0280)
class UW_TeleportTimer_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       PulseTimer;                                        // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ProgressBarAnim;                                   // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewAnimation;                                      // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel;                                       // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox;                                     // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BG;                                          // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Fill;                                        // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_1;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UProgressBar*                           ProgressBar_Timer;                                 // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Timer;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_51;                                      // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TipActualText;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TipNameText;                                       // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Interact_C*                          W_Interact;                                        // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_DialogueSubtitles_C*               WBP_DialogueSubtitles;                             // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TipsInfo_C*                        WBP_TipsInfo;                                      // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_0;                                  // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   ZeroTimeFormat;                                    // 0x0320(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	double                                        Seconds;                                           // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentTime;                                       // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStarted;                                         // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x7];                                      // 0x0349(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Timer;                                             // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        Current;                                           // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFMODEventInstance                     SubtitlesSound;                                    // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FTimerHandle                           SubtitlesPhraseTimer;                              // 0x0368(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnSubtitlesPhraseEnded;                            // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FFMODEventInstance                     Extraction1;                                       // 0x0380(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          Car_;                                              // 0x0388(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   Player;                                            // 0x0390(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           InteractButtonTimer;                               // 0x0398(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          End;                                               // 0x03A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_W_TeleportTimer(int32 EntryPoint);
	void GetText();
	void Hide();
	void InteractEvent();
	void OnEndedSubtitlesPhrase();
	void OnreturnTipsHeader();
	void OnSubtitlesPhraseEnded__DelegateSignature();
	void PlayerEvent(bool On_);
	void SetFillValue(double Param_Seconds, double Value);
	void Show(double Time, bool bIsWithoutBackpack, bool Param_Car_, bool NightWarning, bool DayWarning);
	void StartAnim();
	void StartInteractExit();
	void StopInteractExit();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_TeleportTimer_C">();
	}
	static class UW_TeleportTimer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_TeleportTimer_C>();
	}
};
static_assert(alignof(UW_TeleportTimer_C) == 0x000008, "Wrong alignment on UW_TeleportTimer_C");
static_assert(sizeof(UW_TeleportTimer_C) == 0x0003A8, "Wrong size on UW_TeleportTimer_C");
static_assert(offsetof(UW_TeleportTimer_C, UberGraphFrame) == 0x000280, "Member 'UW_TeleportTimer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, PulseTimer) == 0x000288, "Member 'UW_TeleportTimer_C::PulseTimer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, ProgressBarAnim) == 0x000290, "Member 'UW_TeleportTimer_C::ProgressBarAnim' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, NewAnimation) == 0x000298, "Member 'UW_TeleportTimer_C::NewAnimation' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, CanvasPanel) == 0x0002A0, "Member 'UW_TeleportTimer_C::CanvasPanel' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, HorizontalBox) == 0x0002A8, "Member 'UW_TeleportTimer_C::HorizontalBox' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Image_BG) == 0x0002B0, "Member 'UW_TeleportTimer_C::Image_BG' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Image_Fill) == 0x0002B8, "Member 'UW_TeleportTimer_C::Image_Fill' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Image_Icon) == 0x0002C0, "Member 'UW_TeleportTimer_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, InvalidationBox_0) == 0x0002C8, "Member 'UW_TeleportTimer_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, InvalidationBox_1) == 0x0002D0, "Member 'UW_TeleportTimer_C::InvalidationBox_1' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, ProgressBar_Timer) == 0x0002D8, "Member 'UW_TeleportTimer_C::ProgressBar_Timer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Text_Timer) == 0x0002E0, "Member 'UW_TeleportTimer_C::Text_Timer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, TextBlock_51) == 0x0002E8, "Member 'UW_TeleportTimer_C::TextBlock_51' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, TipActualText) == 0x0002F0, "Member 'UW_TeleportTimer_C::TipActualText' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, TipNameText) == 0x0002F8, "Member 'UW_TeleportTimer_C::TipNameText' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, W_Interact) == 0x000300, "Member 'UW_TeleportTimer_C::W_Interact' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, WBP_DialogueSubtitles) == 0x000308, "Member 'UW_TeleportTimer_C::WBP_DialogueSubtitles' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, WBP_TipsInfo) == 0x000310, "Member 'UW_TeleportTimer_C::WBP_TipsInfo' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, WidgetSwitcher_0) == 0x000318, "Member 'UW_TeleportTimer_C::WidgetSwitcher_0' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, ZeroTimeFormat) == 0x000320, "Member 'UW_TeleportTimer_C::ZeroTimeFormat' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Seconds) == 0x000338, "Member 'UW_TeleportTimer_C::Seconds' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, CurrentTime) == 0x000340, "Member 'UW_TeleportTimer_C::CurrentTime' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, IsStarted) == 0x000348, "Member 'UW_TeleportTimer_C::IsStarted' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Timer) == 0x000350, "Member 'UW_TeleportTimer_C::Timer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Current) == 0x000358, "Member 'UW_TeleportTimer_C::Current' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, SubtitlesSound) == 0x000360, "Member 'UW_TeleportTimer_C::SubtitlesSound' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, SubtitlesPhraseTimer) == 0x000368, "Member 'UW_TeleportTimer_C::SubtitlesPhraseTimer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, OnSubtitlesPhraseEnded) == 0x000370, "Member 'UW_TeleportTimer_C::OnSubtitlesPhraseEnded' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Extraction1) == 0x000380, "Member 'UW_TeleportTimer_C::Extraction1' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Car_) == 0x000388, "Member 'UW_TeleportTimer_C::Car_' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, Player) == 0x000390, "Member 'UW_TeleportTimer_C::Player' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, InteractButtonTimer) == 0x000398, "Member 'UW_TeleportTimer_C::InteractButtonTimer' has a wrong offset!");
static_assert(offsetof(UW_TeleportTimer_C, End) == 0x0003A0, "Member 'UW_TeleportTimer_C::End' has a wrong offset!");

}

