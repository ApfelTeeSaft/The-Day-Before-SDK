#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_WorkRPNotification

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function W_WorkRPNotification.W_WorkRPNotification_C.ExecuteUbergraph_W_WorkRPNotification
// 0x02E8 (0x02E8 - 0x0000)
struct W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0080(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x00E8(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0138(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_4;            // 0x0188(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x01D8(0x0010)(ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_5;            // 0x01E8(0x0050)(HasGetValueTypeHash)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x0238(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_6;            // 0x0250(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x02A0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_2;                     // 0x02B0(0x0018)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x02C8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x02D8(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_TextText_ReturnValue;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x3];                                      // 0x02E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification) == 0x000008, "Wrong alignment on W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification");
static_assert(sizeof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification) == 0x0002E8, "Wrong size on W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, EntryPoint) == 0x000000, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_DynamicCast_AsSurvival_Player) == 0x000010, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_Event_IsDesignTime) == 0x000019, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeArray_Array) == 0x000070, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_1) == 0x000080, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_Format_ReturnValue) == 0x0000D0, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_2) == 0x0000E8, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_3) == 0x000138, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_4) == 0x000188, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_4' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeArray_Array_1) == 0x0001D8, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_5) == 0x0001E8, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_5' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_Format_ReturnValue_1) == 0x000238, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeStruct_FormatArgumentData_6) == 0x000250, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeStruct_FormatArgumentData_6' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_MakeArray_Array_2) == 0x0002A0, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_Format_ReturnValue_2) == 0x0002B0, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_Format_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, K2Node_CreateDelegate_OutputDelegate) == 0x0002C8, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0002D8, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_EqualEqual_TextText_ReturnValue) == 0x0002E0, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_EqualEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification, CallFunc_SelectInt_ReturnValue) == 0x0002E4, "Member 'W_WorkRPNotification_C_ExecuteUbergraph_W_WorkRPNotification::CallFunc_SelectInt_ReturnValue' has a wrong offset!");

// Function W_WorkRPNotification.W_WorkRPNotification_C.InitTimeNumber 
// 0x01F0 (0x01F0 - 0x0000)
struct W_WorkRPNotification_C_InitTimeNumber_ final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0050)(HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x00C0(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_2;            // 0x0110(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_3;            // 0x0160(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C0(0x0018)()
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorkRPNotification_C_InitTimeNumber_) == 0x000008, "Wrong alignment on W_WorkRPNotification_C_InitTimeNumber_");
static_assert(sizeof(W_WorkRPNotification_C_InitTimeNumber_) == 0x0001F0, "Wrong size on W_WorkRPNotification_C_InitTimeNumber_");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_DynamicCast_AsSurv_PC) == 0x000010, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Round_ReturnValue) == 0x0000A0, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A8, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_MakeStruct_FormatArgumentData_1) == 0x0000C0, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_MakeStruct_FormatArgumentData_2) == 0x000110, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_MakeStruct_FormatArgumentData_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_MakeStruct_FormatArgumentData_3) == 0x000160, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_MakeStruct_FormatArgumentData_3' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, K2Node_MakeArray_Array) == 0x0001B0, "Member 'W_WorkRPNotification_C_InitTimeNumber_::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Format_ReturnValue) == 0x0001C0, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0001E0, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_InitTimeNumber_, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'W_WorkRPNotification_C_InitTimeNumber_::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");

// Function W_WorkRPNotification.W_WorkRPNotification_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_WorkRPNotification_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_WorkRPNotification_C_PreConstruct) == 0x000001, "Wrong alignment on W_WorkRPNotification_C_PreConstruct");
static_assert(sizeof(W_WorkRPNotification_C_PreConstruct) == 0x000001, "Wrong size on W_WorkRPNotification_C_PreConstruct");
static_assert(offsetof(W_WorkRPNotification_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_WorkRPNotification_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_WorkRPNotification.W_WorkRPNotification_C.SetCurrentProgress
// 0x00E0 (0x00E0 - 0x0000)
struct W_WorkRPNotification_C_SetCurrentProgress final
{
public:
	class FText                                   Current;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0018(0x0050)(HasGetValueTypeHash)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData_1;            // 0x0068(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00B8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C8(0x0018)()
};
static_assert(alignof(W_WorkRPNotification_C_SetCurrentProgress) == 0x000008, "Wrong alignment on W_WorkRPNotification_C_SetCurrentProgress");
static_assert(sizeof(W_WorkRPNotification_C_SetCurrentProgress) == 0x0000E0, "Wrong size on W_WorkRPNotification_C_SetCurrentProgress");
static_assert(offsetof(W_WorkRPNotification_C_SetCurrentProgress, Current) == 0x000000, "Member 'W_WorkRPNotification_C_SetCurrentProgress::Current' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_SetCurrentProgress, K2Node_MakeStruct_FormatArgumentData) == 0x000018, "Member 'W_WorkRPNotification_C_SetCurrentProgress::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_SetCurrentProgress, K2Node_MakeStruct_FormatArgumentData_1) == 0x000068, "Member 'W_WorkRPNotification_C_SetCurrentProgress::K2Node_MakeStruct_FormatArgumentData_1' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_SetCurrentProgress, K2Node_MakeArray_Array) == 0x0000B8, "Member 'W_WorkRPNotification_C_SetCurrentProgress::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(W_WorkRPNotification_C_SetCurrentProgress, CallFunc_Format_ReturnValue) == 0x0000C8, "Member 'W_WorkRPNotification_C_SetCurrentProgress::CallFunc_Format_ReturnValue' has a wrong offset!");

}

