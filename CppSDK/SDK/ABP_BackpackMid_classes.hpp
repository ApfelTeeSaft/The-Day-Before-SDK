#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_BackpackMid

#include "Basic.hpp"

#include "AnimGraphRuntime_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "ABP_BackpackMid_structs.hpp"
#include "CraftState_structs.hpp"
#include "StanceState_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_BackpackMid.ABP_BackpackMid_C
// 0x1370 (0x16C0 - 0x0350)
class UABP_BackpackMid_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct ABP_BackpackMid::FAnimBlueprintGeneratedMutableData __AnimBlueprintMutables;                           // 0x0358(0x0002)(HasGetValueTypeHash)
	uint8                                         Pad_35A[0x6];                                      // 0x035A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0360(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0368(0x0008)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace;               // 0x0370(0x0020)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0390(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_5;                  // 0x03D8(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_4;                  // 0x0400(0x0028)()
	struct FAnimNode_BlendListByEnum              AnimGraphNode_BlendListByEnum;                     // 0x0428(0x0048)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_3;                  // 0x0470(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_2;                  // 0x0498(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_5;                    // 0x04C0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_7;                       // 0x0508(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_4;                    // 0x0528(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_6;                       // 0x0570(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_3;                    // 0x0590(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_5;                       // 0x05D8(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_2;                      // 0x05F8(0x00C8)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult_1;                  // 0x06C0(0x0028)()
	struct FAnimNode_TransitionResult             AnimGraphNode_TransitionResult;                    // 0x06E8(0x0028)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_2;                    // 0x0710(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_4;                       // 0x0758(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer_1;                    // 0x0778(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_3;                       // 0x07C0(0x0020)()
	struct FAnimNode_SequencePlayer               AnimGraphNode_SequencePlayer;                      // 0x07E0(0x0048)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_2;                       // 0x0828(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine_1;                      // 0x0848(0x00C8)()
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult_1;                       // 0x0910(0x0020)()
	struct FAnimNode_CopyPoseFromMesh             AnimGraphNode_CopyPoseFromMesh;                    // 0x0930(0x01D8)(ContainsInstancedReference)
	struct FAnimNode_StateResult                  AnimGraphNode_StateResult;                         // 0x0B08(0x0020)()
	struct FAnimNode_StateMachine                 AnimGraphNode_StateMachine;                        // 0x0B28(0x00C8)()
	struct FAnimNode_LinkedInputPose              AnimGraphNode_LinkedInputPose;                     // 0x0BF0(0x00C8)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace;               // 0x0CB8(0x0020)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x0CD8(0x0020)()
	uint8                                         Pad_CF8[0x8];                                      // 0x0CF8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_RigidBody                    AnimGraphNode_RigidBody;                           // 0x0D00(0x09A0)()
	class USkeletalMeshComponent*                 CharMesh;                                          // 0x16A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	ECraftState                                   CraftState;                                        // 0x16A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A9[0x7];                                     // 0x16A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Player;                                            // 0x16B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EStanceState                                  Stance;                                            // 0x16B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          backpackDressed;                                   // 0x16B9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid;                                             // 0x16BA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(const struct FPoseLink& InPose, struct FPoseLink* Param_AnimGraph);
	void AnimNotify_Backpack_dressed();
	void AnimNotify_BeginCraft();
	void BackpackSetCraftState(ECraftState State);
	void BlueprintInitializeAnimation();
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BackpackMid_AnimGraphNode_TransitionResult_0F830878441A68BF75E3C58737424A3A();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BackpackMid_AnimGraphNode_TransitionResult_6EFD43A846841971BA90238EF326F96E();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_BackpackMid_AnimGraphNode_TransitionResult_B11579014ADEF1D2499DF08F606AEC4C();
	void ExecuteUbergraph_ABP_BackpackMid(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_BackpackMid_C">();
	}
	static class UABP_BackpackMid_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_BackpackMid_C>();
	}
};
static_assert(alignof(UABP_BackpackMid_C) == 0x000010, "Wrong alignment on UABP_BackpackMid_C");
static_assert(sizeof(UABP_BackpackMid_C) == 0x0016C0, "Wrong size on UABP_BackpackMid_C");
static_assert(offsetof(UABP_BackpackMid_C, UberGraphFrame) == 0x000350, "Member 'UABP_BackpackMid_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, __AnimBlueprintMutables) == 0x000358, "Member 'UABP_BackpackMid_C::__AnimBlueprintMutables' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimBlueprintExtension_PropertyAccess) == 0x000360, "Member 'UABP_BackpackMid_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimBlueprintExtension_Base) == 0x000368, "Member 'UABP_BackpackMid_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_ComponentToLocalSpace) == 0x000370, "Member 'UABP_BackpackMid_C::AnimGraphNode_ComponentToLocalSpace' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_Slot) == 0x000390, "Member 'UABP_BackpackMid_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult_5) == 0x0003D8, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult_4) == 0x000400, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_BlendListByEnum) == 0x000428, "Member 'UABP_BackpackMid_C::AnimGraphNode_BlendListByEnum' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult_3) == 0x000470, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult_2) == 0x000498, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer_5) == 0x0004C0, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer_5' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_7) == 0x000508, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_7' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer_4) == 0x000528, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer_4' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_6) == 0x000570, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_6' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer_3) == 0x000590, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer_3' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_5) == 0x0005D8, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_5' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateMachine_2) == 0x0005F8, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateMachine_2' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult_1) == 0x0006C0, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_TransitionResult) == 0x0006E8, "Member 'UABP_BackpackMid_C::AnimGraphNode_TransitionResult' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer_2) == 0x000710, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer_2' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_4) == 0x000758, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_4' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer_1) == 0x000778, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer_1' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_3) == 0x0007C0, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_3' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_SequencePlayer) == 0x0007E0, "Member 'UABP_BackpackMid_C::AnimGraphNode_SequencePlayer' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_2) == 0x000828, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_2' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateMachine_1) == 0x000848, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateMachine_1' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult_1) == 0x000910, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult_1' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_CopyPoseFromMesh) == 0x000930, "Member 'UABP_BackpackMid_C::AnimGraphNode_CopyPoseFromMesh' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateResult) == 0x000B08, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateResult' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_StateMachine) == 0x000B28, "Member 'UABP_BackpackMid_C::AnimGraphNode_StateMachine' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_LinkedInputPose) == 0x000BF0, "Member 'UABP_BackpackMid_C::AnimGraphNode_LinkedInputPose' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_LocalToComponentSpace) == 0x000CB8, "Member 'UABP_BackpackMid_C::AnimGraphNode_LocalToComponentSpace' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_Root) == 0x000CD8, "Member 'UABP_BackpackMid_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, AnimGraphNode_RigidBody) == 0x000D00, "Member 'UABP_BackpackMid_C::AnimGraphNode_RigidBody' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, CharMesh) == 0x0016A0, "Member 'UABP_BackpackMid_C::CharMesh' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, CraftState) == 0x0016A8, "Member 'UABP_BackpackMid_C::CraftState' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, Player) == 0x0016B0, "Member 'UABP_BackpackMid_C::Player' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, Stance) == 0x0016B8, "Member 'UABP_BackpackMid_C::Stance' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, backpackDressed) == 0x0016B9, "Member 'UABP_BackpackMid_C::backpackDressed' has a wrong offset!");
static_assert(offsetof(UABP_BackpackMid_C, Valid) == 0x0016BA, "Member 'UABP_BackpackMid_C::Valid' has a wrong offset!");

}

