#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Explosion_Flash

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Explosion_classes.hpp"
#include "SFlashbangSettings_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Explosion_Flash.Explosion_Flash_C
// 0x00B8 (0x0378 - 0x02C0)
class AExplosion_Flash_C final : public AExplosion_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_Explosion_Flash_C;                  // 0x02C0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UPointLightComponent*                   Light;                                             // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class APostProcessVolume*                     PP_Vol;                                            // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        FullFlashDuration;                                 // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FadeInterval;                                      // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlashFadeSpeed;                                    // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FlashIntensity;                                    // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AfterimageIntensity;                               // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RingingVolume;                                     // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RingingFadeSpeed;                                  // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        Ringing;                                           // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               PP_Flashbang_Dynamic;                              // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FSFlashbangSettings                    Settings;                                          // 0x0320(0x0048)(Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      As_Survival_Player;                                // 0x0368(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UClass*                                 Decal;                                             // 0x0370(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void CalculateInstanceValues(class UCameraComponent* Camera, struct FSFlashInstance* Instance);
	void CheckForBlocked(class UCameraComponent* Camera, bool* bBlocked);
	void DetonateFlashbangOnClient();
	void DetonateFlashbangOnServer();
	void ExecuteUbergraph_Explosion_Flash(int32 EntryPoint);
	void ReceiveBeginPlay();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Explosion_Flash_C">();
	}
	static class AExplosion_Flash_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AExplosion_Flash_C>();
	}
};
static_assert(alignof(AExplosion_Flash_C) == 0x000008, "Wrong alignment on AExplosion_Flash_C");
static_assert(sizeof(AExplosion_Flash_C) == 0x000378, "Wrong size on AExplosion_Flash_C");
static_assert(offsetof(AExplosion_Flash_C, UberGraphFrame_Explosion_Flash_C) == 0x0002C0, "Member 'AExplosion_Flash_C::UberGraphFrame_Explosion_Flash_C' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, Light) == 0x0002C8, "Member 'AExplosion_Flash_C::Light' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, PP_Vol) == 0x0002D0, "Member 'AExplosion_Flash_C::PP_Vol' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, FullFlashDuration) == 0x0002D8, "Member 'AExplosion_Flash_C::FullFlashDuration' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, FadeInterval) == 0x0002E0, "Member 'AExplosion_Flash_C::FadeInterval' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, FlashFadeSpeed) == 0x0002E8, "Member 'AExplosion_Flash_C::FlashFadeSpeed' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, FlashIntensity) == 0x0002F0, "Member 'AExplosion_Flash_C::FlashIntensity' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, AfterimageIntensity) == 0x0002F8, "Member 'AExplosion_Flash_C::AfterimageIntensity' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, RingingVolume) == 0x000300, "Member 'AExplosion_Flash_C::RingingVolume' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, RingingFadeSpeed) == 0x000308, "Member 'AExplosion_Flash_C::RingingFadeSpeed' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, Ringing) == 0x000310, "Member 'AExplosion_Flash_C::Ringing' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, PP_Flashbang_Dynamic) == 0x000318, "Member 'AExplosion_Flash_C::PP_Flashbang_Dynamic' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, Settings) == 0x000320, "Member 'AExplosion_Flash_C::Settings' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, As_Survival_Player) == 0x000368, "Member 'AExplosion_Flash_C::As_Survival_Player' has a wrong offset!");
static_assert(offsetof(AExplosion_Flash_C, Decal) == 0x000370, "Member 'AExplosion_Flash_C::Decal' has a wrong offset!");

}

