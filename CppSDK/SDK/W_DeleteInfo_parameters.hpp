#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_DeleteInfo

#include "Basic.hpp"

#include "FItemInfo_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function W_DeleteInfo.W_DeleteInfo_C.ExecuteUbergraph_W_DeleteInfo
// 0x0020 (0x0020 - 0x0000)
struct W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Name;                           // 0x0008(0x0018)()
};
static_assert(alignof(W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo) == 0x000008, "Wrong alignment on W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo");
static_assert(sizeof(W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo) == 0x000020, "Wrong size on W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo");
static_assert(offsetof(W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo, EntryPoint) == 0x000000, "Member 'W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo, K2Node_CustomEvent_Name) == 0x000008, "Member 'W_DeleteInfo_C_ExecuteUbergraph_W_DeleteInfo::K2Node_CustomEvent_Name' has a wrong offset!");

// Function W_DeleteInfo.W_DeleteInfo_C.OnUpdate
// 0x0340 (0x0340 - 0x0000)
struct W_DeleteInfo_C_OnUpdate final
{
public:
	struct FFItemInfo                             Item;                                              // 0x0000(0x0220)(BlueprintVisible, BlueprintReadOnly, Parm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0220(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FunctionResult;                                    // 0x0221(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_222[0x6];                                      // 0x0222(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0228(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0240(0x0018)()
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0xF];                                      // 0x0261(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateBrush                            K2Node_MakeStruct_SlateBrush;                      // 0x0270(0x00D0)()
};
static_assert(alignof(W_DeleteInfo_C_OnUpdate) == 0x000010, "Wrong alignment on W_DeleteInfo_C_OnUpdate");
static_assert(sizeof(W_DeleteInfo_C_OnUpdate) == 0x000340, "Wrong size on W_DeleteInfo_C_OnUpdate");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, Item) == 0x000000, "Member 'W_DeleteInfo_C_OnUpdate::Item' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, Result) == 0x000220, "Member 'W_DeleteInfo_C_OnUpdate::Result' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, FunctionResult) == 0x000221, "Member 'W_DeleteInfo_C_OnUpdate::FunctionResult' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000228, "Member 'W_DeleteInfo_C_OnUpdate::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000240, "Member 'W_DeleteInfo_C_OnUpdate::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000258, "Member 'W_DeleteInfo_C_OnUpdate::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000260, "Member 'W_DeleteInfo_C_OnUpdate::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_DeleteInfo_C_OnUpdate, K2Node_MakeStruct_SlateBrush) == 0x000270, "Member 'W_DeleteInfo_C_OnUpdate::K2Node_MakeStruct_SlateBrush' has a wrong offset!");

// Function W_DeleteInfo.W_DeleteInfo_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_DeleteInfo_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_DeleteInfo_C_PreConstruct) == 0x000001, "Wrong alignment on W_DeleteInfo_C_PreConstruct");
static_assert(sizeof(W_DeleteInfo_C_PreConstruct) == 0x000001, "Wrong size on W_DeleteInfo_C_PreConstruct");
static_assert(offsetof(W_DeleteInfo_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_DeleteInfo_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function W_DeleteInfo.W_DeleteInfo_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct W_DeleteInfo_C_SetText final
{
public:
	class FText                                   Param_Name;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(W_DeleteInfo_C_SetText) == 0x000008, "Wrong alignment on W_DeleteInfo_C_SetText");
static_assert(sizeof(W_DeleteInfo_C_SetText) == 0x000018, "Wrong size on W_DeleteInfo_C_SetText");
static_assert(offsetof(W_DeleteInfo_C_SetText, Param_Name) == 0x000000, "Member 'W_DeleteInfo_C_SetText::Param_Name' has a wrong offset!");

}

