#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Throwable

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_Throwable.BP_Throwable_C.ExecuteUbergraph_BP_Throwable
// 0x0320 (0x0320 - 0x0000)
struct BP_Throwable_C_ExecuteUbergraph_BP_Throwable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_HitActor;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_CustomEvent_HitComponent;                   // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_CustomEvent_Hit;                            // 0x0018(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_Event_MyComp;                               // 0x0100(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_Event_Other;                                // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_Event_OtherComp;                            // 0x0110(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_bSelfMoved;                           // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Event_HitLocation;                          // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_HitNormal;                            // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_NormalImpulse;                        // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x0168(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_CampClient_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0270(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_HitLocation;                    // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_Rotation;                       // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_1;              // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue_2;              // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable) == 0x000008, "Wrong alignment on BP_Throwable_C_ExecuteUbergraph_BP_Throwable");
static_assert(sizeof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable) == 0x000320, "Wrong size on BP_Throwable_C_ExecuteUbergraph_BP_Throwable");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, EntryPoint) == 0x000000, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_HasAuthority_ReturnValue) == 0x000004, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_HasAuthority_ReturnValue_1) == 0x000005, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_CustomEvent_HitActor) == 0x000008, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_CustomEvent_HitActor' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_CustomEvent_HitComponent) == 0x000010, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_CustomEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_CustomEvent_Hit) == 0x000018, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_CustomEvent_Hit' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_MyComp) == 0x000100, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_MyComp' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_Other) == 0x000108, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_Other' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_OtherComp) == 0x000110, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_bSelfMoved) == 0x000118, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_HitLocation) == 0x000120, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_HitNormal) == 0x000138, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_NormalImpulse) == 0x000150, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_Event_Hit) == 0x000168, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_HasAuthority_ReturnValue_2) == 0x000250, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_GetPlayerPawn_ReturnValue) == 0x000258, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_GetComponentByClass_ReturnValue) == 0x000260, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000268, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000270, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_CustomEvent_HitLocation) == 0x000288, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_CustomEvent_HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, K2Node_CustomEvent_Rotation) == 0x0002A0, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::K2Node_CustomEvent_Rotation' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0002B8, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_GetActorForwardVector_ReturnValue) == 0x0002C0, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_MakeVector_ReturnValue) == 0x0002D8, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0002F0, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_GetPlayerPawn_ReturnValue_1) == 0x000308, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_GetPlayerPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_GetPlayerPawn_ReturnValue_2) == 0x000310, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_GetPlayerPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ExecuteUbergraph_BP_Throwable, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000318, "Member 'BP_Throwable_C_ExecuteUbergraph_BP_Throwable::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");

// Function BP_Throwable.BP_Throwable_C.HitAction
// 0x0018 (0x0018 - 0x0000)
struct BP_Throwable_C_HitAction final
{
public:
	struct FVector                                HitLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_Throwable_C_HitAction) == 0x000008, "Wrong alignment on BP_Throwable_C_HitAction");
static_assert(sizeof(BP_Throwable_C_HitAction) == 0x000018, "Wrong size on BP_Throwable_C_HitAction");
static_assert(offsetof(BP_Throwable_C_HitAction, HitLocation) == 0x000000, "Member 'BP_Throwable_C_HitAction::HitLocation' has a wrong offset!");

// Function BP_Throwable.BP_Throwable_C.Impulse
// 0x0018 (0x0018 - 0x0000)
struct BP_Throwable_C_Impulse final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Throwable_C_Impulse) == 0x000008, "Wrong alignment on BP_Throwable_C_Impulse");
static_assert(sizeof(BP_Throwable_C_Impulse) == 0x000018, "Wrong size on BP_Throwable_C_Impulse");
static_assert(offsetof(BP_Throwable_C_Impulse, Rotation) == 0x000000, "Member 'BP_Throwable_C_Impulse::Rotation' has a wrong offset!");

// Function BP_Throwable.BP_Throwable_C.OnHit
// 0x00F8 (0x00F8 - 0x0000)
struct BP_Throwable_C_OnHit final
{
public:
	class AActor*                                 HitActor;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0010(0x00E8)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Throwable_C_OnHit) == 0x000008, "Wrong alignment on BP_Throwable_C_OnHit");
static_assert(sizeof(BP_Throwable_C_OnHit) == 0x0000F8, "Wrong size on BP_Throwable_C_OnHit");
static_assert(offsetof(BP_Throwable_C_OnHit, HitActor) == 0x000000, "Member 'BP_Throwable_C_OnHit::HitActor' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_OnHit, HitComponent) == 0x000008, "Member 'BP_Throwable_C_OnHit::HitComponent' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_OnHit, Hit) == 0x000010, "Member 'BP_Throwable_C_OnHit::Hit' has a wrong offset!");

// Function BP_Throwable.BP_Throwable_C.OnImpulseMulti
// 0x0018 (0x0018 - 0x0000)
struct BP_Throwable_C_OnImpulseMulti final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_Throwable_C_OnImpulseMulti) == 0x000008, "Wrong alignment on BP_Throwable_C_OnImpulseMulti");
static_assert(sizeof(BP_Throwable_C_OnImpulseMulti) == 0x000018, "Wrong size on BP_Throwable_C_OnImpulseMulti");
static_assert(offsetof(BP_Throwable_C_OnImpulseMulti, Rotation) == 0x000000, "Member 'BP_Throwable_C_OnImpulseMulti::Rotation' has a wrong offset!");

// Function BP_Throwable.BP_Throwable_C.ReceiveHit
// 0x0150 (0x0150 - 0x0000)
struct BP_Throwable_C_ReceiveHit final
{
public:
	class UPrimitiveComponent*                    MyComp;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Other;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bSelfMoved;                                        // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                HitLocation;                                       // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                HitNormal;                                         // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0050(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0068(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(BP_Throwable_C_ReceiveHit) == 0x000008, "Wrong alignment on BP_Throwable_C_ReceiveHit");
static_assert(sizeof(BP_Throwable_C_ReceiveHit) == 0x000150, "Wrong size on BP_Throwable_C_ReceiveHit");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, MyComp) == 0x000000, "Member 'BP_Throwable_C_ReceiveHit::MyComp' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, Other) == 0x000008, "Member 'BP_Throwable_C_ReceiveHit::Other' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, OtherComp) == 0x000010, "Member 'BP_Throwable_C_ReceiveHit::OtherComp' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, bSelfMoved) == 0x000018, "Member 'BP_Throwable_C_ReceiveHit::bSelfMoved' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, HitLocation) == 0x000020, "Member 'BP_Throwable_C_ReceiveHit::HitLocation' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, HitNormal) == 0x000038, "Member 'BP_Throwable_C_ReceiveHit::HitNormal' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, NormalImpulse) == 0x000050, "Member 'BP_Throwable_C_ReceiveHit::NormalImpulse' has a wrong offset!");
static_assert(offsetof(BP_Throwable_C_ReceiveHit, Hit) == 0x000068, "Member 'BP_Throwable_C_ReceiveHit::Hit' has a wrong offset!");

}

