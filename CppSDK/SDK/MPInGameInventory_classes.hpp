#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MPInGameInventory

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "E_TrainStatType_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "E_ShopContainer_structs.hpp"
#include "JSItemType_structs.hpp"
#include "InfoType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass MPInGameInventory.MPInGameInventory_C
// 0x0A10 (0x0C90 - 0x0280)
class UMPInGameInventory_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       NewClose;                                          // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HoverTabButton;                                    // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewSwitch;                                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       NewOpen;                                           // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Close;                                             // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Switch_InvToChar;                                  // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Open;                                              // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowInviteHomeWidget;                              // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_LeftToRight;                          // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_RightToLeft;                          // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_MiddleToRight;                        // 0x02D8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_RightToMiddle;                        // 0x02E0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_MiddleToLeft;                         // 0x02E8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SelectedLine_LeftToMiddle;                         // 0x02F0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChangeBackpack_Anim;                               // 0x02F8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut;                                           // 0x0300(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn;                                            // 0x0308(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeInNotEnoughSpace_Trader;                       // 0x0310(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn_TradeCanvas;                                // 0x0318(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut_InventoryTitleAndPlayerStat_Anim;          // 0x0320(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn_InventoryTitleAndPlayerStat_Anim;           // 0x0328(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut_Equipment_Anim;                            // 0x0330(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeOut_Loot_Anim;                                 // 0x0338(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn_Equipment_Anim;                             // 0x0340(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn_Loot_Anim;                                  // 0x0348(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowStash;                                         // 0x0350(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SetContent_LeftToRight;                            // 0x0358(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwipeContent_LeftToRight;                          // 0x0360(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SetContent_RightToLeft;                            // 0x0368(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       SwipeContent_RightToLeft;                          // 0x0370(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        ArmorContainer;                                    // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        BackPackSlotContainer;                             // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Close;                                      // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_CurrentDrop;                                // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Drop;                                       // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_E;                                          // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Q;                                          // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_R;                                          // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Repair;                                     // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Rotate;                                     // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Shop;                                       // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Split;                                      // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_T;                                          // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_Take;                                       // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_TakeAll;                                    // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     Button_TakeAll_1;                                  // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Button_DeleteItem;                          // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Button_Rotate;                              // 0x0400(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Button_Take;                                // 0x0408(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_Button_TakeALL;                             // 0x0410(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_MainInventory;                         // 0x0418(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_Trade;                                 // 0x0420(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UDropItemBackGwidget_C*                 DropItemBackGwidget;                               // 0x0428(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        GlassesContainer;                                  // 0x0430(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        GlovesContainer;                                   // 0x0438(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UGridPanel*                             GridPanel_Equipment;                               // 0x0440(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        HelmetContainer;                                   // 0x0448(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HintUse_RMB;                                       // 0x0450(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_InventoryButtons;                    // 0x0458(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Money;                               // 0x0460(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Pockets;                             // 0x0468(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Separators;                          // 0x0470(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_StatsActive;                         // 0x0478(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Weapon;                              // 0x0480(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         HorizontalBox_Weight_Capacity;                     // 0x0488(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_5;                                           // 0x0490(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_6;                                           // 0x0498(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_7;                                           // 0x04A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_70;                                          // 0x04A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_113;                                         // 0x04B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArmorSiluet;                                 // 0x04B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ArmorSiluetBG;                               // 0x04C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackpackSiluet;                              // 0x04C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackpackSiluetBG;                            // 0x04D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Footer;                                      // 0x04D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Footer_Separator;                            // 0x04E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_GlassesSiluet;                               // 0x04E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_GlassesSiluetBG;                             // 0x04F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_GlovesSiluet;                                // 0x04F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_GlovesSiluetBG;                              // 0x0500(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Header;                                      // 0x0508(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_HelmetSiluet;                                // 0x0510(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_HelmetSiluetBG;                              // 0x0518(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_MeleeSiluet;                                 // 0x0520(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PantsSiluet;                                 // 0x0528(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PantsSiluetBG;                               // 0x0530(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PistolSiluet;                                // 0x0538(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PrimaryBG;                                   // 0x0540(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_PrimarySiluet;                               // 0x0548(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RigSiluet;                                   // 0x0550(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RigSiluetBG;                                 // 0x0558(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RigSiluetEmptyBG;                            // 0x0560(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_RMBIcon;                                     // 0x0568(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SecondaryBG;                                 // 0x0570(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_SecondarySiluet;                             // 0x0578(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_UnderwearSiluet;                             // 0x0580(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_UnderwearSiluetBG;                           // 0x0588(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_0;                                 // 0x0590(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInvalidationBox*                       InvalidationBox_1;                                 // 0x0598(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        JSIContainer_LootDebug;                            // 0x05A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        MeleeContainer;                                    // 0x05A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             OffererName;                                       // 0x05B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay;                                           // 0x05B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_2;                                         // 0x05C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_4;                                         // 0x05C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_7;                                         // 0x05D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_LootContainer;                             // 0x05D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_ShopDialogue;                              // 0x05E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PantsContainer;                                    // 0x05E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PistolContainer;                                   // 0x05F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PistolWContainer;                                  // 0x05F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x0600(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerNES;                                         // 0x0608(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PlayerTradeItemsContainer;                         // 0x0610(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PocketContainer;                                   // 0x0618(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        PrimaryWContainer;                                 // 0x0620(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        ProtectiveCaseContainer;                           // 0x0628(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Effects;                                 // 0x0630(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items;                                   // 0x0638(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items_1;                                 // 0x0640(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Loot;                                    // 0x0648(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Stats;                                   // 0x0650(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        SecondaryContainer;                                // 0x0658(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox;                                           // 0x0660(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_AnimateSeparator_Categories;               // 0x0668(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_BackpackContainer;                         // 0x0670(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Effects;                                   // 0x0678(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Hint;                                      // 0x0680(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_InviteHome;                                // 0x0688(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_LootContainer;                             // 0x0690(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Separator_Categories_0;                    // 0x0698(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Separator_Categories_1;                    // 0x06A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Separator_Categories_2;                    // 0x06A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_Stats;                                     // 0x06B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         SquadVerticalBox;                                  // 0x06B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        TacticalRigContainer;                              // 0x06C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_OverallCategory;                              // 0x06C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock;                                         // 0x06D0(0x0008)(ExportObject, ZeroConstructor, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Hint;                                    // 0x06D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Money;                                   // 0x06E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Weight;                                  // 0x06E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        TradeOffererItemsContainer;                        // 0x06F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TraderNES;                                         // 0x06F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText;                                     // 0x0700(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_1;                                   // 0x0708(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_2;                                   // 0x0710(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_3;                                   // 0x0718(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_4;                                   // 0x0720(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_94;                                  // 0x0728(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_185;                                 // 0x0730(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_226;                                 // 0x0738(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_282;                                 // 0x0740(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_340;                                 // 0x0748(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        UnderwearContainer;                                // 0x0750(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUniformGridPanel*                      UniformGridPanelPerks;                             // 0x0758(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Ability;                               // 0x0760(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Armor;                                 // 0x0768(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Backpack;                              // 0x0770(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Group;                                 // 0x0778(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Loot;                                  // 0x0780(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_NewEquipment;                          // 0x0788(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_Pockets;                               // 0x0790(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_DeleteInfo_C*                        W_DeleteInfo;                                      // 0x0798(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     W_HintButton_NextOverallCategory;                  // 0x07A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_HintButtonNew_C*                     W_HintButton_PrevOverallCategory;                  // 0x07A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Interact_C*                          W_HintRepairAll;                                   // 0x07B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Status_C*                            W_StatusAdrenalin;                                 // 0x07B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Status_C*                            W_StatusFood;                                      // 0x07C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Status_C*                            W_StatusSatiety;                                   // 0x07C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Status_C*                            W_StatusWater;                                     // 0x07D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_Status_C*                            W_StatusWeight;                                    // 0x07D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_EffectsScroller;                               // 0x07E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Group_C*                           WBP_Group_1;                                       // 0x07E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Group_C*                           WBP_Group_2;                                       // 0x07F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Group_C*                           WBP_Group_3;                                       // 0x07F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Group_C*                           WBP_Group_4;                                       // 0x0800(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_InventoryScroller;                             // 0x0808(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Journal_C*                         WBP_Journal;                                       // 0x0810(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_LootScroller;                                  // 0x0818(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MainCategorySelector_C*            WBP_MainCategorySelector;                          // 0x0820(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MainCategorySelector_C*            WBP_MainCategorySelector_Hoarder;                  // 0x0828(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MainCategorySelector_C*            WBP_MainCategorySelector_Shop;                     // 0x0830(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_MainCategorySelector_C*            WBP_MainCategorySelector_Storage;                  // 0x0838(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PerksInfo_C*                       WBP_PerksInfo;                                     // 0x0840(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_PlayerTotalStats_C*                WBP_PlayerTotalStats;                              // 0x0848(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_WeightSlots_C*                     WBP_SlotsCapacity;                                 // 0x0850(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_StatsScroller;                                 // 0x0858(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TutorialHighlight_C*               WBP_TutorialHighlight_Storage;                     // 0x0860(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TutorialHighlight_C*               WBP_TutorialHighlight_TutorBag;                    // 0x0868(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_CraftErrorMessage_C*               WBP_WarningMessage;                                // 0x0870(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_BackpackSell;                       // 0x0878(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Category;                           // 0x0880(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_LootGround;                         // 0x0888(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_Tabs;                               // 0x0890(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           WindowBox;                                         // 0x0898(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          WithLP;                                            // 0x08A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithStash;                                         // 0x08A1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Focused;                                           // 0x08A2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, Config, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A3[0x5];                                      // 0x08A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_UsageRequest_C*                      UsageRequest;                                      // 0x08A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPContainerWidget_C*                   ContainerWidget;                                   // 0x08B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDataTable*                             DataTable;                                         // 0x08B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         CurrentContainerID;                                // 0x08C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnContainerAction;                                 // 0x08C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TMap<int32, class UJSIContainer_C*>           ConatinerWidgets;                                  // 0x08D8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	class UJSI_Slot_C*                            ActiveSlot;                                        // 0x0928(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          EmptyContainer;                                    // 0x0930(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowLootPointWindow;                               // 0x0931(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          IsGround;                                          // 0x0932(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_933[0x5];                                      // 0x0933(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MousePos;                                          // 0x0938(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Player;                                            // 0x0948(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class APS_TDB_C*                              PlayerState;                                       // 0x0950(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class ASurvPC_C*                              PlayerController;                                  // 0x0958(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UBPC_PlayerStatsComponent_C*            PlayerStats;                                       // 0x0960(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<struct FFItemInfo>                     ItemsInfo_Trade;                                   // 0x0968(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          TradeCanvasOpened;                                 // 0x0978(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_979[0x7];                                      // 0x0979(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPContainerWidget_v2_C*                ContainerWidget_v2;                                // 0x0980(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          LootJewelsFlagForTrailer;                          // 0x0988(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          LootClothesFlagForTrailer;                         // 0x0989(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SortedFotTrailer;                                  // 0x098A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_98B[0x5];                                      // 0x098B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ScrollTo;                                          // 0x0990(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           AnimTimer;                                         // 0x0998(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          HeadMinusUpDisplay;                                // 0x09A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsRefsInit;                                       // 0x09A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsInventoryVisible;                               // 0x09A9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9AA[0x6];                                      // 0x09AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UW_Status_C*>                    WStatusRef;                                        // 0x09B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          NeedAnimSatiety;                                   // 0x09C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedAnimAdrenaline;                                // 0x09C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedAnimFood;                                      // 0x09C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedAnimWater;                                     // 0x09C3(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NeedAnimWeight;                                    // 0x09C4(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C5[0x3];                                      // 0x09C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        TestFloat;                                         // 0x09C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsVisibleDeleteInfo;                               // 0x09D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            Child_Widget;                                      // 0x09D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowChildWidget;                                   // 0x09E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x7];                                      // 0x09E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Stash_C*                            StashActorRef;                                     // 0x09E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ScrollBarOpacity;                                  // 0x09F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ScrollBarOpacityTimer;                             // 0x09F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             Scroll_Box_Widget_Ref;                             // 0x0A00(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           WarningMessageTimer;                               // 0x0A08(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MessageTime;                                       // 0x0A10(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateLootInventoryTimerHandle;                    // 0x0A18(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           UpdateStats_Timer;                                 // 0x0A20(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<class APS_TDB_C*, class UWBP_Group_C*>   PSNameMap;                                         // 0x0A28(0x0050)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance, ContainsInstancedReference)
	class UWBP_Group_C*                           WidgetRef;                                         // 0x0A78(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_Perks_C*                           PerksRef;                                          // 0x0A80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         LengthPerks;                                       // 0x0A88(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8C[0x4];                                      // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FName, class FName>                TableMap;                                          // 0x0A90(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UJSIContainer_C*                        PocketContainer__DynamicReference_;                // 0x0AE0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         In_Time;                                           // 0x0AE8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AEC[0x4];                                      // 0x0AEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_PlayerStats_C*                       PlayerStatRef;                                     // 0x0AF0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Weight_Count;                                      // 0x0AF8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         WidgetCategorySwitcherIndex;                       // 0x0B00(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UWBP_Group_C*>                   SquadEntries;                                      // 0x0B08(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Added_Data;                                        // 0x0B18(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FContainerPickupsInfo>          Added_Items;                                       // 0x0B28(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FContainerPickupsInfo                  PickupsInfo;                                       // 0x0B38(0x0068)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	class ABP_InteractiveSafe_C*                  Interactive_Safe_Actor_Ref;                        // 0x0BA0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowed;                                           // 0x0BA8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, Interp, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BA9[0x7];                                      // 0x0BA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_InviteHome_C*                      WidgetInviteHomeRef;                               // 0x0BB0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UBPC_NegativeEffects_C*                 PlayerNegativeEffects;                             // 0x0BB8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bShowTutorialWaterInfo;                            // 0x0BC0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC1[0x7];                                      // 0x0BC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<E_TrainStatType, class UWBP_CharStatProgress_C*> StatsWidgets;                                      // 0x0BC8(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	bool                                          bOpenInventoryHintShowed;                          // 0x0C18(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C19[0x7];                                      // 0x0C19(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnInventoryClosed;                                 // 0x0C20(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSI_Slot_C*                            StashTutorialItemToTake;                           // 0x0C30(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsSwitching;                                      // 0x0C38(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithShop;                                          // 0x0C39(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithShopHoarder;                                   // 0x0C3A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3B[0x5];                                      // 0x0C3B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           Shop_Item_Hovered_CheckingTimer;                   // 0x0C40(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoldRepairAll;                                   // 0x0C48(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          HoldButtonRepairAll;                               // 0x0C58(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C59[0x7];                                      // 0x0C59(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentHoldTimeRepairAll;                          // 0x0C60(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           RepairAllButtonTimer;                              // 0x0C68(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnTakeItem;                                        // 0x0C70(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UJSI_Slot_C*                            SlotRefOnTake;                                     // 0x0C80(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_ItemInfo_C*                          WDropTemp;                                         // 0x0C88(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)

public:
	void Accept();
	void Add_Child_Widget_Perks();
	void Add_Squad_Member_Entry(class UWBP_Group_C* SquadEntryWidget, class APS_TDB_C* PlayerPS);
	void AddEffect(class UEffectMain_C* Effect, class ASurvivalPlayer_C* SurvPlayer, class UW_EffectsPanelElement_C** Widget);
	void AjustInventoryAfterClosing();
	void ArmorSiluetHidden();
	void ArmorSiluetShow();
	void BackpackSiluetHidden();
	void BackpackSiluetShow();
	void BindLootPoint();
	void BindMainContatiner();
	void BindTabWindowEvents();
	void BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_17_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_41_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_ArmorContainer_K2Node_ComponentBoundEvent_7_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_12_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_18_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_BackPackSlotContainer_K2Node_ComponentBoundEvent_42_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_28_OnHovered__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_Close_K2Node_ComponentBoundEvent_34_OnUnhovered__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_E_K2Node_ComponentBoundEvent_37_OnPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_Q_K2Node_ComponentBoundEvent_38_OnPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_Shop_K2Node_ComponentBoundEvent_35_OnPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_Take_K2Node_ComponentBoundEvent_27_OnPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_Button_TakeAll_1_K2Node_ComponentBoundEvent_30_OnPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_13_ItemDropRequest__DelegateSignature(class UJSI_Slot_C* ItemRef, const struct FFItemInfo& ItemInfo, int32 Count, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_14_OnButtonPressed__DelegateSignature();
	void BndEvt__MPInGameInventory_DropItemBackGwidget_K2Node_ComponentBoundEvent_36_OnDropDeniedInTutorial__DelegateSignature(bool TutorReason, bool IsProtectiveCase);
	void BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_16_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_43_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_GlassesContainer_K2Node_ComponentBoundEvent_5_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_20_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_44_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_GlovesContainer_K2Node_ComponentBoundEvent_8_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_15_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_45_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_HelmetContainer_K2Node_ComponentBoundEvent_4_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_26_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_MeleeContainer_K2Node_ComponentBoundEvent_3_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_22_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_46_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_PantsContainer_K2Node_ComponentBoundEvent_9_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_11_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_PistolWContainer_K2Node_ComponentBoundEvent_24_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_1_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_23_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_PrimaryWContainer_K2Node_ComponentBoundEvent_47_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_ScrollBox_Items_K2Node_ComponentBoundEvent_29_OnUserScrolledEvent__DelegateSignature(float CurrentOffset);
	void BndEvt__MPInGameInventory_ScrollBox_Loot_K2Node_ComponentBoundEvent_39_OnUserScrolledEvent__DelegateSignature(float CurrentOffset);
	void BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_25_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_2_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_SecondaryContainer_K2Node_ComponentBoundEvent_48_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_19_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_40_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__MPInGameInventory_TacticalRigContainer_K2Node_ComponentBoundEvent_6_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_10_DropInfo_OnItemEquippedChange__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotRef, bool Equipped_, bool ToPockets_);
	void BndEvt__MPInGameInventory_UnderwearContainer_K2Node_ComponentBoundEvent_21_EventSelectItem__DelegateSignature(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void BndEvt__MPInGameInventory_WBP_MainCategorySelector_Hoarder_K2Node_ComponentBoundEvent_32_OnCategoryChanged__DelegateSignature(int32 Param_Index);
	void BndEvt__MPInGameInventory_WBP_MainCategorySelector_K2Node_ComponentBoundEvent_33_OnCategoryChanged__DelegateSignature(int32 Param_Index);
	void BndEvt__MPInGameInventory_WBP_MainCategorySelector_Shop_K2Node_ComponentBoundEvent_31_OnCategoryChanged__DelegateSignature(int32 Param_Index);
	void BndEvt__W_HintButtonNew_Close_K2Node_ComponentBoundEvent_0_OnClicked__DelegateSignature();
	void CanAddItemToInv(class UJSIContainer_C* ContainerRef, class UJSI_Slot_C* SlotRef, bool* Result);
	void CanAddItemToStash();
	void Check_Satiety();
	void CheckAdrenaline();
	void CheckHunger();
	void CheckTutorialObjective_DrinkWater();
	void CheckTutorialObjective_StorageItem(bool Completed);
	void CheckWater();
	void CheckWeight();
	void ClearAllSelection();
	void ClearItemsToTrade();
	void ClearLootPointSelection();
	void ClearMainContainerSelection();
	void Construct();
	void ContainerChanged_Event(class UJSIContainer_C* Pocket);
	void Create_Invite_Home_Widget();
	void CreateChildWidget(class UUserWidget* ChildWidget);
	void DeleteItem();
	void Destruct();
	void DragEnd();
	void DragStart();
	void DropItem();
	void EquipItem(class UJSIContainer_C* Container_Ref, class UJSI_Slot_C* Slot_Ref, bool* Equipped, class UJSIContainer_C** To_Container);
	void EquippedSlotBG(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotToStash);
	void EquipStashItem();
	void EventOnContainerAction(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool Rotated_, bool RightMouseButton);
	void ExecuteUbergraph_MPInGameInventory(int32 EntryPoint);
	void ExitFromSquad();
	void Fill_Empty_Squad_Slots(int32 StartIndex);
	void FindSlotWithItem(class UJSI_Slot_C** Param_ActiveSlot);
	void Finished_9FA49C4740B52A565E8DB2A802E665CC();
	void Finished_F5D87B80432A397B78A6A291C21B83AD();
	class FText Get_Counts_Perks();
	void GetCategorySwitcherIndex(int32* Param_WidgetCategorySwitcherIndex);
	void GetCountMoney(int32* Return);
	void GetFocused(bool* Param_Focused);
	void GetPocketContainer(bool* Result, class UJSIContainer_C** Container);
	double GetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef);
	void GetStashTutorialItemToTake(class UJSI_Slot_C** Param_StashTutorialItemToTake);
	void GlassesSiluetHidden();
	void GlassesSiluetShow();
	void GlovesSiluetHidden();
	void GlovesSiluetShow();
	void HandleContainersEvents(class UJSIContainer_C* Container, bool SetID_);
	void HelmetSiluetHidden();
	void HelmetSiluetShow();
	void Hide();
	void Hide_Invite_Home_Widget();
	void Hide_Squad_Options(class UWBP_Group_C* SquadEntry);
	void HideBackpackContainer();
	void HideDeleteItem();
	void HideLootboxWidget();
	void HideTrade();
	void HideUseButton();
	void HideWarningMessage();
	void HoldRepairAll();
	void InitialHiding();
	void InitStatsTrainProgress();
	bool IsContainerEmpty(class UJSIContainer_C* Target);
	bool IsDropWidgetVisible();
	void MakeGuiHidden(bool IsHidden);
	void MouseButtonDownInventory(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void NotEnoughSpace();
	void NotEnoughSpace_Trader();
	void On_Buy_Item();
	void On_Make_Leader_Func(class APS_TDB_C* Param_PlayerState);
	void On_Player_Exit(class APS_TDB_C* Param_PlayerState);
	void On_Player_Kick(class APS_TDB_C* Param_PlayerState);
	void On_Update_Group_List();
	void OnChangedPlayerRef_Event();
	void OnContainerAction__DelegateSignature(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* DroppedSlotRef, class UJSI_Slot_C* SlotReceiverRef, int32 ToSlotIndex, bool DroppedRotated_);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnHoldRepairAll__DelegateSignature();
	void OnInitialized();
	void OnInitializedDragWidget(bool NewState);
	void OnInitializedTabsWidget_Event(class UW_TabsWindow_C* TabsWindow);
	void OnInventoryClosed__DelegateSignature();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnTakeItem__DelegateSignature();
	void OnToggleSplitDialog(bool NewState);
	void OnUpdateGroupList__multicast_();
	void OnUpdatePerkFunction(const class FText& PerkName);
	void OnUpdatePerksList();
	void PantsSiluetHidden();
	void PantsSiluetShow();
	void PlayEquipSound(class UJSI_Slot_C* Slot_Ref);
	void PlayScrollBarOpacityAnim(double Opacity, class UScrollBox* ScrollBoxWidgetRef);
	void PreConstruct(bool IsDesignTime);
	void PrepareInventoryForOpening();
	void Press_F();
	void PressedRepairAll();
	void PrimarySiluetHidden();
	void PrimarySiluetShow();
	void ProtectCaseUpdateItems();
	void RefreshItemsOnGround(TArray<class AA_Item_C*>& ItemsOnGround);
	void ReleasedRepairAll();
	void Remove_Item_By_UID(class UJSI_Slot_C* SlotRef, bool Equipped_, class UJSIContainer_C* Container);
	void RepairProcess();
	void RigSiluetHidden();
	void RigSiluetShow();
	void ScrollBarOpacityAnimTick();
	void SecondarySiluetHidden();
	void SecondarySiluetShow();
	void SelectAmountToStore();
	void Selected_Loot_Poin_Item(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void SelectedMainContainerItem(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void SelectItem(class UJSI_Slot_C* Item, class UJSIContainer_C* Container);
	void Set_Equip_Pants(bool NewEquip);
	void SetActiveCharacterWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation);
	void SetActiveInventoryWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation);
	void SetActiveQuestsWidget(int32 IndexOfActiveWidget, class UWidgetAnimation* ChangeAnimation);
	void SetActiveSlot(class UJSI_Slot_C* Param_Slot);
	void SetAllowProtectiveCase();
	void SetBackpackContainerName(const class FText& InText);
	void SetCategorySelectorShops();
	void SetContainerPermissions(class UJSIContainer_C* Conatiner);
	void SetEquipBackpack(bool NewEquip);
	void SetEquipTacticalRig(bool NewEquip);
	void SetFillValueRepairAll();
	void SetFocused(bool NewFocus, bool* Success);
	void SetItemsOnGroundContainer(TArray<class AA_Item_C*>& ItemsOnGround);
	void SetLoadingEffect();
	void SetLootContainerName(const class FText& InText);
	void SetNewActiveSlot();
	void SetPantsContainerName(const class FText& InText);
	void SetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef, double Opacity, const struct FLinearColor& TinpColor);
	void SetSiluetArmor(bool NewEnabled);
	void SetSiluetBackpack(bool NewEnabled);
	void SetSiluetHelmet(bool NewEnabled);
	void SetSiluetMelee(bool NewEnabled);
	void SetSiluetPants(bool NewEnabled);
	void SetSiluetPistol(bool NewEnabled);
	void SetSiluetPrimary(bool NewEnabled);
	void SetSiluetSecondary(bool NewEnabled);
	void SetSiluetTacticalRig(bool NewEnabled);
	void SetStashView();
	void SetTacticalRigContainerName(const class FText& InText);
	void SetWindowsType(bool WithLootPoint, bool Ground);
	void Shop_Item_Hovered_Checking();
	void ShopBind();
	void Show();
	void ShowBackpackContainer();
	void ShowDelete_item();
	void ShowExitButtonTutorial();
	void ShowInventory();
	void ShowInventoryAnimations();
	void ShowLootboxWidget();
	void ShowTradeCanvas();
	void ShowUseButton(const class FText& ButtonText);
	void ShowWarningMessage_NotEnoughSpace(const class FText& MessageText);
	void ShowWaterTutorialSlide();
	void Split_Item();
	void StartAnimStatusActive();
	class UJSIContainer_C* StashContainers();
	void SwitchCategory(int32 Param_Index);
	void TabsWindowClosed();
	void Take_Item();
	void Take_or_Equip_Item_From_Stash();
	void TakeAllItemsFromTheLootpoint();
	void TakeItemProcess();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void TryToAddItemToStash(class UJSIContainer_C* EquippedContainerRef, class UJSI_Slot_C* EquippedSlotRef, const struct FKey& Button, bool* Result);
	void TurnOnLight_OverallCategory(class USizeBox* GivenSizebox, bool TurnOn_);
	void UnbindLootPoint();
	void UnbindMainContainer();
	void UnderwearSiluetHidden();
	void UnderwearSiluetShow();
	void UnhandleAllEvents(class UJSIContainer_C* Container);
	void UnselectItem();
	void UpdateContainer(class UJSIContainer_C* Container);
	void UpdateGrenadeCount();
	void UpdateInventory();
	void UpdateLootInventory(bool Once, bool Reset);
	void UpdateLootInventoryTimerHandler();
	void UpdateMoneyValue();
	void UpdatePerksInfo();
	void UpdateStatProgress(E_TrainStatType InputPin);
	void UpdateStats();
	void UpdateStorageTutorialPointer(bool* ItemsFound);
	void UpdateTradeOffererItems();
	void UpdateWeight();
	void ValidateLootInventory();
	void WaterTutorialSlideOnClose();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"MPInGameInventory_C">();
	}
	static class UMPInGameInventory_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UMPInGameInventory_C>();
	}
};
static_assert(alignof(UMPInGameInventory_C) == 0x000008, "Wrong alignment on UMPInGameInventory_C");
static_assert(sizeof(UMPInGameInventory_C) == 0x000C90, "Wrong size on UMPInGameInventory_C");
static_assert(offsetof(UMPInGameInventory_C, UberGraphFrame) == 0x000280, "Member 'UMPInGameInventory_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NewClose) == 0x000288, "Member 'UMPInGameInventory_C::NewClose' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HoverTabButton) == 0x000290, "Member 'UMPInGameInventory_C::HoverTabButton' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NewSwitch) == 0x000298, "Member 'UMPInGameInventory_C::NewSwitch' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NewOpen) == 0x0002A0, "Member 'UMPInGameInventory_C::NewOpen' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Close) == 0x0002A8, "Member 'UMPInGameInventory_C::Close' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Switch_InvToChar) == 0x0002B0, "Member 'UMPInGameInventory_C::Switch_InvToChar' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Open) == 0x0002B8, "Member 'UMPInGameInventory_C::Open' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ShowInviteHomeWidget) == 0x0002C0, "Member 'UMPInGameInventory_C::ShowInviteHomeWidget' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_LeftToRight) == 0x0002C8, "Member 'UMPInGameInventory_C::SelectedLine_LeftToRight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_RightToLeft) == 0x0002D0, "Member 'UMPInGameInventory_C::SelectedLine_RightToLeft' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_MiddleToRight) == 0x0002D8, "Member 'UMPInGameInventory_C::SelectedLine_MiddleToRight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_RightToMiddle) == 0x0002E0, "Member 'UMPInGameInventory_C::SelectedLine_RightToMiddle' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_MiddleToLeft) == 0x0002E8, "Member 'UMPInGameInventory_C::SelectedLine_MiddleToLeft' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SelectedLine_LeftToMiddle) == 0x0002F0, "Member 'UMPInGameInventory_C::SelectedLine_LeftToMiddle' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ChangeBackpack_Anim) == 0x0002F8, "Member 'UMPInGameInventory_C::ChangeBackpack_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeOut) == 0x000300, "Member 'UMPInGameInventory_C::FadeOut' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeIn) == 0x000308, "Member 'UMPInGameInventory_C::FadeIn' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeInNotEnoughSpace_Trader) == 0x000310, "Member 'UMPInGameInventory_C::FadeInNotEnoughSpace_Trader' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeIn_TradeCanvas) == 0x000318, "Member 'UMPInGameInventory_C::FadeIn_TradeCanvas' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeOut_InventoryTitleAndPlayerStat_Anim) == 0x000320, "Member 'UMPInGameInventory_C::FadeOut_InventoryTitleAndPlayerStat_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeIn_InventoryTitleAndPlayerStat_Anim) == 0x000328, "Member 'UMPInGameInventory_C::FadeIn_InventoryTitleAndPlayerStat_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeOut_Equipment_Anim) == 0x000330, "Member 'UMPInGameInventory_C::FadeOut_Equipment_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeOut_Loot_Anim) == 0x000338, "Member 'UMPInGameInventory_C::FadeOut_Loot_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeIn_Equipment_Anim) == 0x000340, "Member 'UMPInGameInventory_C::FadeIn_Equipment_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, FadeIn_Loot_Anim) == 0x000348, "Member 'UMPInGameInventory_C::FadeIn_Loot_Anim' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ShowStash) == 0x000350, "Member 'UMPInGameInventory_C::ShowStash' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SetContent_LeftToRight) == 0x000358, "Member 'UMPInGameInventory_C::SetContent_LeftToRight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SwipeContent_LeftToRight) == 0x000360, "Member 'UMPInGameInventory_C::SwipeContent_LeftToRight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SetContent_RightToLeft) == 0x000368, "Member 'UMPInGameInventory_C::SetContent_RightToLeft' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SwipeContent_RightToLeft) == 0x000370, "Member 'UMPInGameInventory_C::SwipeContent_RightToLeft' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ArmorContainer) == 0x000378, "Member 'UMPInGameInventory_C::ArmorContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, BackPackSlotContainer) == 0x000380, "Member 'UMPInGameInventory_C::BackPackSlotContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Close) == 0x000388, "Member 'UMPInGameInventory_C::Button_Close' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_CurrentDrop) == 0x000390, "Member 'UMPInGameInventory_C::Button_CurrentDrop' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Drop) == 0x000398, "Member 'UMPInGameInventory_C::Button_Drop' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_E) == 0x0003A0, "Member 'UMPInGameInventory_C::Button_E' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Q) == 0x0003A8, "Member 'UMPInGameInventory_C::Button_Q' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_R) == 0x0003B0, "Member 'UMPInGameInventory_C::Button_R' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Repair) == 0x0003B8, "Member 'UMPInGameInventory_C::Button_Repair' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Rotate) == 0x0003C0, "Member 'UMPInGameInventory_C::Button_Rotate' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Shop) == 0x0003C8, "Member 'UMPInGameInventory_C::Button_Shop' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Split) == 0x0003D0, "Member 'UMPInGameInventory_C::Button_Split' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_T) == 0x0003D8, "Member 'UMPInGameInventory_C::Button_T' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_Take) == 0x0003E0, "Member 'UMPInGameInventory_C::Button_Take' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_TakeAll) == 0x0003E8, "Member 'UMPInGameInventory_C::Button_TakeAll' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Button_TakeAll_1) == 0x0003F0, "Member 'UMPInGameInventory_C::Button_TakeAll_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Canvas_Button_DeleteItem) == 0x0003F8, "Member 'UMPInGameInventory_C::Canvas_Button_DeleteItem' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Canvas_Button_Rotate) == 0x000400, "Member 'UMPInGameInventory_C::Canvas_Button_Rotate' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Canvas_Button_Take) == 0x000408, "Member 'UMPInGameInventory_C::Canvas_Button_Take' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Canvas_Button_TakeALL) == 0x000410, "Member 'UMPInGameInventory_C::Canvas_Button_TakeALL' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, CanvasPanel_MainInventory) == 0x000418, "Member 'UMPInGameInventory_C::CanvasPanel_MainInventory' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, CanvasPanel_Trade) == 0x000420, "Member 'UMPInGameInventory_C::CanvasPanel_Trade' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, DropItemBackGwidget) == 0x000428, "Member 'UMPInGameInventory_C::DropItemBackGwidget' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, GlassesContainer) == 0x000430, "Member 'UMPInGameInventory_C::GlassesContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, GlovesContainer) == 0x000438, "Member 'UMPInGameInventory_C::GlovesContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, GridPanel_Equipment) == 0x000440, "Member 'UMPInGameInventory_C::GridPanel_Equipment' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HelmetContainer) == 0x000448, "Member 'UMPInGameInventory_C::HelmetContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HintUse_RMB) == 0x000450, "Member 'UMPInGameInventory_C::HintUse_RMB' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_InventoryButtons) == 0x000458, "Member 'UMPInGameInventory_C::HorizontalBox_InventoryButtons' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_Money) == 0x000460, "Member 'UMPInGameInventory_C::HorizontalBox_Money' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_Pockets) == 0x000468, "Member 'UMPInGameInventory_C::HorizontalBox_Pockets' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_Separators) == 0x000470, "Member 'UMPInGameInventory_C::HorizontalBox_Separators' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_StatsActive) == 0x000478, "Member 'UMPInGameInventory_C::HorizontalBox_StatsActive' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_Weapon) == 0x000480, "Member 'UMPInGameInventory_C::HorizontalBox_Weapon' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HorizontalBox_Weight_Capacity) == 0x000488, "Member 'UMPInGameInventory_C::HorizontalBox_Weight_Capacity' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_5) == 0x000490, "Member 'UMPInGameInventory_C::Image_5' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_6) == 0x000498, "Member 'UMPInGameInventory_C::Image_6' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_7) == 0x0004A0, "Member 'UMPInGameInventory_C::Image_7' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_70) == 0x0004A8, "Member 'UMPInGameInventory_C::Image_70' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_113) == 0x0004B0, "Member 'UMPInGameInventory_C::Image_113' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_ArmorSiluet) == 0x0004B8, "Member 'UMPInGameInventory_C::Image_ArmorSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_ArmorSiluetBG) == 0x0004C0, "Member 'UMPInGameInventory_C::Image_ArmorSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_BackpackSiluet) == 0x0004C8, "Member 'UMPInGameInventory_C::Image_BackpackSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_BackpackSiluetBG) == 0x0004D0, "Member 'UMPInGameInventory_C::Image_BackpackSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_Footer) == 0x0004D8, "Member 'UMPInGameInventory_C::Image_Footer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_Footer_Separator) == 0x0004E0, "Member 'UMPInGameInventory_C::Image_Footer_Separator' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_GlassesSiluet) == 0x0004E8, "Member 'UMPInGameInventory_C::Image_GlassesSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_GlassesSiluetBG) == 0x0004F0, "Member 'UMPInGameInventory_C::Image_GlassesSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_GlovesSiluet) == 0x0004F8, "Member 'UMPInGameInventory_C::Image_GlovesSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_GlovesSiluetBG) == 0x000500, "Member 'UMPInGameInventory_C::Image_GlovesSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_Header) == 0x000508, "Member 'UMPInGameInventory_C::Image_Header' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_HelmetSiluet) == 0x000510, "Member 'UMPInGameInventory_C::Image_HelmetSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_HelmetSiluetBG) == 0x000518, "Member 'UMPInGameInventory_C::Image_HelmetSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_MeleeSiluet) == 0x000520, "Member 'UMPInGameInventory_C::Image_MeleeSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_PantsSiluet) == 0x000528, "Member 'UMPInGameInventory_C::Image_PantsSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_PantsSiluetBG) == 0x000530, "Member 'UMPInGameInventory_C::Image_PantsSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_PistolSiluet) == 0x000538, "Member 'UMPInGameInventory_C::Image_PistolSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_PrimaryBG) == 0x000540, "Member 'UMPInGameInventory_C::Image_PrimaryBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_PrimarySiluet) == 0x000548, "Member 'UMPInGameInventory_C::Image_PrimarySiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_RigSiluet) == 0x000550, "Member 'UMPInGameInventory_C::Image_RigSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_RigSiluetBG) == 0x000558, "Member 'UMPInGameInventory_C::Image_RigSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_RigSiluetEmptyBG) == 0x000560, "Member 'UMPInGameInventory_C::Image_RigSiluetEmptyBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_RMBIcon) == 0x000568, "Member 'UMPInGameInventory_C::Image_RMBIcon' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_SecondaryBG) == 0x000570, "Member 'UMPInGameInventory_C::Image_SecondaryBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_SecondarySiluet) == 0x000578, "Member 'UMPInGameInventory_C::Image_SecondarySiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_UnderwearSiluet) == 0x000580, "Member 'UMPInGameInventory_C::Image_UnderwearSiluet' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Image_UnderwearSiluetBG) == 0x000588, "Member 'UMPInGameInventory_C::Image_UnderwearSiluetBG' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, InvalidationBox_0) == 0x000590, "Member 'UMPInGameInventory_C::InvalidationBox_0' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, InvalidationBox_1) == 0x000598, "Member 'UMPInGameInventory_C::InvalidationBox_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, JSIContainer_LootDebug) == 0x0005A0, "Member 'UMPInGameInventory_C::JSIContainer_LootDebug' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, MeleeContainer) == 0x0005A8, "Member 'UMPInGameInventory_C::MeleeContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, OffererName) == 0x0005B0, "Member 'UMPInGameInventory_C::OffererName' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay) == 0x0005B8, "Member 'UMPInGameInventory_C::Overlay' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay_2) == 0x0005C0, "Member 'UMPInGameInventory_C::Overlay_2' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay_4) == 0x0005C8, "Member 'UMPInGameInventory_C::Overlay_4' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay_7) == 0x0005D0, "Member 'UMPInGameInventory_C::Overlay_7' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay_LootContainer) == 0x0005D8, "Member 'UMPInGameInventory_C::Overlay_LootContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Overlay_ShopDialogue) == 0x0005E0, "Member 'UMPInGameInventory_C::Overlay_ShopDialogue' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PantsContainer) == 0x0005E8, "Member 'UMPInGameInventory_C::PantsContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PistolContainer) == 0x0005F0, "Member 'UMPInGameInventory_C::PistolContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PistolWContainer) == 0x0005F8, "Member 'UMPInGameInventory_C::PistolWContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerName) == 0x000600, "Member 'UMPInGameInventory_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerNES) == 0x000608, "Member 'UMPInGameInventory_C::PlayerNES' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerTradeItemsContainer) == 0x000610, "Member 'UMPInGameInventory_C::PlayerTradeItemsContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PocketContainer) == 0x000618, "Member 'UMPInGameInventory_C::PocketContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PrimaryWContainer) == 0x000620, "Member 'UMPInGameInventory_C::PrimaryWContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ProtectiveCaseContainer) == 0x000628, "Member 'UMPInGameInventory_C::ProtectiveCaseContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBox_Effects) == 0x000630, "Member 'UMPInGameInventory_C::ScrollBox_Effects' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBox_Items) == 0x000638, "Member 'UMPInGameInventory_C::ScrollBox_Items' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBox_Items_1) == 0x000640, "Member 'UMPInGameInventory_C::ScrollBox_Items_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBox_Loot) == 0x000648, "Member 'UMPInGameInventory_C::ScrollBox_Loot' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBox_Stats) == 0x000650, "Member 'UMPInGameInventory_C::ScrollBox_Stats' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SecondaryContainer) == 0x000658, "Member 'UMPInGameInventory_C::SecondaryContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox) == 0x000660, "Member 'UMPInGameInventory_C::SizeBox' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_AnimateSeparator_Categories) == 0x000668, "Member 'UMPInGameInventory_C::SizeBox_AnimateSeparator_Categories' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_BackpackContainer) == 0x000670, "Member 'UMPInGameInventory_C::SizeBox_BackpackContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Effects) == 0x000678, "Member 'UMPInGameInventory_C::SizeBox_Effects' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Hint) == 0x000680, "Member 'UMPInGameInventory_C::SizeBox_Hint' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_InviteHome) == 0x000688, "Member 'UMPInGameInventory_C::SizeBox_InviteHome' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_LootContainer) == 0x000690, "Member 'UMPInGameInventory_C::SizeBox_LootContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Separator_Categories_0) == 0x000698, "Member 'UMPInGameInventory_C::SizeBox_Separator_Categories_0' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Separator_Categories_1) == 0x0006A0, "Member 'UMPInGameInventory_C::SizeBox_Separator_Categories_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Separator_Categories_2) == 0x0006A8, "Member 'UMPInGameInventory_C::SizeBox_Separator_Categories_2' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SizeBox_Stats) == 0x0006B0, "Member 'UMPInGameInventory_C::SizeBox_Stats' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SquadVerticalBox) == 0x0006B8, "Member 'UMPInGameInventory_C::SquadVerticalBox' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TacticalRigContainer) == 0x0006C0, "Member 'UMPInGameInventory_C::TacticalRigContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Text_OverallCategory) == 0x0006C8, "Member 'UMPInGameInventory_C::Text_OverallCategory' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TextBlock) == 0x0006D0, "Member 'UMPInGameInventory_C::TextBlock' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TextBlock_Hint) == 0x0006D8, "Member 'UMPInGameInventory_C::TextBlock_Hint' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TextBlock_Money) == 0x0006E0, "Member 'UMPInGameInventory_C::TextBlock_Money' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TextBlock_Weight) == 0x0006E8, "Member 'UMPInGameInventory_C::TextBlock_Weight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TradeOffererItemsContainer) == 0x0006F0, "Member 'UMPInGameInventory_C::TradeOffererItemsContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TraderNES) == 0x0006F8, "Member 'UMPInGameInventory_C::TraderNES' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText) == 0x000700, "Member 'UMPInGameInventory_C::UMG_LabelText' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_1) == 0x000708, "Member 'UMPInGameInventory_C::UMG_LabelText_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_2) == 0x000710, "Member 'UMPInGameInventory_C::UMG_LabelText_2' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_3) == 0x000718, "Member 'UMPInGameInventory_C::UMG_LabelText_3' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_4) == 0x000720, "Member 'UMPInGameInventory_C::UMG_LabelText_4' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_94) == 0x000728, "Member 'UMPInGameInventory_C::UMG_LabelText_94' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_185) == 0x000730, "Member 'UMPInGameInventory_C::UMG_LabelText_185' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_226) == 0x000738, "Member 'UMPInGameInventory_C::UMG_LabelText_226' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_282) == 0x000740, "Member 'UMPInGameInventory_C::UMG_LabelText_282' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UMG_LabelText_340) == 0x000748, "Member 'UMPInGameInventory_C::UMG_LabelText_340' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UnderwearContainer) == 0x000750, "Member 'UMPInGameInventory_C::UnderwearContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UniformGridPanelPerks) == 0x000758, "Member 'UMPInGameInventory_C::UniformGridPanelPerks' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Ability) == 0x000760, "Member 'UMPInGameInventory_C::VerticalBox_Ability' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Armor) == 0x000768, "Member 'UMPInGameInventory_C::VerticalBox_Armor' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Backpack) == 0x000770, "Member 'UMPInGameInventory_C::VerticalBox_Backpack' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Group) == 0x000778, "Member 'UMPInGameInventory_C::VerticalBox_Group' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Loot) == 0x000780, "Member 'UMPInGameInventory_C::VerticalBox_Loot' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_NewEquipment) == 0x000788, "Member 'UMPInGameInventory_C::VerticalBox_NewEquipment' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, VerticalBox_Pockets) == 0x000790, "Member 'UMPInGameInventory_C::VerticalBox_Pockets' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_DeleteInfo) == 0x000798, "Member 'UMPInGameInventory_C::W_DeleteInfo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_HintButton_NextOverallCategory) == 0x0007A0, "Member 'UMPInGameInventory_C::W_HintButton_NextOverallCategory' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_HintButton_PrevOverallCategory) == 0x0007A8, "Member 'UMPInGameInventory_C::W_HintButton_PrevOverallCategory' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_HintRepairAll) == 0x0007B0, "Member 'UMPInGameInventory_C::W_HintRepairAll' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_StatusAdrenalin) == 0x0007B8, "Member 'UMPInGameInventory_C::W_StatusAdrenalin' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_StatusFood) == 0x0007C0, "Member 'UMPInGameInventory_C::W_StatusFood' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_StatusSatiety) == 0x0007C8, "Member 'UMPInGameInventory_C::W_StatusSatiety' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_StatusWater) == 0x0007D0, "Member 'UMPInGameInventory_C::W_StatusWater' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, W_StatusWeight) == 0x0007D8, "Member 'UMPInGameInventory_C::W_StatusWeight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_EffectsScroller) == 0x0007E0, "Member 'UMPInGameInventory_C::WBP_EffectsScroller' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_Group_1) == 0x0007E8, "Member 'UMPInGameInventory_C::WBP_Group_1' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_Group_2) == 0x0007F0, "Member 'UMPInGameInventory_C::WBP_Group_2' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_Group_3) == 0x0007F8, "Member 'UMPInGameInventory_C::WBP_Group_3' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_Group_4) == 0x000800, "Member 'UMPInGameInventory_C::WBP_Group_4' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_InventoryScroller) == 0x000808, "Member 'UMPInGameInventory_C::WBP_InventoryScroller' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_Journal) == 0x000810, "Member 'UMPInGameInventory_C::WBP_Journal' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_LootScroller) == 0x000818, "Member 'UMPInGameInventory_C::WBP_LootScroller' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_MainCategorySelector) == 0x000820, "Member 'UMPInGameInventory_C::WBP_MainCategorySelector' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_MainCategorySelector_Hoarder) == 0x000828, "Member 'UMPInGameInventory_C::WBP_MainCategorySelector_Hoarder' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_MainCategorySelector_Shop) == 0x000830, "Member 'UMPInGameInventory_C::WBP_MainCategorySelector_Shop' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_MainCategorySelector_Storage) == 0x000838, "Member 'UMPInGameInventory_C::WBP_MainCategorySelector_Storage' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_PerksInfo) == 0x000840, "Member 'UMPInGameInventory_C::WBP_PerksInfo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_PlayerTotalStats) == 0x000848, "Member 'UMPInGameInventory_C::WBP_PlayerTotalStats' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_SlotsCapacity) == 0x000850, "Member 'UMPInGameInventory_C::WBP_SlotsCapacity' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_StatsScroller) == 0x000858, "Member 'UMPInGameInventory_C::WBP_StatsScroller' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_TutorialHighlight_Storage) == 0x000860, "Member 'UMPInGameInventory_C::WBP_TutorialHighlight_Storage' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_TutorialHighlight_TutorBag) == 0x000868, "Member 'UMPInGameInventory_C::WBP_TutorialHighlight_TutorBag' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WBP_WarningMessage) == 0x000870, "Member 'UMPInGameInventory_C::WBP_WarningMessage' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetSwitcher_BackpackSell) == 0x000878, "Member 'UMPInGameInventory_C::WidgetSwitcher_BackpackSell' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetSwitcher_Category) == 0x000880, "Member 'UMPInGameInventory_C::WidgetSwitcher_Category' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetSwitcher_LootGround) == 0x000888, "Member 'UMPInGameInventory_C::WidgetSwitcher_LootGround' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetSwitcher_Tabs) == 0x000890, "Member 'UMPInGameInventory_C::WidgetSwitcher_Tabs' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WindowBox) == 0x000898, "Member 'UMPInGameInventory_C::WindowBox' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WithLP) == 0x0008A0, "Member 'UMPInGameInventory_C::WithLP' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WithStash) == 0x0008A1, "Member 'UMPInGameInventory_C::WithStash' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Focused) == 0x0008A2, "Member 'UMPInGameInventory_C::Focused' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UsageRequest) == 0x0008A8, "Member 'UMPInGameInventory_C::UsageRequest' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ContainerWidget) == 0x0008B0, "Member 'UMPInGameInventory_C::ContainerWidget' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, DataTable) == 0x0008B8, "Member 'UMPInGameInventory_C::DataTable' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, CurrentContainerID) == 0x0008C0, "Member 'UMPInGameInventory_C::CurrentContainerID' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, OnContainerAction) == 0x0008C8, "Member 'UMPInGameInventory_C::OnContainerAction' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ConatinerWidgets) == 0x0008D8, "Member 'UMPInGameInventory_C::ConatinerWidgets' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ActiveSlot) == 0x000928, "Member 'UMPInGameInventory_C::ActiveSlot' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, EmptyContainer) == 0x000930, "Member 'UMPInGameInventory_C::EmptyContainer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ShowLootPointWindow) == 0x000931, "Member 'UMPInGameInventory_C::ShowLootPointWindow' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, IsGround) == 0x000932, "Member 'UMPInGameInventory_C::IsGround' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, MousePos) == 0x000938, "Member 'UMPInGameInventory_C::MousePos' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Player) == 0x000948, "Member 'UMPInGameInventory_C::Player' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerState) == 0x000950, "Member 'UMPInGameInventory_C::PlayerState' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerController) == 0x000958, "Member 'UMPInGameInventory_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerStats) == 0x000960, "Member 'UMPInGameInventory_C::PlayerStats' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ItemsInfo_Trade) == 0x000968, "Member 'UMPInGameInventory_C::ItemsInfo_Trade' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TradeCanvasOpened) == 0x000978, "Member 'UMPInGameInventory_C::TradeCanvasOpened' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ContainerWidget_v2) == 0x000980, "Member 'UMPInGameInventory_C::ContainerWidget_v2' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, LootJewelsFlagForTrailer) == 0x000988, "Member 'UMPInGameInventory_C::LootJewelsFlagForTrailer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, LootClothesFlagForTrailer) == 0x000989, "Member 'UMPInGameInventory_C::LootClothesFlagForTrailer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SortedFotTrailer) == 0x00098A, "Member 'UMPInGameInventory_C::SortedFotTrailer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollTo) == 0x000990, "Member 'UMPInGameInventory_C::ScrollTo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, AnimTimer) == 0x000998, "Member 'UMPInGameInventory_C::AnimTimer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HeadMinusUpDisplay) == 0x0009A0, "Member 'UMPInGameInventory_C::HeadMinusUpDisplay' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bIsRefsInit) == 0x0009A8, "Member 'UMPInGameInventory_C::bIsRefsInit' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bIsInventoryVisible) == 0x0009A9, "Member 'UMPInGameInventory_C::bIsInventoryVisible' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WStatusRef) == 0x0009B0, "Member 'UMPInGameInventory_C::WStatusRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NeedAnimSatiety) == 0x0009C0, "Member 'UMPInGameInventory_C::NeedAnimSatiety' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NeedAnimAdrenaline) == 0x0009C1, "Member 'UMPInGameInventory_C::NeedAnimAdrenaline' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NeedAnimFood) == 0x0009C2, "Member 'UMPInGameInventory_C::NeedAnimFood' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NeedAnimWater) == 0x0009C3, "Member 'UMPInGameInventory_C::NeedAnimWater' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, NeedAnimWeight) == 0x0009C4, "Member 'UMPInGameInventory_C::NeedAnimWeight' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TestFloat) == 0x0009C8, "Member 'UMPInGameInventory_C::TestFloat' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, IsVisibleDeleteInfo) == 0x0009D0, "Member 'UMPInGameInventory_C::IsVisibleDeleteInfo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Child_Widget) == 0x0009D8, "Member 'UMPInGameInventory_C::Child_Widget' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ShowChildWidget) == 0x0009E0, "Member 'UMPInGameInventory_C::ShowChildWidget' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, StashActorRef) == 0x0009E8, "Member 'UMPInGameInventory_C::StashActorRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBarOpacity) == 0x0009F0, "Member 'UMPInGameInventory_C::ScrollBarOpacity' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, ScrollBarOpacityTimer) == 0x0009F8, "Member 'UMPInGameInventory_C::ScrollBarOpacityTimer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Scroll_Box_Widget_Ref) == 0x000A00, "Member 'UMPInGameInventory_C::Scroll_Box_Widget_Ref' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WarningMessageTimer) == 0x000A08, "Member 'UMPInGameInventory_C::WarningMessageTimer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, MessageTime) == 0x000A10, "Member 'UMPInGameInventory_C::MessageTime' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UpdateLootInventoryTimerHandle) == 0x000A18, "Member 'UMPInGameInventory_C::UpdateLootInventoryTimerHandle' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, UpdateStats_Timer) == 0x000A20, "Member 'UMPInGameInventory_C::UpdateStats_Timer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PSNameMap) == 0x000A28, "Member 'UMPInGameInventory_C::PSNameMap' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetRef) == 0x000A78, "Member 'UMPInGameInventory_C::WidgetRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PerksRef) == 0x000A80, "Member 'UMPInGameInventory_C::PerksRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, LengthPerks) == 0x000A88, "Member 'UMPInGameInventory_C::LengthPerks' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, TableMap) == 0x000A90, "Member 'UMPInGameInventory_C::TableMap' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PocketContainer__DynamicReference_) == 0x000AE0, "Member 'UMPInGameInventory_C::PocketContainer__DynamicReference_' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, In_Time) == 0x000AE8, "Member 'UMPInGameInventory_C::In_Time' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerStatRef) == 0x000AF0, "Member 'UMPInGameInventory_C::PlayerStatRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Weight_Count) == 0x000AF8, "Member 'UMPInGameInventory_C::Weight_Count' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetCategorySwitcherIndex) == 0x000B00, "Member 'UMPInGameInventory_C::WidgetCategorySwitcherIndex' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SquadEntries) == 0x000B08, "Member 'UMPInGameInventory_C::SquadEntries' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Added_Data) == 0x000B18, "Member 'UMPInGameInventory_C::Added_Data' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Added_Items) == 0x000B28, "Member 'UMPInGameInventory_C::Added_Items' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PickupsInfo) == 0x000B38, "Member 'UMPInGameInventory_C::PickupsInfo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Interactive_Safe_Actor_Ref) == 0x000BA0, "Member 'UMPInGameInventory_C::Interactive_Safe_Actor_Ref' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bShowed) == 0x000BA8, "Member 'UMPInGameInventory_C::bShowed' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WidgetInviteHomeRef) == 0x000BB0, "Member 'UMPInGameInventory_C::WidgetInviteHomeRef' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, PlayerNegativeEffects) == 0x000BB8, "Member 'UMPInGameInventory_C::PlayerNegativeEffects' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bShowTutorialWaterInfo) == 0x000BC0, "Member 'UMPInGameInventory_C::bShowTutorialWaterInfo' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, StatsWidgets) == 0x000BC8, "Member 'UMPInGameInventory_C::StatsWidgets' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bOpenInventoryHintShowed) == 0x000C18, "Member 'UMPInGameInventory_C::bOpenInventoryHintShowed' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, OnInventoryClosed) == 0x000C20, "Member 'UMPInGameInventory_C::OnInventoryClosed' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, StashTutorialItemToTake) == 0x000C30, "Member 'UMPInGameInventory_C::StashTutorialItemToTake' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, bIsSwitching) == 0x000C38, "Member 'UMPInGameInventory_C::bIsSwitching' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WithShop) == 0x000C39, "Member 'UMPInGameInventory_C::WithShop' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WithShopHoarder) == 0x000C3A, "Member 'UMPInGameInventory_C::WithShopHoarder' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, Shop_Item_Hovered_CheckingTimer) == 0x000C40, "Member 'UMPInGameInventory_C::Shop_Item_Hovered_CheckingTimer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, OnHoldRepairAll) == 0x000C48, "Member 'UMPInGameInventory_C::OnHoldRepairAll' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, HoldButtonRepairAll) == 0x000C58, "Member 'UMPInGameInventory_C::HoldButtonRepairAll' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, CurrentHoldTimeRepairAll) == 0x000C60, "Member 'UMPInGameInventory_C::CurrentHoldTimeRepairAll' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, RepairAllButtonTimer) == 0x000C68, "Member 'UMPInGameInventory_C::RepairAllButtonTimer' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, OnTakeItem) == 0x000C70, "Member 'UMPInGameInventory_C::OnTakeItem' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, SlotRefOnTake) == 0x000C80, "Member 'UMPInGameInventory_C::SlotRefOnTake' has a wrong offset!");
static_assert(offsetof(UMPInGameInventory_C, WDropTemp) == 0x000C88, "Member 'UMPInGameInventory_C::WDropTemp' has a wrong offset!");

}

