#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_TabsWindow

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "Slate_structs.hpp"
#include "E_TabType_structs.hpp"


namespace SDK::Params
{

// Function W_TabsWindow.W_TabsWindow_C.AddChildToContainer
// 0x0058 (0x0058 - 0x0000)
struct W_TabsWindow_C_AddChildToContainer final
{
public:
	class UWidget*                                Content;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FAnchors                               K2Node_MakeStruct_Anchors;                         // 0x0008(0x0020)(NoDestructor)
	class UCanvasPanelSlot*                       CallFunc_AddChildToCanvas_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Tab_C>              K2Node_DynamicCast_AsI_Tab;                        // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetFocused_Success;                       // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x2];                                       // 0x0042(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(W_TabsWindow_C_AddChildToContainer) == 0x000008, "Wrong alignment on W_TabsWindow_C_AddChildToContainer");
static_assert(sizeof(W_TabsWindow_C_AddChildToContainer) == 0x000058, "Wrong size on W_TabsWindow_C_AddChildToContainer");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, Content) == 0x000000, "Member 'W_TabsWindow_C_AddChildToContainer::Content' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, K2Node_MakeStruct_Anchors) == 0x000008, "Member 'W_TabsWindow_C_AddChildToContainer::K2Node_MakeStruct_Anchors' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, CallFunc_AddChildToCanvas_ReturnValue) == 0x000028, "Member 'W_TabsWindow_C_AddChildToContainer::CallFunc_AddChildToCanvas_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, K2Node_DynamicCast_AsI_Tab) == 0x000030, "Member 'W_TabsWindow_C_AddChildToContainer::K2Node_DynamicCast_AsI_Tab' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'W_TabsWindow_C_AddChildToContainer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, CallFunc_SetFocused_Success) == 0x000041, "Member 'W_TabsWindow_C_AddChildToContainer::CallFunc_SetFocused_Success' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_AddChildToContainer, K2Node_MakeStruct_Margin) == 0x000044, "Member 'W_TabsWindow_C_AddChildToContainer::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function W_TabsWindow.W_TabsWindow_C.ExecuteUbergraph_W_TabsWindow
// 0x00D8 (0x00D8 - 0x0000)
struct W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_TabType                                     K2Node_CustomEvent_FocusedWindow;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_WithVehicle;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player_1;            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        CallFunc_IsShopWidgetOpen_self_CastInput;          // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsShopWidgetOpen_IsOpen;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue;                 // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsInViewport_ReturnValue_1;               // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_GameHUD_C*                          K2Node_DynamicCast_AsBP_Game_HUD;                  // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetInventoryTutorial_Enabled;             // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMPInGameInventory_C* InventoryRef)> K2Node_CreateDelegate_OutputDelegate;              // 0x00A4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   K2Node_CustomEvent_InventoryRef;                   // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class UMPInGameInventory_C* InventoryRef)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x00C0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow) == 0x000008, "Wrong alignment on W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow");
static_assert(sizeof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow) == 0x0000D8, "Wrong size on W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, EntryPoint) == 0x000000, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_CustomEvent_FocusedWindow) == 0x000004, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_CustomEvent_FocusedWindow' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_CustomEvent_WithVehicle) == 0x000005, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_CustomEvent_WithVehicle' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000018, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_AsSurvival_Player) == 0x000028, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000038, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_AsSurvival_Player_1) == 0x000040, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_AsSurvival_Player_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_bSuccess_1) == 0x000048, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue_1) == 0x000049, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsShopWidgetOpen_self_CastInput) == 0x000050, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsShopWidgetOpen_self_CastInput' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsShopWidgetOpen_IsOpen) == 0x000060, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsShopWidgetOpen_IsOpen' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsInViewport_ReturnValue) == 0x000061, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsInViewport_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsInViewport_ReturnValue_1) == 0x000062, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsInViewport_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_BooleanOR_ReturnValue) == 0x000063, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetPlayerController_ReturnValue_1) == 0x000068, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_BooleanOR_ReturnValue_1) == 0x000070, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetHUD_ReturnValue) == 0x000078, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_AsBP_Game_HUD) == 0x000080, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_AsBP_Game_HUD' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_bSuccess_2) == 0x000088, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000090, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_DynamicCast_bSuccess_3) == 0x0000A0, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_GetInventoryTutorial_Enabled) == 0x0000A1, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_GetInventoryTutorial_Enabled' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue_2) == 0x0000A2, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue_3) == 0x0000A3, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_CreateDelegate_OutputDelegate) == 0x0000A4, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue_4) == 0x0000B4, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_CustomEvent_InventoryRef) == 0x0000B8, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_CustomEvent_InventoryRef' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000C0, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow, CallFunc_IsValid_ReturnValue_5) == 0x0000D0, "Member 'W_TabsWindow_C_ExecuteUbergraph_W_TabsWindow::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");

// Function W_TabsWindow.W_TabsWindow_C.OnInitializedInventoryWidget_Event
// 0x0008 (0x0008 - 0x0000)
struct W_TabsWindow_C_OnInitializedInventoryWidget_Event final
{
public:
	class UMPInGameInventory_C*                   InventoryRef;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TabsWindow_C_OnInitializedInventoryWidget_Event) == 0x000008, "Wrong alignment on W_TabsWindow_C_OnInitializedInventoryWidget_Event");
static_assert(sizeof(W_TabsWindow_C_OnInitializedInventoryWidget_Event) == 0x000008, "Wrong size on W_TabsWindow_C_OnInitializedInventoryWidget_Event");
static_assert(offsetof(W_TabsWindow_C_OnInitializedInventoryWidget_Event, InventoryRef) == 0x000000, "Member 'W_TabsWindow_C_OnInitializedInventoryWidget_Event::InventoryRef' has a wrong offset!");

// Function W_TabsWindow.W_TabsWindow_C.Open
// 0x0002 (0x0002 - 0x0000)
struct W_TabsWindow_C_Open final
{
public:
	E_TabType                                     FocusedWindow;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          WithVehicle;                                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TabsWindow_C_Open) == 0x000001, "Wrong alignment on W_TabsWindow_C_Open");
static_assert(sizeof(W_TabsWindow_C_Open) == 0x000002, "Wrong size on W_TabsWindow_C_Open");
static_assert(offsetof(W_TabsWindow_C_Open, FocusedWindow) == 0x000000, "Member 'W_TabsWindow_C_Open::FocusedWindow' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_Open, WithVehicle) == 0x000001, "Member 'W_TabsWindow_C_Open::WithVehicle' has a wrong offset!");

// Function W_TabsWindow.W_TabsWindow_C.OpenTab
// 0x0068 (0x0068 - 0x0000)
struct W_TabsWindow_C_OpenTab final
{
public:
	E_TabType                                     Focuse;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   InventoryWidget;                                   // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_TabType                                     CurrentFocusedWindow;                              // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC;                  // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_SurvPC_C>         K2Node_DynamicCast_AsBPI_Surv_PC_1;                // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMPInGameInventory_C*                   CallFunc_GetInventoryWidget_Widget;                // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_CarUpgradeMenu_C*                    CallFunc_GetCarUpgradeWidget_Widget;               // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TabsWindow_C_OpenTab) == 0x000008, "Wrong alignment on W_TabsWindow_C_OpenTab");
static_assert(sizeof(W_TabsWindow_C_OpenTab) == 0x000068, "Wrong size on W_TabsWindow_C_OpenTab");
static_assert(offsetof(W_TabsWindow_C_OpenTab, Focuse) == 0x000000, "Member 'W_TabsWindow_C_OpenTab::Focuse' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, InventoryWidget) == 0x000008, "Member 'W_TabsWindow_C_OpenTab::InventoryWidget' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, CurrentFocusedWindow) == 0x000010, "Member 'W_TabsWindow_C_OpenTab::CurrentFocusedWindow' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, K2Node_SwitchEnum_CmpSuccess) == 0x000011, "Member 'W_TabsWindow_C_OpenTab::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'W_TabsWindow_C_OpenTab::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, CallFunc_GetOwningPlayer_ReturnValue_1) == 0x000020, "Member 'W_TabsWindow_C_OpenTab::CallFunc_GetOwningPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, K2Node_DynamicCast_AsBPI_Surv_PC) == 0x000028, "Member 'W_TabsWindow_C_OpenTab::K2Node_DynamicCast_AsBPI_Surv_PC' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'W_TabsWindow_C_OpenTab::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, K2Node_DynamicCast_AsBPI_Surv_PC_1) == 0x000040, "Member 'W_TabsWindow_C_OpenTab::K2Node_DynamicCast_AsBPI_Surv_PC_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, K2Node_DynamicCast_bSuccess_1) == 0x000050, "Member 'W_TabsWindow_C_OpenTab::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, CallFunc_GetInventoryWidget_Widget) == 0x000058, "Member 'W_TabsWindow_C_OpenTab::CallFunc_GetInventoryWidget_Widget' has a wrong offset!");
static_assert(offsetof(W_TabsWindow_C_OpenTab, CallFunc_GetCarUpgradeWidget_Widget) == 0x000060, "Member 'W_TabsWindow_C_OpenTab::CallFunc_GetCarUpgradeWidget_Widget' has a wrong offset!");

// Function W_TabsWindow.W_TabsWindow_C.SetType
// 0x0001 (0x0001 - 0x0000)
struct W_TabsWindow_C_SetType final
{
public:
	bool                                          WithVehicle;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_TabsWindow_C_SetType) == 0x000001, "Wrong alignment on W_TabsWindow_C_SetType");
static_assert(sizeof(W_TabsWindow_C_SetType) == 0x000001, "Wrong size on W_TabsWindow_C_SetType");
static_assert(offsetof(W_TabsWindow_C_SetType, WithVehicle) == 0x000000, "Member 'W_TabsWindow_C_SetType::WithVehicle' has a wrong offset!");

}

