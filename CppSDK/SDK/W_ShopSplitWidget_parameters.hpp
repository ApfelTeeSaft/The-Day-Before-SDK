#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_ShopSplitWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "E_BaseContainerType_structs.hpp"


namespace SDK::Params
{

// Function W_ShopSplitWidget.W_ShopSplitWidget_C.ExecuteUbergraph_W_ShopSplitWidget
// 0x00C8 (0x00C8 - 0x0000)
struct W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Value;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue;            // 0x0010(0x0018)()
	E_BaseContainerType                           CallFunc_GetSenderContainerType_ContainerType;     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Round_ReturnValue;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0048(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_1;          // 0x0098(0x0018)()
	class FText                                   CallFunc_Conv_DoubleToText_ReturnValue_2;          // 0x00B0(0x0018)()
};
static_assert(alignof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget) == 0x000008, "Wrong alignment on W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget");
static_assert(sizeof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget) == 0x0000C8, "Wrong size on W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, EntryPoint) == 0x000000, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, K2Node_Event_IsDesignTime) == 0x000004, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, K2Node_Event_Value) == 0x000008, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::K2Node_Event_Value' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Conv_DoubleToText_ReturnValue) == 0x000010, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Conv_DoubleToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_GetSenderContainerType_ContainerType) == 0x000028, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_GetSenderContainerType_ContainerType' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Round_ReturnValue) == 0x000040, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Clamp_ReturnValue) == 0x000044, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, K2Node_Event_MyGeometry) == 0x000048, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, K2Node_Event_InDeltaTime) == 0x000080, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000088, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Conv_DoubleToText_ReturnValue_1) == 0x000098, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Conv_DoubleToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget, CallFunc_Conv_DoubleToText_ReturnValue_2) == 0x0000B0, "Member 'W_ShopSplitWidget_C_ExecuteUbergraph_W_ShopSplitWidget::CallFunc_Conv_DoubleToText_ReturnValue_2' has a wrong offset!");

// Function W_ShopSplitWidget.W_ShopSplitWidget_C.Tick
// 0x003C (0x003C - 0x0000)
struct W_ShopSplitWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSplitWidget_C_Tick) == 0x000004, "Wrong alignment on W_ShopSplitWidget_C_Tick");
static_assert(sizeof(W_ShopSplitWidget_C_Tick) == 0x00003C, "Wrong size on W_ShopSplitWidget_C_Tick");
static_assert(offsetof(W_ShopSplitWidget_C_Tick, MyGeometry) == 0x000000, "Member 'W_ShopSplitWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(W_ShopSplitWidget_C_Tick, InDeltaTime) == 0x000038, "Member 'W_ShopSplitWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function W_ShopSplitWidget.W_ShopSplitWidget_C.OnCounterValueChanged
// 0x0008 (0x0008 - 0x0000)
struct W_ShopSplitWidget_C_OnCounterValueChanged final
{
public:
	double                                        Value;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSplitWidget_C_OnCounterValueChanged) == 0x000008, "Wrong alignment on W_ShopSplitWidget_C_OnCounterValueChanged");
static_assert(sizeof(W_ShopSplitWidget_C_OnCounterValueChanged) == 0x000008, "Wrong size on W_ShopSplitWidget_C_OnCounterValueChanged");
static_assert(offsetof(W_ShopSplitWidget_C_OnCounterValueChanged, Value) == 0x000000, "Member 'W_ShopSplitWidget_C_OnCounterValueChanged::Value' has a wrong offset!");

// Function W_ShopSplitWidget.W_ShopSplitWidget_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct W_ShopSplitWidget_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_ShopSplitWidget_C_PreConstruct) == 0x000001, "Wrong alignment on W_ShopSplitWidget_C_PreConstruct");
static_assert(sizeof(W_ShopSplitWidget_C_PreConstruct) == 0x000001, "Wrong size on W_ShopSplitWidget_C_PreConstruct");
static_assert(offsetof(W_ShopSplitWidget_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'W_ShopSplitWidget_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

