#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UMG_LabelText

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UMG_LabelText.UMG_LabelText_C.ExecuteUbergraph_UMG_LabelText
// 0x0028 (0x0028 - 0x0000)
struct UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USizeBox*                               K2Node_CustomEvent_SizeBox;                        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText) == 0x000008, "Wrong alignment on UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText");
static_assert(sizeof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText) == 0x000028, "Wrong size on UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, EntryPoint) == 0x000000, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::EntryPoint' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, Temp_bool_Variable) == 0x000004, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, Temp_byte_Variable) == 0x000005, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, Temp_byte_Variable_1) == 0x000006, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, K2Node_CustomEvent_SizeBox) == 0x000008, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::K2Node_CustomEvent_SizeBox' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, K2Node_Event_IsDesignTime) == 0x000010, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, K2Node_MakeStruct_Margin) == 0x000014, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::K2Node_MakeStruct_Margin' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText, K2Node_Select_Default) == 0x000024, "Member 'UMG_LabelText_C_ExecuteUbergraph_UMG_LabelText::K2Node_Select_Default' has a wrong offset!");

// Function UMG_LabelText.UMG_LabelText_C.PlayShowAnimation
// 0x0010 (0x0010 - 0x0000)
struct UMG_LabelText_C_PlayShowAnimation final
{
public:
	EUMGSequencePlayMode                          PlayMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_LabelText_C_PlayShowAnimation) == 0x000008, "Wrong alignment on UMG_LabelText_C_PlayShowAnimation");
static_assert(sizeof(UMG_LabelText_C_PlayShowAnimation) == 0x000010, "Wrong size on UMG_LabelText_C_PlayShowAnimation");
static_assert(offsetof(UMG_LabelText_C_PlayShowAnimation, PlayMode) == 0x000000, "Member 'UMG_LabelText_C_PlayShowAnimation::PlayMode' has a wrong offset!");
static_assert(offsetof(UMG_LabelText_C_PlayShowAnimation, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'UMG_LabelText_C_PlayShowAnimation::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");

// Function UMG_LabelText.UMG_LabelText_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UMG_LabelText_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_LabelText_C_PreConstruct) == 0x000001, "Wrong alignment on UMG_LabelText_C_PreConstruct");
static_assert(sizeof(UMG_LabelText_C_PreConstruct) == 0x000001, "Wrong size on UMG_LabelText_C_PreConstruct");
static_assert(offsetof(UMG_LabelText_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UMG_LabelText_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function UMG_LabelText.UMG_LabelText_C.SequenceEvent__ENTRYPOINTUMG_LabelText
// 0x0008 (0x0008 - 0x0000)
struct UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText final
{
public:
	class USizeBox*                               Param_SizeBox;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText) == 0x000008, "Wrong alignment on UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText");
static_assert(sizeof(UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText) == 0x000008, "Wrong size on UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText");
static_assert(offsetof(UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText, Param_SizeBox) == 0x000000, "Member 'UMG_LabelText_C_SequenceEvent__ENTRYPOINTUMG_LabelText::Param_SizeBox' has a wrong offset!");

// Function UMG_LabelText.UMG_LabelText_C.SetText
// 0x0018 (0x0018 - 0x0000)
struct UMG_LabelText_C_SetText final
{
public:
	class FText                                   Param_LableText;                                   // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(UMG_LabelText_C_SetText) == 0x000008, "Wrong alignment on UMG_LabelText_C_SetText");
static_assert(sizeof(UMG_LabelText_C_SetText) == 0x000018, "Wrong size on UMG_LabelText_C_SetText");
static_assert(offsetof(UMG_LabelText_C_SetText, Param_LableText) == 0x000000, "Member 'UMG_LabelText_C_SetText::Param_LableText' has a wrong offset!");

// Function UMG_LabelText.UMG_LabelText_C.SizeBox_Event
// 0x0008 (0x0008 - 0x0000)
struct UMG_LabelText_C_SizeBox_Event final
{
public:
	class USizeBox*                               Param_SizeBox;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UMG_LabelText_C_SizeBox_Event) == 0x000008, "Wrong alignment on UMG_LabelText_C_SizeBox_Event");
static_assert(sizeof(UMG_LabelText_C_SizeBox_Event) == 0x000008, "Wrong size on UMG_LabelText_C_SizeBox_Event");
static_assert(offsetof(UMG_LabelText_C_SizeBox_Event, Param_SizeBox) == 0x000000, "Member 'UMG_LabelText_C_SizeBox_Event::Param_SizeBox' has a wrong offset!");

}

