#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvAnimInterface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "CarTipe_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SurvAnimInterface.SurvAnimInterface_C
// 0x0000 (0x0028 - 0x0028)
class ISurvAnimInterface_C final : public IInterface
{
public:
	void EndKnockDown();
	void GetDriving(bool* IsDriving);
	void GetFireSprayOffset(double* SprayOffset);
	void GetFPPTacticalGripOffset(struct FTransform* GripOffset);
	void GetInteractAnim(class UAnimSequence** Sequence);
	void GetInventoryLayerState(bool* Active_);
	void GetKneltTime(double* Time);
	void GetTacticalGripOffset(struct FTransform* GripOffset);
	void GetTacticalGripPoses(struct FS_WeaponGripType* GripPoses);
	void InFlatSurface(bool* Return);
	void IsInTurn(bool* Return);
	void IsJumpPrepare(bool* Return);
	void IsReloading(bool* Param_IsReloading);
	void IsRootRotation(bool* RM);
	void IsSpineMontage(bool* Return);
	void SetDash();
	void SetDriving(bool InCar, bool Driver, ECarTipe CarTipe, int32 SitIndex, bool* Nothing);
	void SetFireSprayOffset(double SprayOffset);
	void SetJumpPrepare(bool Value, bool* Nothing);
	void SetLeftHandVariant(double Variant, bool* Success);
	void SetLootTarget(const struct FTransform& TargetTransform, bool* Return);
	void SetReloadingState(bool IsReloading);
	void SetRubberDirection(double Direction, bool* Nothing);
	void SetSpineMotageBool(bool Value, bool* Nothing);
	void SetThrowableHandPose(class UAnimSequence* HandPose);
	void SetUsableItemSettings(const struct FS_EatConfiguration& ItemSettings);
	void SetWeaponAnims(const struct FS_PlayerWeaponAnim& WeaponAnims, class UAnimMontage* HipFirePoseStand, class UAnimMontage* HipFirePoseCrouch);
	void SetWeaponGripType(const class FString& TacticalGripName);
	void StartKnockdown();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SurvAnimInterface_C">();
	}
	static class ISurvAnimInterface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ISurvAnimInterface_C>();
	}
};
static_assert(alignof(ISurvAnimInterface_C) == 0x000008, "Wrong alignment on ISurvAnimInterface_C");
static_assert(sizeof(ISurvAnimInterface_C) == 0x000028, "Wrong size on ISurvAnimInterface_C");

}

