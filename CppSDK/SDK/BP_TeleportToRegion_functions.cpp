#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeleportToRegion

#include "Basic.hpp"

#include "BP_TeleportToRegion_classes.hpp"
#include "BP_TeleportToRegion_parameters.hpp"


namespace SDK
{

// Function BP_TeleportToRegion.BP_TeleportToRegion_C.ExecuteUbergraph_BP_TeleportToRegion
// (Final, UbergraphFunction)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::ExecuteUbergraph_BP_TeleportToRegion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "ExecuteUbergraph_BP_TeleportToRegion");

	Params::BP_TeleportToRegion_C_ExecuteUbergraph_BP_TeleportToRegion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.GetMapIconData
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UTexture2D*                       Icon                                                   (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector2D                        IconSize                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RotationYaw                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AActor*                           WorldActor                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FText                             Param_Name                                             (Parm, OutParm)
// class FText                             Description                                            (Parm, OutParm)

void ABP_TeleportToRegion_C::GetMapIconData(struct FVector* Location, class UTexture2D** Icon, struct FVector2D* IconSize, double* RotationYaw, class AActor** WorldActor, class FText* Param_Name, class FText* Description)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "GetMapIconData");

	Params::BP_TeleportToRegion_C_GetMapIconData Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Location != nullptr)
		*Location = std::move(Parms.Location);

	if (Icon != nullptr)
		*Icon = Parms.Icon;

	if (IconSize != nullptr)
		*IconSize = std::move(Parms.IconSize);

	if (RotationYaw != nullptr)
		*RotationYaw = Parms.RotationYaw;

	if (WorldActor != nullptr)
		*WorldActor = Parms.WorldActor;

	if (Param_Name != nullptr)
		*Param_Name = std::move(Parms.Param_Name);

	if (Description != nullptr)
		*Description = std::move(Parms.Description);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.GetRandomRegion
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class ABP_PlayerSpawnPoint_C*           SpawnPoint                                             (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::GetRandomRegion(class ABP_PlayerSpawnPoint_C** SpawnPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "GetRandomRegion");

	Params::BP_TeleportToRegion_C_GetRandomRegion Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SpawnPoint != nullptr)
		*SpawnPoint = Parms.SpawnPoint;
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.OnBlackScreenOpened
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_TeleportToRegion_C::OnBlackScreenOpened()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "OnBlackScreenOpened");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.OnDayStateChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EDayCycleState                          NewDayState                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::OnDayStateChange(EDayCycleState NewDayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "OnDayStateChange");

	Params::BP_TeleportToRegion_C_OnDayStateChange Parms{};

	Parms.NewDayState = NewDayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.ReceiveActorBeginOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::ReceiveActorBeginOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "ReceiveActorBeginOverlap");

	Params::BP_TeleportToRegion_C_ReceiveActorBeginOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.ReceiveActorEndOverlap
// (Event, Public, BlueprintEvent)
// Parameters:
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::ReceiveActorEndOverlap(class AActor* OtherActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "ReceiveActorEndOverlap");

	Params::BP_TeleportToRegion_C_ReceiveActorEndOverlap Parms{};

	Parms.OtherActor = OtherActor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_TeleportToRegion_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.TeleportTimerEnded
// (BlueprintCallable, BlueprintEvent)

void ABP_TeleportToRegion_C::TeleportTimerEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "TeleportTimerEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.TPWithTag
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Result                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    bIsWithoutBackpack                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    NightWarning                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DayWarning                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::TPWithTag(bool* Result, bool* bIsWithoutBackpack, bool* NightWarning, bool* DayWarning)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "TPWithTag");

	Params::BP_TeleportToRegion_C_TPWithTag Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = Parms.Result;

	if (bIsWithoutBackpack != nullptr)
		*bIsWithoutBackpack = Parms.bIsWithoutBackpack;

	if (NightWarning != nullptr)
		*NightWarning = Parms.NightWarning;

	if (DayWarning != nullptr)
		*DayWarning = Parms.DayWarning;
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.UpdateIconPosition
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Position                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::UpdateIconPosition(const struct FVector2D& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "UpdateIconPosition");

	Params::BP_TeleportToRegion_C_UpdateIconPosition Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void ABP_TeleportToRegion_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeleportToRegion.BP_TeleportToRegion_C.Zoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Out                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_TeleportToRegion_C::Zoom(bool Out)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeleportToRegion_C", "Zoom");

	Params::BP_TeleportToRegion_C_Zoom Parms{};

	Parms.Out = Out;

	UObject::ProcessEvent(Func, &Parms);
}

}

