#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BPC_BreathSystemReplication

#include "Basic.hpp"

#include "Survival_structs.hpp"
#include "BreathStatesEnum_structs.hpp"


namespace SDK::Params
{

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CalculateState
// 0x02D8 (0x02D8 - 0x0000)
struct BPC_BreathSystemReplication_C_CalculateState final
{
public:
	struct FBreathStateChangedStruct              NewState;                                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FBreathStateMachineStruct              StatesToChange;                                    // 0x0014(0x0009)(Edit, BlueprintVisible, NoDestructor)
	EBreathStatesEnum                             Temp_byte_Variable;                                // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_1;                            // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_2;                            // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_3;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_4;                            // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_5;                            // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_6;                            // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_7;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_8;                            // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_9;                            // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_10;                           // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_11;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_12;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_13;                           // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_14;                           // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_15;                           // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_16;                           // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_17;                           // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_18;                           // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_19;                           // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_20;                           // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_21;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_2;                              // 0x00DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_3;                              // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_4;                              // 0x00DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x00DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_5;                              // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x00E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x00E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_6;                              // 0x00E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_7;                              // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_7;                              // 0x00E5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_8;                              // 0x00E7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_9;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_10;                             // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_8;                              // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_11;                             // 0x00EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_9;                              // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_12;                             // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_10;                             // 0x00EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF[0x1];                                       // 0x00EF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_22;                           // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_23;                           // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_24;                           // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_25;                           // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_26;                           // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_27;                           // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_28;                           // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_29;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_30;                           // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_31;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_32;                           // 0x0140(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_11;                             // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             Temp_object_Variable_33;                           // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_34;                           // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_35;                           // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_36;                           // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_37;                           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_38;                           // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_39;                           // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_40;                           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_41;                           // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_42;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             Temp_object_Variable_43;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_13;                             // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_12;                             // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_13;                             // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_14;                             // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_14;                             // 0x01AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_15;                             // 0x01AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_15;                             // 0x01AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_16;                             // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_16;                             // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_17;                             // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_17;                             // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_18;                             // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             Temp_byte_Variable_18;                             // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_19;                             // 0x01B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x7];                                      // 0x01C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InPhase_Return;                           // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3[0x5];                                      // 0x01D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBreathStateMachineStruct              K2Node_MakeStruct_BreathStateMachineStruct;        // 0x01F1(0x0009)(NoDestructor)
	bool                                          K2Node_Select_Default;                             // 0x01FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_20;                             // 0x01FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_21;                             // 0x01FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x01FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_2;                           // 0x01FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FF[0x1];                                      // 0x01FF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_22;                             // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_3;                           // 0x022A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22B[0x5];                                      // 0x022B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_4;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_5;                           // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_23;                             // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_6;                           // 0x024A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InPhase_Return_1;                         // 0x024B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x024D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_24;                             // 0x024E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x024F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_7;                           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_25;                             // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_8;                           // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_26;                             // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_9;                           // 0x0255(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_256[0x2];                                      // 0x0256(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    K2Node_Select_Default_10;                          // 0x0258(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    K2Node_Select_Default_11;                          // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_12;                          // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_13;                          // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_14;                          // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             K2Node_Select_Default_15;                          // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_27;                             // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODEvent*                             K2Node_Select_Default_16;                          // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_17;                          // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBreathStateMachineStruct              K2Node_MakeStruct_BreathStateMachineStruct_1;      // 0x0299(0x0009)(NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x02A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_18;                          // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_19;                          // 0x02A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x02A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_20;                          // 0x02A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x02AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x02AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x02AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_21;                          // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_22;                          // 0x02B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_23;                          // 0x02B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_24;                          // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_25;                          // 0x02B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_26;                          // 0x02B6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_27;                          // 0x02B7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_28;                          // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_29;                          // 0x02B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_30;                          // 0x02BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EBreathStatesEnum                             K2Node_Select_Default_31;                          // 0x02BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast;          // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast_1;        // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast_2;        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetParameter_Value_ImplicitCast_3;        // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_BreathSystemReplication_C_CalculateState) == 0x000008, "Wrong alignment on BPC_BreathSystemReplication_C_CalculateState");
static_assert(sizeof(BPC_BreathSystemReplication_C_CalculateState) == 0x0002D8, "Wrong size on BPC_BreathSystemReplication_C_CalculateState");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, NewState) == 0x000000, "Member 'BPC_BreathSystemReplication_C_CalculateState::NewState' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, StatesToChange) == 0x000014, "Member 'BPC_BreathSystemReplication_C_CalculateState::StatesToChange' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable) == 0x00001D, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable) == 0x000020, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_1) == 0x000028, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_2) == 0x000030, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_3) == 0x000038, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_4) == 0x000040, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_5) == 0x000048, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_6) == 0x000050, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_7) == 0x000058, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_8) == 0x000060, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_8' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_9) == 0x000068, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_9' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_10) == 0x000070, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_10' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_1) == 0x000078, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_11) == 0x000080, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_11' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_12) == 0x000088, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_12' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_13) == 0x000090, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_13' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_14) == 0x000098, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_14' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_15) == 0x0000A0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_15' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_16) == 0x0000A8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_16' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_17) == 0x0000B0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_17' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_18) == 0x0000B8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_18' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_19) == 0x0000C0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_19' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_20) == 0x0000C8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_20' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_21) == 0x0000D0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_21' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable) == 0x0000D8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_1) == 0x0000D9, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_2) == 0x0000DA, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_2) == 0x0000DB, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_3) == 0x0000DC, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_3) == 0x0000DD, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_4) == 0x0000DE, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_4) == 0x0000DF, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_5) == 0x0000E0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_5) == 0x0000E1, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_6) == 0x0000E2, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_6) == 0x0000E3, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_7) == 0x0000E4, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_7) == 0x0000E5, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_IsValid_ReturnValue) == 0x0000E6, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_8) == 0x0000E7, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_8' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_9) == 0x0000E8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_9' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_10) == 0x0000E9, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_10' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_8) == 0x0000EA, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_11) == 0x0000EB, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_11' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_9) == 0x0000EC, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_12) == 0x0000ED, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_12' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_10) == 0x0000EE, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_22) == 0x0000F0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_22' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_23) == 0x0000F8, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_23' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_24) == 0x000100, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_24' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_25) == 0x000108, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_25' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_26) == 0x000110, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_26' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_27) == 0x000118, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_27' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_28) == 0x000120, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_28' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_29) == 0x000128, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_29' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_30) == 0x000130, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_30' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_31) == 0x000138, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_31' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_32) == 0x000140, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_32' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_11) == 0x000148, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_33) == 0x000150, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_33' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_34) == 0x000158, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_34' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_35) == 0x000160, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_35' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_36) == 0x000168, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_36' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_37) == 0x000170, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_37' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_38) == 0x000178, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_38' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_39) == 0x000180, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_39' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_40) == 0x000188, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_40' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_41) == 0x000190, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_41' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_42) == 0x000198, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_42' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_object_Variable_43) == 0x0001A0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_object_Variable_43' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_IsValid_ReturnValue_1) == 0x0001A8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_13) == 0x0001A9, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_13' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_12) == 0x0001AA, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_13) == 0x0001AB, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_14) == 0x0001AC, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_14' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_14) == 0x0001AD, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_15) == 0x0001AE, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_15' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_15) == 0x0001AF, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_15' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_16) == 0x0001B0, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_16' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_16) == 0x0001B1, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_16' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_17) == 0x0001B2, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_17' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_17) == 0x0001B3, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_17' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_18) == 0x0001B4, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_18' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_byte_Variable_18) == 0x0001B5, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_byte_Variable_18' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B6, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_19) == 0x0001B7, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_19' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SelectFloat_ReturnValue) == 0x0001B8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanOR_ReturnValue) == 0x0001C0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_MapRangeClamped_ReturnValue) == 0x0001C8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_IsLocallyControlled_ReturnValue) == 0x0001D0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_InPhase_Return) == 0x0001D1, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_InPhase_Return' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue) == 0x0001D2, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SelectFloat_ReturnValue_1) == 0x0001D8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanOR_ReturnValue_1) == 0x0001E0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SelectFloat_ReturnValue_2) == 0x0001E8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue) == 0x0001F0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_MakeStruct_BreathStateMachineStruct) == 0x0001F1, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_MakeStruct_BreathStateMachineStruct' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default) == 0x0001FA, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_20) == 0x0001FB, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_20' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_21) == 0x0001FC, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_21' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_1) == 0x0001FD, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_2) == 0x0001FE, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_GetOwner_ReturnValue) == 0x000200, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_GetOwner_ReturnValue_1) == 0x000208, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000210, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x000220, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_DynamicCast_bSuccess_1) == 0x000228, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_22) == 0x000229, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_22' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_3) == 0x00022A, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_4) == 0x000230, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_IsValid_ReturnValue_2) == 0x000238, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_5) == 0x000240, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_23) == 0x000248, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_23' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x000249, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_6) == 0x00024A, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_InPhase_Return_1) == 0x00024B, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_InPhase_Return_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_1) == 0x00024C, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanOR_ReturnValue_2) == 0x00024D, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_24) == 0x00024E, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_24' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_1) == 0x00024F, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_7) == 0x000250, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_25) == 0x000251, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_25' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_SwitchEnum_CmpSuccess) == 0x000252, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_8) == 0x000253, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_8' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_26) == 0x000254, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_26' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_9) == 0x000255, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_9' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_10) == 0x000258, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_10' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_11) == 0x000260, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_11' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_12) == 0x000268, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_12' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_13) == 0x000270, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_13' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_14) == 0x000278, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_14' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_15) == 0x000280, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_15' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, Temp_bool_Variable_27) == 0x000288, "Member 'BPC_BreathSystemReplication_C_CalculateState::Temp_bool_Variable_27' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_16) == 0x000290, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_16' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_17) == 0x000298, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_17' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_MakeStruct_BreathStateMachineStruct_1) == 0x000299, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_MakeStruct_BreathStateMachineStruct_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_2) == 0x0002A2, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_3) == 0x0002A3, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_18) == 0x0002A4, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_18' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_19) == 0x0002A5, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_19' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_4) == 0x0002A6, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_20) == 0x0002A7, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_20' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_2) == 0x0002A8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_5) == 0x0002A9, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_3) == 0x0002AA, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_4) == 0x0002AB, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_5) == 0x0002AC, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_6) == 0x0002AD, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_6) == 0x0002AE, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_Not_PreBool_ReturnValue_7) == 0x0002AF, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_BooleanAND_ReturnValue_7) == 0x0002B0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_21) == 0x0002B1, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_21' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_22) == 0x0002B2, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_22' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_23) == 0x0002B3, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_23' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_24) == 0x0002B4, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_24' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_25) == 0x0002B5, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_25' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_26) == 0x0002B6, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_26' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_27) == 0x0002B7, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_27' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_28) == 0x0002B8, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_28' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_29) == 0x0002B9, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_29' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_30) == 0x0002BA, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_30' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, K2Node_Select_Default_31) == 0x0002BB, "Member 'BPC_BreathSystemReplication_C_CalculateState::K2Node_Select_Default_31' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0002C0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SetParameter_Value_ImplicitCast) == 0x0002C8, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SetParameter_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SetParameter_Value_ImplicitCast_1) == 0x0002CC, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SetParameter_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SetParameter_Value_ImplicitCast_2) == 0x0002D0, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SetParameter_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateState, CallFunc_SetParameter_Value_ImplicitCast_3) == 0x0002D4, "Member 'BPC_BreathSystemReplication_C_CalculateState::CallFunc_SetParameter_Value_ImplicitCast_3' has a wrong offset!");

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CalculateStateServer
// 0x0014 (0x0014 - 0x0000)
struct BPC_BreathSystemReplication_C_CalculateStateServer final
{
public:
	struct FBreathStateChangedStruct              NewState;                                          // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BPC_BreathSystemReplication_C_CalculateStateServer) == 0x000004, "Wrong alignment on BPC_BreathSystemReplication_C_CalculateStateServer");
static_assert(sizeof(BPC_BreathSystemReplication_C_CalculateStateServer) == 0x000014, "Wrong size on BPC_BreathSystemReplication_C_CalculateStateServer");
static_assert(offsetof(BPC_BreathSystemReplication_C_CalculateStateServer, NewState) == 0x000000, "Member 'BPC_BreathSystemReplication_C_CalculateStateServer::NewState' has a wrong offset!");

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.CallBreathStateChange
// 0x0020 (0x0020 - 0x0000)
struct BPC_BreathSystemReplication_C_CallBreathStateChange final
{
public:
	struct FBreathStateMachineStruct              NewState;                                          // 0x0000(0x0009)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CurrentStamina;                                    // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamagedChest;                                      // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DamagedBelly;                                      // 0x0019(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Painkiller;                                        // 0x001A(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_BreathSystemReplication_C_CallBreathStateChange) == 0x000008, "Wrong alignment on BPC_BreathSystemReplication_C_CallBreathStateChange");
static_assert(sizeof(BPC_BreathSystemReplication_C_CallBreathStateChange) == 0x000020, "Wrong size on BPC_BreathSystemReplication_C_CallBreathStateChange");
static_assert(offsetof(BPC_BreathSystemReplication_C_CallBreathStateChange, NewState) == 0x000000, "Member 'BPC_BreathSystemReplication_C_CallBreathStateChange::NewState' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CallBreathStateChange, CurrentStamina) == 0x000010, "Member 'BPC_BreathSystemReplication_C_CallBreathStateChange::CurrentStamina' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CallBreathStateChange, DamagedChest) == 0x000018, "Member 'BPC_BreathSystemReplication_C_CallBreathStateChange::DamagedChest' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CallBreathStateChange, DamagedBelly) == 0x000019, "Member 'BPC_BreathSystemReplication_C_CallBreathStateChange::DamagedBelly' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_CallBreathStateChange, Painkiller) == 0x00001A, "Member 'BPC_BreathSystemReplication_C_CallBreathStateChange::Painkiller' has a wrong offset!");

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.ExecuteUbergraph_BPC_BreathSystemReplication
// 0x00A8 (0x00A8 - 0x0000)
struct BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FBreathStateMachineStruct              K2Node_Event_NewState;                             // 0x001B(0x0009)(NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_CurrentStamina;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DamagedChest;                         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DamagedBelly;                         // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Painkiller;                           // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x1];                                       // 0x0033(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FBreathStateChangedStruct              K2Node_CustomEvent_NewState;                       // 0x0034(0x0014)(NoDestructor)
	struct FBreathStateChangedStruct              K2Node_Event_State;                                // 0x0048(0x0014)(NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_GetOwner_ReturnValue_1;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2_1;         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetDistanceTo_ReturnValue;                // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x6];                                       // 0x009A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication) == 0x000008, "Wrong alignment on BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication");
static_assert(sizeof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication) == 0x0000A8, "Wrong size on BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, EntryPoint) == 0x000000, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::EntryPoint' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsValid_ReturnValue_1) == 0x000005, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsLocallyControlled_ReturnValue) == 0x000006, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_GetOwner_ReturnValue) == 0x000008, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000010, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsValid_ReturnValue_2) == 0x000019, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x00001A, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_NewState) == 0x00001B, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_NewState' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_CurrentStamina) == 0x000028, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_CurrentStamina' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_DamagedChest) == 0x000030, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_DamagedChest' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_DamagedBelly) == 0x000031, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_DamagedBelly' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_Painkiller) == 0x000032, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_Painkiller' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_CustomEvent_NewState) == 0x000034, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_CustomEvent_NewState' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_Event_State) == 0x000048, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_Event_State' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_GetOwner_ReturnValue_1) == 0x000060, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_GetOwner_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsValid_ReturnValue_3) == 0x000068, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_DynamicCast_AsSurvival_Player_V2_1) == 0x000070, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_DynamicCast_AsSurvival_Player_V2_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, K2Node_DynamicCast_bSuccess_1) == 0x000078, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_GetPlayerController_ReturnValue) == 0x000080, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_K2_GetPawn_ReturnValue) == 0x000088, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_IsServer_ReturnValue) == 0x000090, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_GetDistanceTo_ReturnValue) == 0x000094, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_GetDistanceTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_BooleanOR_ReturnValue) == 0x000098, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000099, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'BPC_BreathSystemReplication_C_ExecuteUbergraph_BPC_BreathSystemReplication::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.FMODBreathingStartEvent
// 0x0020 (0x0020 - 0x0000)
struct BPC_BreathSystemReplication_C_FMODBreathingStartEvent final
{
public:
	class UFMODEvent*                             NewEvent;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    Active;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    Disabled;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent) == 0x000008, "Wrong alignment on BPC_BreathSystemReplication_C_FMODBreathingStartEvent");
static_assert(sizeof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent) == 0x000020, "Wrong size on BPC_BreathSystemReplication_C_FMODBreathingStartEvent");
static_assert(offsetof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent, NewEvent) == 0x000000, "Member 'BPC_BreathSystemReplication_C_FMODBreathingStartEvent::NewEvent' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent, Active) == 0x000008, "Member 'BPC_BreathSystemReplication_C_FMODBreathingStartEvent::Active' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent, Disabled) == 0x000010, "Member 'BPC_BreathSystemReplication_C_FMODBreathingStartEvent::Disabled' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000018, "Member 'BPC_BreathSystemReplication_C_FMODBreathingStartEvent::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BPC_BreathSystemReplication_C_FMODBreathingStartEvent, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000019, "Member 'BPC_BreathSystemReplication_C_FMODBreathingStartEvent::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function BPC_BreathSystemReplication.BPC_BreathSystemReplication_C.OnBreathStateChanged
// 0x0014 (0x0014 - 0x0000)
struct BPC_BreathSystemReplication_C_OnBreathStateChanged final
{
public:
	struct FBreathStateChangedStruct              State;                                             // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
};
static_assert(alignof(BPC_BreathSystemReplication_C_OnBreathStateChanged) == 0x000004, "Wrong alignment on BPC_BreathSystemReplication_C_OnBreathStateChanged");
static_assert(sizeof(BPC_BreathSystemReplication_C_OnBreathStateChanged) == 0x000014, "Wrong size on BPC_BreathSystemReplication_C_OnBreathStateChanged");
static_assert(offsetof(BPC_BreathSystemReplication_C_OnBreathStateChanged, State) == 0x000000, "Member 'BPC_BreathSystemReplication_C_OnBreathStateChanged::State' has a wrong offset!");

}

