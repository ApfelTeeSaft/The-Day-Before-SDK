#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestManager

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "QuestData_0_structs.hpp"
#include "QuestType_structs.hpp"
#include "SideQuestData_structs.hpp"


namespace SDK::Params
{

// Function QuestManager.QuestManager_C.AddSideQuest
// 0x0018 (0x0018 - 0x0000)
struct QuestManager_C_AddSideQuest final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USideQuests_C*                          SideQuest;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_AddSideQuest) == 0x000008, "Wrong alignment on QuestManager_C_AddSideQuest");
static_assert(sizeof(QuestManager_C_AddSideQuest) == 0x000018, "Wrong size on QuestManager_C_AddSideQuest");
static_assert(offsetof(QuestManager_C_AddSideQuest, ID) == 0x000000, "Member 'QuestManager_C_AddSideQuest::ID' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AddSideQuest, SideQuest) == 0x000010, "Member 'QuestManager_C_AddSideQuest::SideQuest' has a wrong offset!");

// Function QuestManager.QuestManager_C.AksForHighlightableActorsWithTag
// 0x0078 (0x0078 - 0x0000)
struct QuestManager_C_AksForHighlightableActorsWithTag final
{
public:
	class FString                                 Tag;                                               // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<TScriptInterface<class II_Highlightable_C>> Result;                                            // 0x0010(0x0010)(Parm, OutParm)
	TArray<TScriptInterface<class II_Highlightable_C>> ResultArray;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<TScriptInterface<class II_Highlightable_C>> CallFunc_AskForHighlightableActors_FoundActors;    // 0x0040(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class II_Highlightable_C>    CallFunc_Array_Get_Item;                           // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasTag_HasTag;                            // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_AksForHighlightableActorsWithTag) == 0x000008, "Wrong alignment on QuestManager_C_AksForHighlightableActorsWithTag");
static_assert(sizeof(QuestManager_C_AksForHighlightableActorsWithTag) == 0x000078, "Wrong size on QuestManager_C_AksForHighlightableActorsWithTag");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, Tag) == 0x000000, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::Tag' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, Result) == 0x000010, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, ResultArray) == 0x000020, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::ResultArray' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, Temp_int_Array_Index_Variable) == 0x000030, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_AskForHighlightableActors_FoundActors) == 0x000040, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_AskForHighlightableActors_FoundActors' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_Array_Get_Item) == 0x000058, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_Array_Add_ReturnValue) == 0x00006C, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AksForHighlightableActorsWithTag, CallFunc_HasTag_HasTag) == 0x000070, "Member 'QuestManager_C_AksForHighlightableActorsWithTag::CallFunc_HasTag_HasTag' has a wrong offset!");

// Function QuestManager.QuestManager_C.AskForHighlightableActors
// 0x0078 (0x0078 - 0x0000)
struct QuestManager_C_AskForHighlightableActors final
{
public:
	TArray<TScriptInterface<class II_Highlightable_C>> FoundActors;                                       // 0x0000(0x0010)(Parm, OutParm)
	TArray<TScriptInterface<class II_Highlightable_C>> Result;                                            // 0x0010(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHighlightMesh_C*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class II_Highlightable_C>    CallFunc_Array_Add_NewItem_CastInput;              // 0x0060(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_AskForHighlightableActors) == 0x000008, "Wrong alignment on QuestManager_C_AskForHighlightableActors");
static_assert(sizeof(QuestManager_C_AskForHighlightableActors) == 0x000078, "Wrong size on QuestManager_C_AskForHighlightableActors");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, FoundActors) == 0x000000, "Member 'QuestManager_C_AskForHighlightableActors::FoundActors' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, Result) == 0x000010, "Member 'QuestManager_C_AskForHighlightableActors::Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, Temp_int_Array_Index_Variable) == 0x000020, "Member 'QuestManager_C_AskForHighlightableActors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'QuestManager_C_AskForHighlightableActors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000030, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Array_Get_Item) == 0x000048, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_GetComponentByClass_ReturnValue) == 0x000058, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Array_Add_NewItem_CastInput) == 0x000060, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Array_Add_NewItem_CastInput' has a wrong offset!");
static_assert(offsetof(QuestManager_C_AskForHighlightableActors, CallFunc_Array_Add_ReturnValue) == 0x000070, "Member 'QuestManager_C_AskForHighlightableActors::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function QuestManager.QuestManager_C.ChangeQuestHint
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_C_ChangeQuestHint final
{
public:
	class FString                                 Hint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_ChangeQuestHint) == 0x000008, "Wrong alignment on QuestManager_C_ChangeQuestHint");
static_assert(sizeof(QuestManager_C_ChangeQuestHint) == 0x000010, "Wrong size on QuestManager_C_ChangeQuestHint");
static_assert(offsetof(QuestManager_C_ChangeQuestHint, Hint) == 0x000000, "Member 'QuestManager_C_ChangeQuestHint::Hint' has a wrong offset!");

// Function QuestManager.QuestManager_C.ChangeQuestHintClientSide
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_C_ChangeQuestHintClientSide final
{
public:
	class FString                                 Hint;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_ChangeQuestHintClientSide) == 0x000008, "Wrong alignment on QuestManager_C_ChangeQuestHintClientSide");
static_assert(sizeof(QuestManager_C_ChangeQuestHintClientSide) == 0x000010, "Wrong size on QuestManager_C_ChangeQuestHintClientSide");
static_assert(offsetof(QuestManager_C_ChangeQuestHintClientSide, Hint) == 0x000000, "Member 'QuestManager_C_ChangeQuestHintClientSide::Hint' has a wrong offset!");

// Function QuestManager.QuestManager_C.CheckForStartSideQuest
// 0x0060 (0x0060 - 0x0000)
struct QuestManager_C_CheckForStartSideQuest final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          IsSideQuestTrigger;                                // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          SideQuest;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USideQuests_C*                          FoundSideQuest;                                    // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USideQuests_C*>                  CallFunc_Map_Values_Values;                        // 0x0030(0x0010)(ReferenceParm)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMyStartTrigger_IsMyStartTrigger;        // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_CheckForStartSideQuest) == 0x000008, "Wrong alignment on QuestManager_C_CheckForStartSideQuest");
static_assert(sizeof(QuestManager_C_CheckForStartSideQuest) == 0x000060, "Wrong size on QuestManager_C_CheckForStartSideQuest");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, Trigger) == 0x000000, "Member 'QuestManager_C_CheckForStartSideQuest::Trigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, IsSideQuestTrigger) == 0x000010, "Member 'QuestManager_C_CheckForStartSideQuest::IsSideQuestTrigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, SideQuest) == 0x000018, "Member 'QuestManager_C_CheckForStartSideQuest::SideQuest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, FoundSideQuest) == 0x000020, "Member 'QuestManager_C_CheckForStartSideQuest::FoundSideQuest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, Temp_int_Array_Index_Variable) == 0x000028, "Member 'QuestManager_C_CheckForStartSideQuest::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, Temp_bool_True_if_break_was_hit_Variable) == 0x00002C, "Member 'QuestManager_C_CheckForStartSideQuest::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Not_PreBool_ReturnValue) == 0x00002D, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_IsValid_ReturnValue) == 0x00002E, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Map_Values_Values) == 0x000030, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'QuestManager_C_CheckForStartSideQuest::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Array_Get_Item) == 0x000048, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_IsMyStartTrigger_IsMyStartTrigger) == 0x000050, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_IsMyStartTrigger_IsMyStartTrigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000054, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CheckForStartSideQuest, CallFunc_BooleanAND_ReturnValue) == 0x00005D, "Member 'QuestManager_C_CheckForStartSideQuest::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function QuestManager.QuestManager_C.CreateQuestByQuestData
// 0x0078 (0x0078 - 0x0000)
struct QuestManager_C_CreateQuestByQuestData final
{
public:
	struct FQuestData                             QuestData;                                         // 0x0000(0x0058)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UQuestV2_C*                             Quest;                                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_CreateQuestByType_Result;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IQuestListener_C>      CallFunc_SetListener_Listener_CastInput;           // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_CreateQuestByQuestData) == 0x000008, "Wrong alignment on QuestManager_C_CreateQuestByQuestData");
static_assert(sizeof(QuestManager_C_CreateQuestByQuestData) == 0x000078, "Wrong size on QuestManager_C_CreateQuestByQuestData");
static_assert(offsetof(QuestManager_C_CreateQuestByQuestData, QuestData) == 0x000000, "Member 'QuestManager_C_CreateQuestByQuestData::QuestData' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByQuestData, Quest) == 0x000058, "Member 'QuestManager_C_CreateQuestByQuestData::Quest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByQuestData, CallFunc_CreateQuestByType_Result) == 0x000060, "Member 'QuestManager_C_CreateQuestByQuestData::CallFunc_CreateQuestByType_Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByQuestData, CallFunc_SetListener_Listener_CastInput) == 0x000068, "Member 'QuestManager_C_CreateQuestByQuestData::CallFunc_SetListener_Listener_CastInput' has a wrong offset!");

// Function QuestManager.QuestManager_C.CreateQuestByType
// 0x0048 (0x0048 - 0x0000)
struct QuestManager_C_CreateQuestByType final
{
public:
	EQuestType                                    QuestType;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             Result;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USimpleQuestWithHighlightActors_C*      CallFunc_SpawnObject_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCountTriggerQuest_C*                   CallFunc_SpawnObject_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTimeoutQuest_C*                        CallFunc_SpawnObject_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCollectAndCheckInventoryQuest_C*       CallFunc_SpawnObject_ReturnValue_3;                // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UCheckInventoryQuest_C*                 CallFunc_SpawnObject_ReturnValue_4;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_SpawnObject_ReturnValue_5;                // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_CreateQuestByType) == 0x000008, "Wrong alignment on QuestManager_C_CreateQuestByType");
static_assert(sizeof(QuestManager_C_CreateQuestByType) == 0x000048, "Wrong size on QuestManager_C_CreateQuestByType");
static_assert(offsetof(QuestManager_C_CreateQuestByType, QuestType) == 0x000000, "Member 'QuestManager_C_CreateQuestByType::QuestType' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, Result) == 0x000008, "Member 'QuestManager_C_CreateQuestByType::Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, K2Node_SwitchEnum_CmpSuccess) == 0x000010, "Member 'QuestManager_C_CreateQuestByType::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue) == 0x000018, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_1) == 0x000020, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_2) == 0x000028, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_3) == 0x000030, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_4) == 0x000038, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateQuestByType, CallFunc_SpawnObject_ReturnValue_5) == 0x000040, "Member 'QuestManager_C_CreateQuestByType::CallFunc_SpawnObject_ReturnValue_5' has a wrong offset!");

// Function QuestManager.QuestManager_C.CreateTimeoutTrigger
// 0x0018 (0x0018 - 0x0000)
struct QuestManager_C_CreateTimeoutTrigger final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Duration;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_CreateTimeoutTrigger) == 0x000008, "Wrong alignment on QuestManager_C_CreateTimeoutTrigger");
static_assert(sizeof(QuestManager_C_CreateTimeoutTrigger) == 0x000018, "Wrong size on QuestManager_C_CreateTimeoutTrigger");
static_assert(offsetof(QuestManager_C_CreateTimeoutTrigger, Trigger) == 0x000000, "Member 'QuestManager_C_CreateTimeoutTrigger::Trigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_CreateTimeoutTrigger, Duration) == 0x000010, "Member 'QuestManager_C_CreateTimeoutTrigger::Duration' has a wrong offset!");

// Function QuestManager.QuestManager_C.ExecuteUbergraph_QuestManager
// 0x01E0 (0x01E0 - 0x0000)
struct QuestManager_C_ExecuteUbergraph_QuestManager final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_QuestID;                              // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player;                         // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Hint;                                 // 0x0030(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Hint;                           // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_QuestEvent;                           // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_QuestID;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             K2Node_Event_CompletedQuest;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsCanSwitchToNextQuest_Result;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IsCanSwitchToNextQuest_NextIndex;         // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item_2;                         // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_Event_Player;                               // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_Array_Get_Item_3;                         // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_Event_Markers;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Trigger_1;                            // 0x00E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item_4;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ProcessLocalTrigger_Result;               // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CheckForStartSideQuest_IsSideQuestTrigger; // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x6];                                       // 0x00FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USideQuests_C*                          CallFunc_CheckForStartSideQuest_SideQuest;         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_Trigger;                              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Duration;                             // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_One_ReturnValue;                   // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Conv_VectorToTransform_ReturnValue;       // 0x0150(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATimeoutTrigger_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IQuestEventListener_C> CallFunc_SetListener_Listener_CastInput;           // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_ExecuteUbergraph_QuestManager) == 0x000010, "Wrong alignment on QuestManager_C_ExecuteUbergraph_QuestManager");
static_assert(sizeof(QuestManager_C_ExecuteUbergraph_QuestManager) == 0x0001E0, "Wrong size on QuestManager_C_ExecuteUbergraph_QuestManager");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, EntryPoint) == 0x000000, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::EntryPoint' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Less_IntInt_ReturnValue) == 0x000010, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_QuestID) == 0x000014, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_QuestID' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Get_Item) == 0x000018, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_CustomEvent_Player) == 0x000028, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Hint) == 0x000030, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Hint' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_CustomEvent_Hint) == 0x000040, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_CustomEvent_Hint' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_QuestEvent) == 0x000050, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_QuestEvent' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_CustomEvent_QuestID) == 0x000070, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_CustomEvent_QuestID' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_CompletedQuest) == 0x000078, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_CompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_IsCanSwitchToNextQuest_Result) == 0x000088, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_IsCanSwitchToNextQuest_Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_IsCanSwitchToNextQuest_NextIndex) == 0x00008C, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_IsCanSwitchToNextQuest_NextIndex' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Get_Item_2) == 0x000090, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, Temp_int_Array_Index_Variable) == 0x000098, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00009C, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Player) == 0x0000A0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_IsValid_ReturnValue_1) == 0x0000A8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000B0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Get_Item_3) == 0x0000B8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Length_ReturnValue_1) == 0x0000C0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Markers) == 0x0000C8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Markers' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000D8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, Temp_int_Array_Index_Variable_1) == 0x0000DC, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Trigger_1) == 0x0000E0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Trigger_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Array_Get_Item_4) == 0x0000F0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_ProcessLocalTrigger_Result) == 0x0000F8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_ProcessLocalTrigger_Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_CheckForStartSideQuest_IsSideQuestTrigger) == 0x0000F9, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_CheckForStartSideQuest_IsSideQuestTrigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_CheckForStartSideQuest_SideQuest) == 0x000100, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_CheckForStartSideQuest_SideQuest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Trigger) == 0x000118, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Trigger' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, K2Node_Event_Duration) == 0x000128, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::K2Node_Event_Duration' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Vector_One_ReturnValue) == 0x000130, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Vector_One_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, Temp_bool_True_if_break_was_hit_Variable) == 0x000148, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Conv_VectorToTransform_ReturnValue) == 0x000150, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Conv_VectorToTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0001B0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_Not_PreBool_ReturnValue) == 0x0001B8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001C0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_BooleanAND_ReturnValue) == 0x0001C8, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_ExecuteUbergraph_QuestManager, CallFunc_SetListener_Listener_CastInput) == 0x0001D0, "Member 'QuestManager_C_ExecuteUbergraph_QuestManager::CallFunc_SetListener_Listener_CastInput' has a wrong offset!");

// Function QuestManager.QuestManager_C.InitializeQuests
// 0x0158 (0x0158 - 0x0000)
struct QuestManager_C_InitializeQuests final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainQuests_C*                          CallFunc_SpawnObject_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USideQuests_C*                          CallFunc_SpawnObject_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSideQuestData                         CallFunc_Array_Get_Item;                           // 0x0030(0x0040)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuestData                             CallFunc_Array_Get_Item_1;                         // 0x0078(0x0058)(HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_CreateQuestByQuestData_Quest;             // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FQuestData                             CallFunc_Array_Get_Item_2;                         // 0x00E8(0x0058)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x7];                                      // 0x0141(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_CreateQuestByQuestData_Quest_1;           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_InitializeQuests) == 0x000008, "Wrong alignment on QuestManager_C_InitializeQuests");
static_assert(sizeof(QuestManager_C_InitializeQuests) == 0x000158, "Wrong size on QuestManager_C_InitializeQuests");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Array_Index_Variable) == 0x000000, "Member 'QuestManager_C_InitializeQuests::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'QuestManager_C_InitializeQuests::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'QuestManager_C_InitializeQuests::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'QuestManager_C_InitializeQuests::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_SpawnObject_ReturnValue) == 0x000010, "Member 'QuestManager_C_InitializeQuests::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'QuestManager_C_InitializeQuests::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Loop_Counter_Variable_1) == 0x00001C, "Member 'QuestManager_C_InitializeQuests::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_SpawnObject_ReturnValue_1) == 0x000020, "Member 'QuestManager_C_InitializeQuests::CallFunc_SpawnObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'QuestManager_C_InitializeQuests::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, Temp_int_Loop_Counter_Variable_2) == 0x00002C, "Member 'QuestManager_C_InitializeQuests::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Get_Item) == 0x000030, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'QuestManager_C_InitializeQuests::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_CreateQuestByQuestData_Quest) == 0x0000D0, "Member 'QuestManager_C_InitializeQuests::CallFunc_CreateQuestByQuestData_Quest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000DC, "Member 'QuestManager_C_InitializeQuests::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'QuestManager_C_InitializeQuests::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Length_ReturnValue_2) == 0x0000E4, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Get_Item_2) == 0x0000E8, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Less_IntInt_ReturnValue_2) == 0x000140, "Member 'QuestManager_C_InitializeQuests::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_CreateQuestByQuestData_Quest_1) == 0x000148, "Member 'QuestManager_C_InitializeQuests::CallFunc_CreateQuestByQuestData_Quest_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_InitializeQuests, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'QuestManager_C_InitializeQuests::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function QuestManager.QuestManager_C.InitManager
// 0x0008 (0x0008 - 0x0000)
struct QuestManager_C_InitManager final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_InitManager) == 0x000008, "Wrong alignment on QuestManager_C_InitManager");
static_assert(sizeof(QuestManager_C_InitManager) == 0x000008, "Wrong size on QuestManager_C_InitManager");
static_assert(offsetof(QuestManager_C_InitManager, Param_Player) == 0x000000, "Member 'QuestManager_C_InitManager::Param_Player' has a wrong offset!");

// Function QuestManager.QuestManager_C.IsCanSwitchToNextQuest
// 0x0020 (0x0020 - 0x0000)
struct QuestManager_C_IsCanSwitchToNextQuest final
{
public:
	class UQuestV2_C*                             CompletedQuest;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Result;                                            // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         NextIndex;                                         // 0x000C(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_IsCanSwitchToNextQuest) == 0x000008, "Wrong alignment on QuestManager_C_IsCanSwitchToNextQuest");
static_assert(sizeof(QuestManager_C_IsCanSwitchToNextQuest) == 0x000020, "Wrong size on QuestManager_C_IsCanSwitchToNextQuest");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, CompletedQuest) == 0x000000, "Member 'QuestManager_C_IsCanSwitchToNextQuest::CompletedQuest' has a wrong offset!");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, Result) == 0x000008, "Member 'QuestManager_C_IsCanSwitchToNextQuest::Result' has a wrong offset!");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, NextIndex) == 0x00000C, "Member 'QuestManager_C_IsCanSwitchToNextQuest::NextIndex' has a wrong offset!");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'QuestManager_C_IsCanSwitchToNextQuest::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'QuestManager_C_IsCanSwitchToNextQuest::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_IsCanSwitchToNextQuest, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'QuestManager_C_IsCanSwitchToNextQuest::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function QuestManager.QuestManager_C.OnCompleteCurrentQuest
// 0x0004 (0x0004 - 0x0000)
struct QuestManager_C_OnCompleteCurrentQuest final
{
public:
	int32                                         QuestID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_OnCompleteCurrentQuest) == 0x000004, "Wrong alignment on QuestManager_C_OnCompleteCurrentQuest");
static_assert(sizeof(QuestManager_C_OnCompleteCurrentQuest) == 0x000004, "Wrong size on QuestManager_C_OnCompleteCurrentQuest");
static_assert(offsetof(QuestManager_C_OnCompleteCurrentQuest, QuestID) == 0x000000, "Member 'QuestManager_C_OnCompleteCurrentQuest::QuestID' has a wrong offset!");

// Function QuestManager.QuestManager_C.OnPlayerDead
// 0x0008 (0x0008 - 0x0000)
struct QuestManager_C_OnPlayerDead final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_OnPlayerDead) == 0x000008, "Wrong alignment on QuestManager_C_OnPlayerDead");
static_assert(sizeof(QuestManager_C_OnPlayerDead) == 0x000008, "Wrong size on QuestManager_C_OnPlayerDead");
static_assert(offsetof(QuestManager_C_OnPlayerDead, Param_Player) == 0x000000, "Member 'QuestManager_C_OnPlayerDead::Param_Player' has a wrong offset!");

// Function QuestManager.QuestManager_C.OnQuestCompleted
// 0x0008 (0x0008 - 0x0000)
struct QuestManager_C_OnQuestCompleted final
{
public:
	class UQuestV2_C*                             CompletedQuest;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_OnQuestCompleted) == 0x000008, "Wrong alignment on QuestManager_C_OnQuestCompleted");
static_assert(sizeof(QuestManager_C_OnQuestCompleted) == 0x000008, "Wrong size on QuestManager_C_OnQuestCompleted");
static_assert(offsetof(QuestManager_C_OnQuestCompleted, CompletedQuest) == 0x000000, "Member 'QuestManager_C_OnQuestCompleted::CompletedQuest' has a wrong offset!");

// Function QuestManager.QuestManager_C.OnQuestEvent
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_C_OnQuestEvent final
{
public:
	class FString                                 QuestEvent;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_OnQuestEvent) == 0x000008, "Wrong alignment on QuestManager_C_OnQuestEvent");
static_assert(sizeof(QuestManager_C_OnQuestEvent) == 0x000010, "Wrong size on QuestManager_C_OnQuestEvent");
static_assert(offsetof(QuestManager_C_OnQuestEvent, QuestEvent) == 0x000000, "Member 'QuestManager_C_OnQuestEvent::QuestEvent' has a wrong offset!");

// Function QuestManager.QuestManager_C.OnQuestEventServerSide
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_C_OnQuestEventServerSide final
{
public:
	class FString                                 Trigger;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_OnQuestEventServerSide) == 0x000008, "Wrong alignment on QuestManager_C_OnQuestEventServerSide");
static_assert(sizeof(QuestManager_C_OnQuestEventServerSide) == 0x000010, "Wrong size on QuestManager_C_OnQuestEventServerSide");
static_assert(offsetof(QuestManager_C_OnQuestEventServerSide, Trigger) == 0x000000, "Member 'QuestManager_C_OnQuestEventServerSide::Trigger' has a wrong offset!");

// Function QuestManager.QuestManager_C.SetMarkers
// 0x0010 (0x0010 - 0x0000)
struct QuestManager_C_SetMarkers final
{
public:
	TArray<struct FVector>                        Markers;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(QuestManager_C_SetMarkers) == 0x000008, "Wrong alignment on QuestManager_C_SetMarkers");
static_assert(sizeof(QuestManager_C_SetMarkers) == 0x000010, "Wrong size on QuestManager_C_SetMarkers");
static_assert(offsetof(QuestManager_C_SetMarkers, Markers) == 0x000000, "Member 'QuestManager_C_SetMarkers::Markers' has a wrong offset!");

// Function QuestManager.QuestManager_C.SetPlayer
// 0x0078 (0x0078 - 0x0000)
struct QuestManager_C_SetPlayer final
{
public:
	class ASurvivalPlayer_C*                      Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USideQuests_C*>                  CallFunc_Map_Values_Values;                        // 0x0020(0x0010)(ReferenceParm)
	class USideQuests_C*                          CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UQuestV2_C*                             CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             CallFunc_Array_Get_Item_2;                         // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_SetPlayer) == 0x000008, "Wrong alignment on QuestManager_C_SetPlayer");
static_assert(sizeof(QuestManager_C_SetPlayer) == 0x000078, "Wrong size on QuestManager_C_SetPlayer");
static_assert(offsetof(QuestManager_C_SetPlayer, Param_Player) == 0x000000, "Member 'QuestManager_C_SetPlayer::Param_Player' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'QuestManager_C_SetPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'QuestManager_C_SetPlayer::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'QuestManager_C_SetPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'QuestManager_C_SetPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Array_Index_Variable_2) == 0x000018, "Member 'QuestManager_C_SetPlayer::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Map_Values_Values) == 0x000020, "Member 'QuestManager_C_SetPlayer::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Get_Item) == 0x000030, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Loop_Counter_Variable_1) == 0x00003C, "Member 'QuestManager_C_SetPlayer::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'QuestManager_C_SetPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'QuestManager_C_SetPlayer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Length_ReturnValue_1) == 0x000050, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, Temp_int_Loop_Counter_Variable_2) == 0x000054, "Member 'QuestManager_C_SetPlayer::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Less_IntInt_ReturnValue_1) == 0x000058, "Member 'QuestManager_C_SetPlayer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Add_IntInt_ReturnValue_2) == 0x00005C, "Member 'QuestManager_C_SetPlayer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Length_ReturnValue_2) == 0x000060, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Array_Get_Item_2) == 0x000068, "Member 'QuestManager_C_SetPlayer::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SetPlayer, CallFunc_Less_IntInt_ReturnValue_2) == 0x000070, "Member 'QuestManager_C_SetPlayer::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");

// Function QuestManager.QuestManager_C.SwitchCurrentQuest
// 0x0008 (0x0008 - 0x0000)
struct QuestManager_C_SwitchCurrentQuest final
{
public:
	class UQuestV2_C*                             Quest;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_SwitchCurrentQuest) == 0x000008, "Wrong alignment on QuestManager_C_SwitchCurrentQuest");
static_assert(sizeof(QuestManager_C_SwitchCurrentQuest) == 0x000008, "Wrong size on QuestManager_C_SwitchCurrentQuest");
static_assert(offsetof(QuestManager_C_SwitchCurrentQuest, Quest) == 0x000000, "Member 'QuestManager_C_SwitchCurrentQuest::Quest' has a wrong offset!");

// Function QuestManager.QuestManager_C.SwitchQuestClientSide
// 0x0004 (0x0004 - 0x0000)
struct QuestManager_C_SwitchQuestClientSide final
{
public:
	int32                                         QuestID;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_SwitchQuestClientSide) == 0x000004, "Wrong alignment on QuestManager_C_SwitchQuestClientSide");
static_assert(sizeof(QuestManager_C_SwitchQuestClientSide) == 0x000004, "Wrong size on QuestManager_C_SwitchQuestClientSide");
static_assert(offsetof(QuestManager_C_SwitchQuestClientSide, QuestID) == 0x000000, "Member 'QuestManager_C_SwitchQuestClientSide::QuestID' has a wrong offset!");

// Function QuestManager.QuestManager_C.SwitchToSideQuest
// 0x0018 (0x0018 - 0x0000)
struct QuestManager_C_SwitchToSideQuest final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	class USideQuests_C*                          SideQuest;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(QuestManager_C_SwitchToSideQuest) == 0x000008, "Wrong alignment on QuestManager_C_SwitchToSideQuest");
static_assert(sizeof(QuestManager_C_SwitchToSideQuest) == 0x000018, "Wrong size on QuestManager_C_SwitchToSideQuest");
static_assert(offsetof(QuestManager_C_SwitchToSideQuest, ID) == 0x000000, "Member 'QuestManager_C_SwitchToSideQuest::ID' has a wrong offset!");
static_assert(offsetof(QuestManager_C_SwitchToSideQuest, SideQuest) == 0x000010, "Member 'QuestManager_C_SwitchToSideQuest::SideQuest' has a wrong offset!");

}

