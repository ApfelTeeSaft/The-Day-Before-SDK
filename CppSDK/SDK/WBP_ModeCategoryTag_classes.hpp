#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ModeCategoryTag

#include "Basic.hpp"

#include "AttachmentInfo_structs.hpp"
#include "E_TypesOfModes_structs.hpp"
#include "Engine_structs.hpp"
#include "FItemInfo_structs.hpp"
#include "WE_WorkbenchCategoryType_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_AttachmentDependencyTypes_structs.hpp"
#include "BPS_SupportedAttachments_structs.hpp"
#include "S_AttachmentDependencyV2_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "E_DependenciesRule_structs.hpp"
#include "WE_MessageTypes_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ModeCategoryTag.WBP_ModeCategoryTag_C
// 0x06F0 (0x0970 - 0x0280)
class UWBP_ModeCategoryTag_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Anim_Select;                                       // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ChangeModifierName;                                // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ShowNewModifierName;                               // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       HideOldModifierName;                               // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       TagSelected;                                       // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleLinkFocus;                                   // 0x02B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleLink;                                        // 0x02B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       ToggleWidget;                                      // 0x02C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Empty;                                        // 0x02C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Anim_Hover;                                        // 0x02D0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_AttachmentTag;                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UButton*                                Button_Tag;                                        // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_174;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BackgroundNormal;                            // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemBG_Default;                              // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_ItemBG_Selected;                             // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_HoverCell;                                 // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Tag;                                          // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TextBlock_Category;                                // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWidgetSwitcher*                        WidgetSwitcher_1;                                  // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnPressedTag;                                      // 0x0328(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnReleasedTag;                                     // 0x0338(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class FText                                   ButtonText;                                        // 0x0348(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	bool                                          Focused;                                           // 0x0360(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Selected;                                          // 0x0361(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_362[0x2];                                      // 0x0362(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ButtonIndex;                                       // 0x0364(0x0004)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EWE_WorkbenchCategoryType                     CategoryType;                                      // 0x0368(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	E_TypesOfModes                                ModeType;                                          // 0x0369(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Linked;                                            // 0x036A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Active;                                            // 0x036B(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          VisibilityWidget;                                  // 0x036C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36D[0x3];                                      // 0x036D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFItemInfo                             Item;                                              // 0x0370(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	TArray<struct FFItemInfo>                     Items;                                             // 0x0590(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FFItemInfo>                     Attachments;                                       // 0x05A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	TArray<struct FBPS_SupportedAttachments>      SupportedAttachments;                              // 0x05B0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAttachmentInfo>                DefaultSpecialAttachments;                         // 0x05C0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<struct FAttachmentInfo>                SpecialAttachments;                                // 0x05D0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	struct FFItemInfo                             ActiveItem__Attachment_;                           // 0x05E0(0x0220)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference, HasGetValueTypeHash)
	struct FAttachmentInfo                        DefaultAttachment;                                 // 0x0800(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUserWidget*                            OwnerWidget;                                       // 0x0810(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           EmptyBackgroundColor;                              // 0x0818(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FLinearColor                           DefaultBackgroundColor;                            // 0x0828(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          SupportedBaseAttachment;                           // 0x0838(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UDataTable*                             DataTableDependencies;                             // 0x0840(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	E_AttachmentDependencyTypes                   TypeOfDependency;                                  // 0x0848(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_AttachmentDependencyTypes                   CurrentTypeOfDependency;                           // 0x0849(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84A[0x6];                                      // 0x084A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<E_TypesOfModes>                        Dependencies;                                      // 0x0850(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	class UFMODEvent*                             FMODAttachEvent;                                   // 0x0860(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             FMODDetachEvent;                                   // 0x0868(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UFMODEvent*                             FMODPressedEvent;                                  // 0x0870(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UFMODEvent*                             FMODHoveredEvent;                                  // 0x0878(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 ListOfNameItems;                                   // 0x0880(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          SupportedSpecialAttachments;                       // 0x0890(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_891[0x7];                                      // 0x0891(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnClickedTag;                                      // 0x0898(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	FMulticastInlineDelegateProperty_             OnHoverTag;                                        // 0x08A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         PositionDefaultAttachment;                         // 0x08B8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnUnHoverTag;                                      // 0x08C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          SelectedTag;                                       // 0x08D0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnReleasedBack;                                    // 0x08D8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UDataTable*                             DataTableDependenciesV2;                           // 0x08E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TMap<int32, struct FS_AttachmentDependencyV2> ListOfNameItemsV2;                                 // 0x08F0(0x0050)(Edit, BlueprintVisible, DisableEditOnInstance)
	class FText                                   ButtonTextCategory;                                // 0x0940(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	bool                                          bIsSlotActive;                                     // 0x0958(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bCustomLock;                                       // 0x0959(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95A[0x6];                                      // 0x095A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             OnContentUpdated;                                  // 0x0960(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void BndEvt__WBP_ModeCategoryTag_Button_453_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_453_K2Node_ComponentBoundEvent_5_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_AttachmentTag_K2Node_ComponentBoundEvent_13_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_AttachmentTag_K2Node_ComponentBoundEvent_8_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_Tag_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_Tag_K2Node_ComponentBoundEvent_1_OnButtonPressedEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_Tag_K2Node_ComponentBoundEvent_2_OnButtonReleasedEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_Tag_K2Node_ComponentBoundEvent_3_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_ModeCategoryTag_Button_Tag_K2Node_ComponentBoundEvent_4_OnButtonHoverEvent__DelegateSignature();
	void DisableSelectedTag();
	void ExecuteUbergraph_WBP_ModeCategoryTag(int32 EntryPoint);
	void GetActiveAttachment(bool* Result, struct FFItemInfo* Param_Item);
	void GetActiveItem__Attachment_(bool* Result, struct FFItemInfo* Param_Item);
	void GetAttachments(bool* Empty, TArray<struct FFItemInfo>* Param_Attachments);
	void GetAttachmentsInItem(const struct FFItemInfo& InItem, bool* Result, struct FFItemInfo* OutItem);
	void GetBaseAttachment(bool* Result, struct FAttachmentInfo* Attchment);
	void GetButtonIndex(int32* Param_Index);
	void GetButtonLinked(bool* Param_Linked);
	void GetButtonSelected(bool* Param_Selected);
	void GetButtonText(class FText* Text);
	void GetCategoryType(EWE_WorkbenchCategoryType* Param_CategoryType);
	void GetCurrentTypeOfDependency(E_AttachmentDependencyTypes* Type);
	void GetCustomLock(bool* Param_bCustomLock);
	void GetDefaultAttachment(bool* Result, struct FAttachmentInfo* Attachment);
	void GetDefaultAttachmentForItem(const struct FFItemInfo& Param_Item, E_TypesOfModes FilteredType, bool* Result, struct FAttachmentInfo* Attachment);
	void GetDefaultSpecailAttachments(bool* Result, TArray<struct FAttachmentInfo>* Attachment);
	void GetDependencies(TArray<E_TypesOfModes>* Dependency);
	void GetDependenciesRule(E_TypesOfModes Dependency, E_DependenciesRule* Rule, bool* Enabled);
	void GetDependencyAttachment(E_TypesOfModes* Result, struct FFItemInfo* Param_Item, E_DependenciesRule* Rule);
	void GetFMODAttachEvent(class UFMODEvent** Event);
	void GetFMODDetachEvent(class UFMODEvent** Event);
	void GetItem(struct FFItemInfo* Param_Item);
	void GetItemNames(TArray<int32>* Dependency);
	void GetLocked(bool* Locked);
	void GetModeType(E_TypesOfModes* Type);
	void GetSpecailAttachments(bool* Result, TArray<struct FAttachmentInfo>* Attachment);
	void GetSpecailAttachmentsForItem(const struct FFItemInfo& Param_Item, bool* Result, TArray<struct FAttachmentInfo>* Param_SpecialAttachments, TArray<struct FAttachmentInfo>* DefaultAttachments);
	void GetTypeOfDependency(E_AttachmentDependencyTypes* DependencyType);
	void IsEmptyAttachmentsList(bool* Result);
	void IsEmptySupportedAttachmentsList(bool* Result);
	void IsValidAttachment(const struct FAttachmentInfo& Attachment, bool* Result);
	void OnClickedTag__DelegateSignature();
	void OnContentUpdated__DelegateSignature();
	void Soft_(const struct FFItemInfo& Param_Item);
	void OnFocus(bool NewState);
	void OnHoverTag__DelegateSignature();
	void OnLink(bool NewState);
	void OnLoadDependencies(bool* Result);
	void OnLockOperation(double Duration, bool Lock);
	void OnPlayAnimation(class UWidgetAnimation* Animation, bool NewState, bool ToEnd);
	void OnPlaySound(class UFMODEvent* FMODEvent);
	void OnPressedTag__DelegateSignature(int32 Param_Index, class UUserWidget* UserWidget);
	void OnPushMessage(EWE_MessageTypes Type, const class FText& Text, double Duration);
	void OnReleasedBack__DelegateSignature();
	void OnReleasedTag__DelegateSignature(int32 Param_Index, class UUserWidget* UserWidget);
	void OnResetAvailablePlayChangeSlotAnimation();
	void OnSelect(bool NewState);
	void OnSetAttachmentTitle();
	void OnToggleBackgroundColor(bool NewState);
	void OnUnHoverTag__DelegateSignature();
	void OnUpdate(const struct FFItemInfo& Param_Item, TArray<struct FFItemInfo>& Param_Items, class UUserWidget* UserWidget, bool WithoutAnimation, bool SameModeType, bool* Result);
	void OnUpdateAttachments(const struct FFItemInfo& NewItem);
	void OnUpdateAttahmentsList();
	void OnUpdateContents();
	void OnUpdateVisibilityWidget(const struct FFItemInfo& Param_Item, bool WithoutAnimation, bool SameModeType);
	void OnValidateAttachment(const struct FFItemInfo& InItem, bool* Result, struct FFItemInfo* OutItem);
	void OnValidateCategory(const struct FFItemInfo& Param_Item, bool* Result, TArray<struct FBPS_SupportedAttachments>* Param_SupportedAttachments);
	void OnValidateDependencies(const struct FFItemInfo& Param_Item, bool NotDefault, bool* Result);
	void PreConstruct(bool IsDesignTime);
	void PrintDebug__Items_(double Duration, TArray<struct FFItemInfo>& Items_1, TArray<struct FFItemInfo>& Items_2);
	void RevalidateAttachments();
	void Set_Image_Attachment(class UObject* Image);
	void SetButtonLink(bool NewState);
	void SetButtonSelect(bool NewState);
	void SetCustomLock(bool Lock);
	void SetItemReference(const struct FFItemInfo& Param_Item);
	void SetItemsReference(TArray<struct FFItemInfo>& Param_Items);
	void SetOwnerWidgetReference(class UUserWidget* UserWidget);
	void SetPositionActiveAttachment(int32 NewPosition);
	void SetVisibilityWidget(bool NewVisibility, bool WithoutAnimation);
	void StartEquip(const struct FFItemInfo& WeaponInfo, const TArray<struct FFItemInfo>& Param_Items, class UUserWidget* MainWeaponTab, bool WithoutAnimation, class UWBP_AttachmentsSelector_C* AttachmentSelectorWidget, class ABP_CraftStation_C* CraftStation, E_TypesOfModes Param_ModeType);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ModeCategoryTag_C">();
	}
	static class UWBP_ModeCategoryTag_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ModeCategoryTag_C>();
	}
};
static_assert(alignof(UWBP_ModeCategoryTag_C) == 0x000008, "Wrong alignment on UWBP_ModeCategoryTag_C");
static_assert(sizeof(UWBP_ModeCategoryTag_C) == 0x000970, "Wrong size on UWBP_ModeCategoryTag_C");
static_assert(offsetof(UWBP_ModeCategoryTag_C, UberGraphFrame) == 0x000280, "Member 'UWBP_ModeCategoryTag_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Anim_Select) == 0x000288, "Member 'UWBP_ModeCategoryTag_C::Anim_Select' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ChangeModifierName) == 0x000290, "Member 'UWBP_ModeCategoryTag_C::ChangeModifierName' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ShowNewModifierName) == 0x000298, "Member 'UWBP_ModeCategoryTag_C::ShowNewModifierName' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, HideOldModifierName) == 0x0002A0, "Member 'UWBP_ModeCategoryTag_C::HideOldModifierName' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, TagSelected) == 0x0002A8, "Member 'UWBP_ModeCategoryTag_C::TagSelected' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ToggleLinkFocus) == 0x0002B0, "Member 'UWBP_ModeCategoryTag_C::ToggleLinkFocus' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ToggleLink) == 0x0002B8, "Member 'UWBP_ModeCategoryTag_C::ToggleLink' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ToggleWidget) == 0x0002C0, "Member 'UWBP_ModeCategoryTag_C::ToggleWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Anim_Empty) == 0x0002C8, "Member 'UWBP_ModeCategoryTag_C::Anim_Empty' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Anim_Hover) == 0x0002D0, "Member 'UWBP_ModeCategoryTag_C::Anim_Hover' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Button_AttachmentTag) == 0x0002D8, "Member 'UWBP_ModeCategoryTag_C::Button_AttachmentTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Button_Tag) == 0x0002E0, "Member 'UWBP_ModeCategoryTag_C::Button_Tag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Image_174) == 0x0002E8, "Member 'UWBP_ModeCategoryTag_C::Image_174' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Image_BackgroundNormal) == 0x0002F0, "Member 'UWBP_ModeCategoryTag_C::Image_BackgroundNormal' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Image_ItemBG_Default) == 0x0002F8, "Member 'UWBP_ModeCategoryTag_C::Image_ItemBG_Default' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Image_ItemBG_Selected) == 0x000300, "Member 'UWBP_ModeCategoryTag_C::Image_ItemBG_Selected' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Overlay_HoverCell) == 0x000308, "Member 'UWBP_ModeCategoryTag_C::Overlay_HoverCell' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Text_Tag) == 0x000310, "Member 'UWBP_ModeCategoryTag_C::Text_Tag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, TextBlock_Category) == 0x000318, "Member 'UWBP_ModeCategoryTag_C::TextBlock_Category' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, WidgetSwitcher_1) == 0x000320, "Member 'UWBP_ModeCategoryTag_C::WidgetSwitcher_1' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnPressedTag) == 0x000328, "Member 'UWBP_ModeCategoryTag_C::OnPressedTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnReleasedTag) == 0x000338, "Member 'UWBP_ModeCategoryTag_C::OnReleasedTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ButtonText) == 0x000348, "Member 'UWBP_ModeCategoryTag_C::ButtonText' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Focused) == 0x000360, "Member 'UWBP_ModeCategoryTag_C::Focused' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Selected) == 0x000361, "Member 'UWBP_ModeCategoryTag_C::Selected' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ButtonIndex) == 0x000364, "Member 'UWBP_ModeCategoryTag_C::ButtonIndex' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, CategoryType) == 0x000368, "Member 'UWBP_ModeCategoryTag_C::CategoryType' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ModeType) == 0x000369, "Member 'UWBP_ModeCategoryTag_C::ModeType' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Linked) == 0x00036A, "Member 'UWBP_ModeCategoryTag_C::Linked' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Active) == 0x00036B, "Member 'UWBP_ModeCategoryTag_C::Active' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, VisibilityWidget) == 0x00036C, "Member 'UWBP_ModeCategoryTag_C::VisibilityWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Item) == 0x000370, "Member 'UWBP_ModeCategoryTag_C::Item' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Items) == 0x000590, "Member 'UWBP_ModeCategoryTag_C::Items' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Attachments) == 0x0005A0, "Member 'UWBP_ModeCategoryTag_C::Attachments' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, SupportedAttachments) == 0x0005B0, "Member 'UWBP_ModeCategoryTag_C::SupportedAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, DefaultSpecialAttachments) == 0x0005C0, "Member 'UWBP_ModeCategoryTag_C::DefaultSpecialAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, SpecialAttachments) == 0x0005D0, "Member 'UWBP_ModeCategoryTag_C::SpecialAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ActiveItem__Attachment_) == 0x0005E0, "Member 'UWBP_ModeCategoryTag_C::ActiveItem__Attachment_' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, DefaultAttachment) == 0x000800, "Member 'UWBP_ModeCategoryTag_C::DefaultAttachment' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OwnerWidget) == 0x000810, "Member 'UWBP_ModeCategoryTag_C::OwnerWidget' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, EmptyBackgroundColor) == 0x000818, "Member 'UWBP_ModeCategoryTag_C::EmptyBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, DefaultBackgroundColor) == 0x000828, "Member 'UWBP_ModeCategoryTag_C::DefaultBackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, SupportedBaseAttachment) == 0x000838, "Member 'UWBP_ModeCategoryTag_C::SupportedBaseAttachment' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, DataTableDependencies) == 0x000840, "Member 'UWBP_ModeCategoryTag_C::DataTableDependencies' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, TypeOfDependency) == 0x000848, "Member 'UWBP_ModeCategoryTag_C::TypeOfDependency' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, CurrentTypeOfDependency) == 0x000849, "Member 'UWBP_ModeCategoryTag_C::CurrentTypeOfDependency' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, Dependencies) == 0x000850, "Member 'UWBP_ModeCategoryTag_C::Dependencies' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, FMODAttachEvent) == 0x000860, "Member 'UWBP_ModeCategoryTag_C::FMODAttachEvent' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, FMODDetachEvent) == 0x000868, "Member 'UWBP_ModeCategoryTag_C::FMODDetachEvent' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, FMODPressedEvent) == 0x000870, "Member 'UWBP_ModeCategoryTag_C::FMODPressedEvent' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, FMODHoveredEvent) == 0x000878, "Member 'UWBP_ModeCategoryTag_C::FMODHoveredEvent' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ListOfNameItems) == 0x000880, "Member 'UWBP_ModeCategoryTag_C::ListOfNameItems' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, SupportedSpecialAttachments) == 0x000890, "Member 'UWBP_ModeCategoryTag_C::SupportedSpecialAttachments' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnClickedTag) == 0x000898, "Member 'UWBP_ModeCategoryTag_C::OnClickedTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnHoverTag) == 0x0008A8, "Member 'UWBP_ModeCategoryTag_C::OnHoverTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, PositionDefaultAttachment) == 0x0008B8, "Member 'UWBP_ModeCategoryTag_C::PositionDefaultAttachment' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnUnHoverTag) == 0x0008C0, "Member 'UWBP_ModeCategoryTag_C::OnUnHoverTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, SelectedTag) == 0x0008D0, "Member 'UWBP_ModeCategoryTag_C::SelectedTag' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnReleasedBack) == 0x0008D8, "Member 'UWBP_ModeCategoryTag_C::OnReleasedBack' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, DataTableDependenciesV2) == 0x0008E8, "Member 'UWBP_ModeCategoryTag_C::DataTableDependenciesV2' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ListOfNameItemsV2) == 0x0008F0, "Member 'UWBP_ModeCategoryTag_C::ListOfNameItemsV2' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, ButtonTextCategory) == 0x000940, "Member 'UWBP_ModeCategoryTag_C::ButtonTextCategory' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, bIsSlotActive) == 0x000958, "Member 'UWBP_ModeCategoryTag_C::bIsSlotActive' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, bCustomLock) == 0x000959, "Member 'UWBP_ModeCategoryTag_C::bCustomLock' has a wrong offset!");
static_assert(offsetof(UWBP_ModeCategoryTag_C, OnContentUpdated) == 0x000960, "Member 'UWBP_ModeCategoryTag_C::OnContentUpdated' has a wrong offset!");

}

