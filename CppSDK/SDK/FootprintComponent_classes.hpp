#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: FootprintComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EFootState_structs.hpp"
#include "EFootprintStyle_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass FootprintComponent.FootprintComponent_C
// 0x00C8 (0x0168 - 0x00A0)
class UFootprintComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        Mesh;                                              // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EFootprintStyle                               CurrentFootwear;                                   // 0x00B0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EFootState                                    FootState;                                         // 0x00B1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MaxMudSteps;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMudSteps;                                   // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSandSteps;                                      // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSandSteps;                                  // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Left;                                              // 0x00D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Right;                                             // 0x00D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA[0x6];                                       // 0x00DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Location;                                          // 0x00E0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Rotation;                                          // 0x00F8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	double                                        MaxWetSteps;                                       // 0x0110(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentWetSteps;                                   // 0x0118(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxBloodSteps;                                     // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentBloodSteps;                                 // 0x0128(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMulticastSteps;                             // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentMaxSteps;                                   // 0x0138(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AFootprint_Actor_C*                     FootprintActor;                                    // 0x0140(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstance*                      Decal;                                             // 0x0148(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentSnowSteps;                                  // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxSnowSteps;                                      // 0x0158(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDeep;                                            // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ChangeFootState(EFootState New_Style);
	void ExecuteUbergraph_FootprintComponent(int32 EntryPoint);
	void MulticastFootprintMaterial(class UMaterialInstance* Decal_Material, double CurrentSteps, double MaxSteps, const struct FVector& Param_Location, const struct FRotator& Param_Rotation, bool DeepDecal);
	void ServerSpawnFootprint(const struct FVector& Param_Location, const struct FRotator& Param_Rotation, class UMaterialInstance* Decal_Material, double Current_Steps, double MaxSteps, bool DeepDecal);
	void SpawnFootprint(const struct FVector& Param_Location, const struct FRotator& Param_Rotation, bool Param_Left, bool Param_Right, EPhysicalSurface SurfaceType);
	void SpawnFootprintDecal(class FName SocketName, bool Param_Right, bool Param_Left);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"FootprintComponent_C">();
	}
	static class UFootprintComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UFootprintComponent_C>();
	}
};
static_assert(alignof(UFootprintComponent_C) == 0x000008, "Wrong alignment on UFootprintComponent_C");
static_assert(sizeof(UFootprintComponent_C) == 0x000168, "Wrong size on UFootprintComponent_C");
static_assert(offsetof(UFootprintComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UFootprintComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Mesh) == 0x0000A8, "Member 'UFootprintComponent_C::Mesh' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentFootwear) == 0x0000B0, "Member 'UFootprintComponent_C::CurrentFootwear' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, FootState) == 0x0000B1, "Member 'UFootprintComponent_C::FootState' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, MaxMudSteps) == 0x0000B8, "Member 'UFootprintComponent_C::MaxMudSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentMudSteps) == 0x0000C0, "Member 'UFootprintComponent_C::CurrentMudSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, MaxSandSteps) == 0x0000C8, "Member 'UFootprintComponent_C::MaxSandSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentSandSteps) == 0x0000D0, "Member 'UFootprintComponent_C::CurrentSandSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Left) == 0x0000D8, "Member 'UFootprintComponent_C::Left' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Right) == 0x0000D9, "Member 'UFootprintComponent_C::Right' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Location) == 0x0000E0, "Member 'UFootprintComponent_C::Location' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Rotation) == 0x0000F8, "Member 'UFootprintComponent_C::Rotation' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, MaxWetSteps) == 0x000110, "Member 'UFootprintComponent_C::MaxWetSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentWetSteps) == 0x000118, "Member 'UFootprintComponent_C::CurrentWetSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, MaxBloodSteps) == 0x000120, "Member 'UFootprintComponent_C::MaxBloodSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentBloodSteps) == 0x000128, "Member 'UFootprintComponent_C::CurrentBloodSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentMulticastSteps) == 0x000130, "Member 'UFootprintComponent_C::CurrentMulticastSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentMaxSteps) == 0x000138, "Member 'UFootprintComponent_C::CurrentMaxSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, FootprintActor) == 0x000140, "Member 'UFootprintComponent_C::FootprintActor' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, Decal) == 0x000148, "Member 'UFootprintComponent_C::Decal' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, CurrentSnowSteps) == 0x000150, "Member 'UFootprintComponent_C::CurrentSnowSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, MaxSnowSteps) == 0x000158, "Member 'UFootprintComponent_C::MaxSnowSteps' has a wrong offset!");
static_assert(offsetof(UFootprintComponent_C, IsDeep) == 0x000160, "Member 'UFootprintComponent_C::IsDeep' has a wrong offset!");

}

