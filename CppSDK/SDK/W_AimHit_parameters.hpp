#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_AimHit

#include "Basic.hpp"


namespace SDK::Params
{

// Function W_AimHit.W_AimHit_C.ExecuteUbergraph_W_AimHit
// 0x0028 (0x0028 - 0x0000)
struct W_AimHit_C_ExecuteUbergraph_W_AimHit final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue_1;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AimHit_C_ExecuteUbergraph_W_AimHit) == 0x000008, "Wrong alignment on W_AimHit_C_ExecuteUbergraph_W_AimHit");
static_assert(sizeof(W_AimHit_C_ExecuteUbergraph_W_AimHit) == 0x000028, "Wrong size on W_AimHit_C_ExecuteUbergraph_W_AimHit");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, EntryPoint) == 0x000000, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::EntryPoint' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, CallFunc_PlayAnimation_ReturnValue) == 0x000008, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000010, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, CallFunc_PlayAnimation_ReturnValue_1) == 0x000018, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, CallFunc_IsAnimationPlaying_ReturnValue_1) == 0x000020, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::CallFunc_IsAnimationPlaying_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_ExecuteUbergraph_W_AimHit, CallFunc_Not_PreBool_ReturnValue) == 0x000021, "Member 'W_AimHit_C_ExecuteUbergraph_W_AimHit::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function W_AimHit.W_AimHit_C.SetRotated
// 0x0030 (0x0030 - 0x0000)
struct W_AimHit_C_SetRotated final
{
public:
	bool                                          IsRotated;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1; // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2; // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(W_AimHit_C_SetRotated) == 0x000008, "Wrong alignment on W_AimHit_C_SetRotated");
static_assert(sizeof(W_AimHit_C_SetRotated) == 0x000030, "Wrong size on W_AimHit_C_SetRotated");
static_assert(offsetof(W_AimHit_C_SetRotated, IsRotated) == 0x000000, "Member 'W_AimHit_C_SetRotated::IsRotated' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, Temp_bool_Variable) == 0x000001, "Member 'W_AimHit_C_SetRotated::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, Temp_real_Variable) == 0x000008, "Member 'W_AimHit_C_SetRotated::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, Temp_real_Variable_1) == 0x000010, "Member 'W_AimHit_C_SetRotated::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, K2Node_Select_Default) == 0x000018, "Member 'W_AimHit_C_SetRotated::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast) == 0x000020, "Member 'W_AimHit_C_SetRotated::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1) == 0x000024, "Member 'W_AimHit_C_SetRotated::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(W_AimHit_C_SetRotated, CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2) == 0x000028, "Member 'W_AimHit_C_SetRotated::CallFunc_SetRenderTransformAngle_Angle_ImplicitCast_2' has a wrong offset!");

}

