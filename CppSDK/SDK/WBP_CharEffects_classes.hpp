#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_CharEffects

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Survival_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_CharEffects.WBP_CharEffects_C
// 0x0090 (0x0310 - 0x0280)
class UWBP_CharEffects_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_183;                                        // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_BGIcon;                                      // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Icon;                                        // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Description;                                  // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_Name;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          IsPerk_;                                           // 0x02B8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Text_Name_0;                                       // 0x02C0(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class FText                                   Text_Description_0;                                // 0x02D8(0x0018)(Edit, BlueprintVisible, BlueprintReadOnly, ExposeOnSpawn)
	class UPaperSprite*                           Image_Icon_0;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          PositivePerk_;                                     // 0x02F8(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBPC_NegativeEffects_C*                 BPC_Negative_Effects;                              // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EUNegativeEffectType                          EffectType;                                        // 0x0308(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void BindToEffectChange(class APawn* OldPawn, class APawn* NewPawn);
	void BndEvt__WBP_CharEffects_Button_183_K2Node_ComponentBoundEvent_0_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_CharEffects_Button_183_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void ExecuteUbergraph_WBP_CharEffects(int32 EntryPoint);
	void Init();
	void PreConstruct(bool IsDesignTime);
	void Show_Effect(bool On_, EUNegativeEffectType Param_EffectType);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_CharEffects_C">();
	}
	static class UWBP_CharEffects_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_CharEffects_C>();
	}
};
static_assert(alignof(UWBP_CharEffects_C) == 0x000008, "Wrong alignment on UWBP_CharEffects_C");
static_assert(sizeof(UWBP_CharEffects_C) == 0x000310, "Wrong size on UWBP_CharEffects_C");
static_assert(offsetof(UWBP_CharEffects_C, UberGraphFrame) == 0x000280, "Member 'UWBP_CharEffects_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Hover) == 0x000288, "Member 'UWBP_CharEffects_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Button_183) == 0x000290, "Member 'UWBP_CharEffects_C::Button_183' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Image_BGIcon) == 0x000298, "Member 'UWBP_CharEffects_C::Image_BGIcon' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Image_Icon) == 0x0002A0, "Member 'UWBP_CharEffects_C::Image_Icon' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Text_Description) == 0x0002A8, "Member 'UWBP_CharEffects_C::Text_Description' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Text_Name) == 0x0002B0, "Member 'UWBP_CharEffects_C::Text_Name' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, IsPerk_) == 0x0002B8, "Member 'UWBP_CharEffects_C::IsPerk_' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Text_Name_0) == 0x0002C0, "Member 'UWBP_CharEffects_C::Text_Name_0' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Text_Description_0) == 0x0002D8, "Member 'UWBP_CharEffects_C::Text_Description_0' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, Image_Icon_0) == 0x0002F0, "Member 'UWBP_CharEffects_C::Image_Icon_0' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, PositivePerk_) == 0x0002F8, "Member 'UWBP_CharEffects_C::PositivePerk_' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, BPC_Negative_Effects) == 0x000300, "Member 'UWBP_CharEffects_C::BPC_Negative_Effects' has a wrong offset!");
static_assert(offsetof(UWBP_CharEffects_C, EffectType) == 0x000308, "Member 'UWBP_CharEffects_C::EffectType' has a wrong offset!");

}

