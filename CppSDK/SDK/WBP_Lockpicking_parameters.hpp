#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Lockpicking

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "InputCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function WBP_Lockpicking.WBP_Lockpicking_C.ExecuteUbergraph_WBP_Lockpicking
// 0x01A0 (0x01A0 - 0x0000)
struct WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLockpickNum_Num;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0028(0x0038)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue;                    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsHovered_ReturnValue_1;                  // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66[0x2];                                       // 0x0066(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              CallFunc_GetViewportWidgetGeometry_ReturnValue;    // 0x0068(0x0038)(IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue;                 // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetLocalSize_ReturnValue_1;               // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_2;                     // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_3;                     // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetLockpickNum_Num_1;                     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x0150(0x0018)()
	class UUMGSequencePlayer*                     CallFunc_PlayAnimationForward_ReturnValue;         // 0x0168(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking) == 0x000008, "Wrong alignment on WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking");
static_assert(sizeof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking) == 0x0001A0, "Wrong size on WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, EntryPoint) == 0x000000, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetLockpickNum_Num) == 0x000004, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetLockpickNum_Num' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_Event_MyGeometry) == 0x000028, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_Event_InDeltaTime) == 0x000060, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_IsHovered_ReturnValue) == 0x000064, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_IsHovered_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_IsHovered_ReturnValue_1) == 0x000065, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_IsHovered_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetViewportWidgetGeometry_ReturnValue) == 0x000068, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetViewportWidgetGeometry_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetLocalSize_ReturnValue) == 0x0000A0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetLocalSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetLocalSize_ReturnValue_1) == 0x0000B0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetLocalSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_X) == 0x0000C0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_Y) == 0x0000C8, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_X_1) == 0x0000D0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_Y_1) == 0x0000D8, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_MakeVector2D_ReturnValue) == 0x0000F0, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000100, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_MakeVector2D_ReturnValue_1) == 0x000108, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_X_2) == 0x000118, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_Y_2) == 0x000120, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_X_3) == 0x000128, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_BreakVector2D_Y_3) == 0x000130, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_FTrunc_ReturnValue) == 0x000138, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_FTrunc_ReturnValue_1) == 0x00013C, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_FTrunc_ReturnValue_2) == 0x000140, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_FTrunc_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_FTrunc_ReturnValue_3) == 0x000144, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_FTrunc_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetLockpickNum_Num_1) == 0x000148, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetLockpickNum_Num_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_Conv_IntToText_ReturnValue_1) == 0x000150, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_PlayAnimationForward_ReturnValue) == 0x000168, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_PlayAnimationForward_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetPlayerController_ReturnValue) == 0x000170, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_DynamicCast_AsSurv_PC) == 0x000178, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000188, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_DynamicCast_AsSurvival_Player) == 0x000190, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'WBP_Lockpicking_C_ExecuteUbergraph_WBP_Lockpicking::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.GetLockpickNum
// 0x000C (0x000C - 0x0000)
struct WBP_Lockpicking_C_GetLockpickNum final
{
public:
	int32                                         Num;                                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemCountByName_ReturnedCount;         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_GetLockpickNum) == 0x000004, "Wrong alignment on WBP_Lockpicking_C_GetLockpickNum");
static_assert(sizeof(WBP_Lockpicking_C_GetLockpickNum) == 0x00000C, "Wrong size on WBP_Lockpicking_C_GetLockpickNum");
static_assert(offsetof(WBP_Lockpicking_C_GetLockpickNum, Num) == 0x000000, "Member 'WBP_Lockpicking_C_GetLockpickNum::Num' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_GetLockpickNum, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'WBP_Lockpicking_C_GetLockpickNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_GetLockpickNum, CallFunc_GetItemCountByName_ReturnedCount) == 0x000008, "Member 'WBP_Lockpicking_C_GetLockpickNum::CallFunc_GetItemCountByName_ReturnedCount' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.OnKeyDown
// 0x0208 (0x0208 - 0x0000)
struct WBP_Lockpicking_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0130(0x00B8)()
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x01E8(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_OnKeyDown) == 0x000008, "Wrong alignment on WBP_Lockpicking_C_OnKeyDown");
static_assert(sizeof(WBP_Lockpicking_C_OnKeyDown) == 0x000208, "Wrong size on WBP_Lockpicking_C_OnKeyDown");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'WBP_Lockpicking_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'WBP_Lockpicking_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'WBP_Lockpicking_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000130, "Member 'WBP_Lockpicking_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x0001E8, "Member 'WBP_Lockpicking_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000200, "Member 'WBP_Lockpicking_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.OnMouseButtonDown
// 0x0228 (0x0228 - 0x0000)
struct WBP_Lockpicking_C_OnMouseButtonDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0168(0x00B8)()
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_OnMouseButtonDown) == 0x000008, "Wrong alignment on WBP_Lockpicking_C_OnMouseButtonDown");
static_assert(sizeof(WBP_Lockpicking_C_OnMouseButtonDown) == 0x000228, "Wrong size on WBP_Lockpicking_C_OnMouseButtonDown");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, MyGeometry) == 0x000000, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, MouseEvent) == 0x000038, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, ReturnValue) == 0x0000B0, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, CallFunc_Handled_ReturnValue) == 0x000168, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::CallFunc_Handled_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000220, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, CallFunc_IsValid_ReturnValue) == 0x000221, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonDown, CallFunc_BooleanAND_ReturnValue) == 0x000222, "Member 'WBP_Lockpicking_C_OnMouseButtonDown::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.OnMouseButtonUp
// 0x0248 (0x0248 - 0x0000)
struct WBP_Lockpicking_C_OnMouseButtonUp final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_PointerEvent_GetEffectingButton_ReturnValue; // 0x0168(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x0188(0x00B8)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_OnMouseButtonUp) == 0x000008, "Wrong alignment on WBP_Lockpicking_C_OnMouseButtonUp");
static_assert(sizeof(WBP_Lockpicking_C_OnMouseButtonUp) == 0x000248, "Wrong size on WBP_Lockpicking_C_OnMouseButtonUp");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, MyGeometry) == 0x000000, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, MouseEvent) == 0x000038, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, ReturnValue) == 0x0000B0, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, CallFunc_PointerEvent_GetEffectingButton_ReturnValue) == 0x000168, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::CallFunc_PointerEvent_GetEffectingButton_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000180, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, K2Node_MakeStruct_EventReply) == 0x000188, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::K2Node_MakeStruct_EventReply' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, CallFunc_IsValid_ReturnValue) == 0x000240, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseButtonUp, CallFunc_BooleanAND_ReturnValue) == 0x000241, "Member 'WBP_Lockpicking_C_OnMouseButtonUp::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.OnMouseMove
// 0x0258 (0x0258 - 0x0000)
struct WBP_Lockpicking_C_OnMouseMove final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00B8)(Parm, OutParm, ReturnParm)
	struct FVector2D                              CallFunc_PointerEvent_GetCursorDelta_ReturnValue;  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEventReply                            K2Node_MakeStruct_EventReply;                      // 0x01A0(0x00B8)()
};
static_assert(alignof(WBP_Lockpicking_C_OnMouseMove) == 0x000008, "Wrong alignment on WBP_Lockpicking_C_OnMouseMove");
static_assert(sizeof(WBP_Lockpicking_C_OnMouseMove) == 0x000258, "Wrong size on WBP_Lockpicking_C_OnMouseMove");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, MyGeometry) == 0x000000, "Member 'WBP_Lockpicking_C_OnMouseMove::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, MouseEvent) == 0x000038, "Member 'WBP_Lockpicking_C_OnMouseMove::MouseEvent' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, ReturnValue) == 0x0000B0, "Member 'WBP_Lockpicking_C_OnMouseMove::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, CallFunc_PointerEvent_GetCursorDelta_ReturnValue) == 0x000168, "Member 'WBP_Lockpicking_C_OnMouseMove::CallFunc_PointerEvent_GetCursorDelta_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, CallFunc_IsValid_ReturnValue) == 0x000178, "Member 'WBP_Lockpicking_C_OnMouseMove::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, CallFunc_Normal2D_ReturnValue) == 0x000180, "Member 'WBP_Lockpicking_C_OnMouseMove::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, CallFunc_BreakVector2D_X) == 0x000190, "Member 'WBP_Lockpicking_C_OnMouseMove::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, CallFunc_BreakVector2D_Y) == 0x000198, "Member 'WBP_Lockpicking_C_OnMouseMove::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_OnMouseMove, K2Node_MakeStruct_EventReply) == 0x0001A0, "Member 'WBP_Lockpicking_C_OnMouseMove::K2Node_MakeStruct_EventReply' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.RemoveLockpick
// 0x0010 (0x0010 - 0x0000)
struct WBP_Lockpicking_C_RemoveLockpick final
{
public:
	bool                                          HasLockpick;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetLockpickNum_Num;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetItemByName_ReturnedCount;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_RemoveLockpick) == 0x000004, "Wrong alignment on WBP_Lockpicking_C_RemoveLockpick");
static_assert(sizeof(WBP_Lockpicking_C_RemoveLockpick) == 0x000010, "Wrong size on WBP_Lockpicking_C_RemoveLockpick");
static_assert(offsetof(WBP_Lockpicking_C_RemoveLockpick, HasLockpick) == 0x000000, "Member 'WBP_Lockpicking_C_RemoveLockpick::HasLockpick' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_RemoveLockpick, CallFunc_GetLockpickNum_Num) == 0x000004, "Member 'WBP_Lockpicking_C_RemoveLockpick::CallFunc_GetLockpickNum_Num' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_RemoveLockpick, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WBP_Lockpicking_C_RemoveLockpick::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_RemoveLockpick, CallFunc_Greater_IntInt_ReturnValue) == 0x000009, "Member 'WBP_Lockpicking_C_RemoveLockpick::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_RemoveLockpick, CallFunc_GetItemByName_ReturnedCount) == 0x00000C, "Member 'WBP_Lockpicking_C_RemoveLockpick::CallFunc_GetItemByName_ReturnedCount' has a wrong offset!");

// Function WBP_Lockpicking.WBP_Lockpicking_C.Tick
// 0x003C (0x003C - 0x0000)
struct WBP_Lockpicking_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0038)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0038(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Lockpicking_C_Tick) == 0x000004, "Wrong alignment on WBP_Lockpicking_C_Tick");
static_assert(sizeof(WBP_Lockpicking_C_Tick) == 0x00003C, "Wrong size on WBP_Lockpicking_C_Tick");
static_assert(offsetof(WBP_Lockpicking_C_Tick, MyGeometry) == 0x000000, "Member 'WBP_Lockpicking_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WBP_Lockpicking_C_Tick, InDeltaTime) == 0x000038, "Member 'WBP_Lockpicking_C_Tick::InDeltaTime' has a wrong offset!");

}

