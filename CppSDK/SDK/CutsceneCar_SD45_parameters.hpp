#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CutsceneCar_SD45

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CutsceneCar_SD45.CutsceneCar_SD45_C.ExecuteUbergraph_CutsceneCar_SD45
// 0x01F0 (0x01F0 - 0x0000)
struct CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_CarStats_C*                        CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          K2Node_Event_PlayerAnimInst;                       // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetExitPoint_ReturnValue;                 // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0098(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_2;            // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x01C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E5[0x3];                                      // 0x01E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45) == 0x000008, "Wrong alignment on CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45");
static_assert(sizeof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45) == 0x0001F0, "Wrong size on CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, EntryPoint) == 0x000000, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::EntryPoint' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Create_ReturnValue) == 0x000008, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, Temp_int_Array_Index_Variable) == 0x000010, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, K2Node_Event_PlayerAnimInst) == 0x000018, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::K2Node_Event_PlayerAnimInst' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Montage_Play_ReturnValue) == 0x000020, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetExitPoint_ReturnValue) == 0x000028, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetExitPoint_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetAnimInstance_ReturnValue) == 0x000040, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000048, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000050, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_BreakRotator_Roll) == 0x000068, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_BreakRotator_Pitch) == 0x00006C, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_BreakRotator_Yaw) == 0x000070, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_MakeRotator_ReturnValue) == 0x000078, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000090, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000098, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000180, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Montage_Play_ReturnValue_1) == 0x000184, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetAnimInstance_ReturnValue_2) == 0x000188, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetAnimInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1) == 0x000190, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetSequencePlayer_ReturnValue) == 0x000198, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Array_Get_Item) == 0x0001A0, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Array_Length_ReturnValue) == 0x0001A8, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001B0, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001B8, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0001C0, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0001D8, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, Temp_int_Loop_Counter_Variable) == 0x0001E0, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Less_IntInt_ReturnValue) == 0x0001E4, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_Add_IntInt_ReturnValue) == 0x0001E8, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x0001EC, "Member 'CutsceneCar_SD45_C_ExecuteUbergraph_CutsceneCar_SD45::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");

// Function CutsceneCar_SD45.CutsceneCar_SD45_C.InitTireMaterials
// 0x0020 (0x0020 - 0x0000)
struct CutsceneCar_SD45_C_InitTireMaterials final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CutsceneCar_SD45_C_InitTireMaterials) == 0x000008, "Wrong alignment on CutsceneCar_SD45_C_InitTireMaterials");
static_assert(sizeof(CutsceneCar_SD45_C_InitTireMaterials) == 0x000020, "Wrong size on CutsceneCar_SD45_C_InitTireMaterials");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, Temp_int_Array_Index_Variable) == 0x000000, "Member 'CutsceneCar_SD45_C_InitTireMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'CutsceneCar_SD45_C_InitTireMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'CutsceneCar_SD45_C_InitTireMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'CutsceneCar_SD45_C_InitTireMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, CallFunc_Array_Get_Item) == 0x000010, "Member 'CutsceneCar_SD45_C_InitTireMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000014, "Member 'CutsceneCar_SD45_C_InitTireMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_InitTireMaterials, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000018, "Member 'CutsceneCar_SD45_C_InitTireMaterials::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");

// Function CutsceneCar_SD45.CutsceneCar_SD45_C.UpdateTireDeformation
// 0x0118 (0x0118 - 0x0000)
struct CutsceneCar_SD45_C_UpdateTireDeformation final
{
public:
	class UMaterialInstanceDynamic*               MaterialInstance;                                  // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Param_WheelIndex;                                  // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorUpVector_ReturnValue;             // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CutsceneCar_SD45_C_UpdateTireDeformation) == 0x000008, "Wrong alignment on CutsceneCar_SD45_C_UpdateTireDeformation");
static_assert(sizeof(CutsceneCar_SD45_C_UpdateTireDeformation) == 0x000118, "Wrong size on CutsceneCar_SD45_C_UpdateTireDeformation");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, MaterialInstance) == 0x000000, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::MaterialInstance' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, Param_WheelIndex) == 0x000008, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::Param_WheelIndex' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, Temp_bool_Variable) == 0x00000C, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, Temp_real_Variable) == 0x000010, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, Temp_real_Variable_1) == 0x000018, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, K2Node_Select_Default) == 0x000020, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_GetActorUpVector_ReturnValue) == 0x000028, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_GetActorUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000040, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Roll) == 0x000070, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Pitch) == 0x000074, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Yaw) == 0x000078, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x00007C, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_MakeRotator_ReturnValue) == 0x000090, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000A8, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Roll_1) == 0x0000C0, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Pitch_1) == 0x0000C4, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_BreakRotator_Yaw_1) == 0x0000C8, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_MapRangeClamped_ReturnValue) == 0x0000D0, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_GetSocketLocation_ReturnValue) == 0x0000E0, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x0000F8, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000108, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(CutsceneCar_SD45_C_UpdateTireDeformation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000110, "Member 'CutsceneCar_SD45_C_UpdateTireDeformation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function CutsceneCar_SD45.CutsceneCar_SD45_C.PlayExitAnims
// 0x0008 (0x0008 - 0x0000)
struct CutsceneCar_SD45_C_PlayExitAnims final
{
public:
	class UAnimInstance*                          PlayerAnimInst;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CutsceneCar_SD45_C_PlayExitAnims) == 0x000008, "Wrong alignment on CutsceneCar_SD45_C_PlayExitAnims");
static_assert(sizeof(CutsceneCar_SD45_C_PlayExitAnims) == 0x000008, "Wrong size on CutsceneCar_SD45_C_PlayExitAnims");
static_assert(offsetof(CutsceneCar_SD45_C_PlayExitAnims, PlayerAnimInst) == 0x000000, "Member 'CutsceneCar_SD45_C_PlayExitAnims::PlayerAnimInst' has a wrong offset!");

// Function CutsceneCar_SD45.CutsceneCar_SD45_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct CutsceneCar_SD45_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CutsceneCar_SD45_C_ReceiveTick) == 0x000004, "Wrong alignment on CutsceneCar_SD45_C_ReceiveTick");
static_assert(sizeof(CutsceneCar_SD45_C_ReceiveTick) == 0x000004, "Wrong size on CutsceneCar_SD45_C_ReceiveTick");
static_assert(offsetof(CutsceneCar_SD45_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'CutsceneCar_SD45_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

}

