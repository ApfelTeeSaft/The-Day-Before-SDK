#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_QuestCompleate

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "FMODStudio_structs.hpp"


namespace SDK::Params
{

// Function WBP_QuestCompleate.WBP_QuestCompleate_C.ExecuteUbergraph_WBP_QuestCompleate
// 0x0168 (0x0168 - 0x0000)
struct WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Show;                           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_QuestName;                      // 0x0008(0x0018)()
	class FText                                   K2Node_CustomEvent_QuestText;                      // 0x0020(0x0018)()
	TMap<class FString, int32>                    K2Node_CustomEvent_Reward_Items;                   // 0x0038(0x0050)()
	int32                                         K2Node_CustomEvent_Reward_Rp;                      // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowByTime;                     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_AutoFade;                       // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x009C(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              K2Node_DynamicCast_AsSurv_PC;                      // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFMODEventInstance                     CallFunc_PlayEvent2D_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result;    // 0x00D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue; // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x3];                                       // 0x00E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x00EC(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_CreatePlayAnimationProxyObject_Result_1;  // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimationPlayCallbackProxy*      CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1; // 0x0108(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class FString, int32>                    K2Node_MakeMap_Map;                                // 0x0118(0x0050)()
};
static_assert(alignof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate) == 0x000008, "Wrong alignment on WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate");
static_assert(sizeof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate) == 0x000168, "Wrong size on WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, EntryPoint) == 0x000000, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_Show) == 0x000004, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_Show' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_QuestName) == 0x000008, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_QuestName' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_QuestText) == 0x000020, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_QuestText' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_Reward_Items) == 0x000038, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_Reward_Items' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_Reward_Rp) == 0x000088, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_Reward_Rp' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_ShowByTime) == 0x00008C, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_ShowByTime' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CustomEvent_AutoFade) == 0x00008D, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CustomEvent_AutoFade' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_PlayAnimation_ReturnValue) == 0x000090, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000098, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CreateDelegate_OutputDelegate) == 0x00009C, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_GetPlayerController_ReturnValue) == 0x0000B0, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_DynamicCast_AsSurv_PC) == 0x0000B8, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_DynamicCast_AsSurv_PC' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_PlayEvent2D_ReturnValue) == 0x0000C8, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_PlayEvent2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_Event_IsDesignTime) == 0x0000D0, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_CreatePlayAnimationProxyObject_Result) == 0x0000D8, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_CreatePlayAnimationProxyObject_Result' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_CreatePlayAnimationProxyObject_ReturnValue) == 0x0000E0, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_CreatePlayAnimationProxyObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_CreateDelegate_OutputDelegate_1) == 0x0000EC, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_CreatePlayAnimationProxyObject_Result_1) == 0x000100, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_CreatePlayAnimationProxyObject_Result_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1) == 0x000108, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_CreatePlayAnimationProxyObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, CallFunc_IsValid_ReturnValue_1) == 0x000110, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate, K2Node_MakeMap_Map) == 0x000118, "Member 'WBP_QuestCompleate_C_ExecuteUbergraph_WBP_QuestCompleate::K2Node_MakeMap_Map' has a wrong offset!");

// Function WBP_QuestCompleate.WBP_QuestCompleate_C.InstantHide
// 0x0010 (0x0010 - 0x0000)
struct WBP_QuestCompleate_C_InstantHide final
{
public:
	struct FMargin                                K2Node_MakeStruct_Margin;                          // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WBP_QuestCompleate_C_InstantHide) == 0x000004, "Wrong alignment on WBP_QuestCompleate_C_InstantHide");
static_assert(sizeof(WBP_QuestCompleate_C_InstantHide) == 0x000010, "Wrong size on WBP_QuestCompleate_C_InstantHide");
static_assert(offsetof(WBP_QuestCompleate_C_InstantHide, K2Node_MakeStruct_Margin) == 0x000000, "Member 'WBP_QuestCompleate_C_InstantHide::K2Node_MakeStruct_Margin' has a wrong offset!");

// Function WBP_QuestCompleate.WBP_QuestCompleate_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_QuestCompleate_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestCompleate_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_QuestCompleate_C_PreConstruct");
static_assert(sizeof(WBP_QuestCompleate_C_PreConstruct) == 0x000001, "Wrong size on WBP_QuestCompleate_C_PreConstruct");
static_assert(offsetof(WBP_QuestCompleate_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_QuestCompleate_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_QuestCompleate.WBP_QuestCompleate_C.SetRewards
// 0x0070 (0x0070 - 0x0000)
struct WBP_QuestCompleate_C_SetRewards final
{
public:
	TMap<class FString, int32>                    Items;                                             // 0x0000(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         RP;                                                // 0x0050(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable;                              // 0x0058(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Map_Find_Value;                           // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestCompleate_C_SetRewards) == 0x000008, "Wrong alignment on WBP_QuestCompleate_C_SetRewards");
static_assert(sizeof(WBP_QuestCompleate_C_SetRewards) == 0x000070, "Wrong size on WBP_QuestCompleate_C_SetRewards");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, Items) == 0x000000, "Member 'WBP_QuestCompleate_C_SetRewards::Items' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, RP) == 0x000050, "Member 'WBP_QuestCompleate_C_SetRewards::RP' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'WBP_QuestCompleate_C_SetRewards::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, Temp_string_Variable) == 0x000058, "Member 'WBP_QuestCompleate_C_SetRewards::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, CallFunc_Map_Find_Value) == 0x000068, "Member 'WBP_QuestCompleate_C_SetRewards::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, CallFunc_Map_Find_ReturnValue) == 0x00006C, "Member 'WBP_QuestCompleate_C_SetRewards::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00006D, "Member 'WBP_QuestCompleate_C_SetRewards::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_SetRewards, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'WBP_QuestCompleate_C_SetRewards::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function WBP_QuestCompleate.WBP_QuestCompleate_C.Show
// 0x0090 (0x0090 - 0x0000)
struct WBP_QuestCompleate_C_Show final
{
public:
	bool                                          Param_Show;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   QuestName;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	class FText                                   QuestText;                                         // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class FString, int32>                    Reward_Items;                                      // 0x0038(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	int32                                         Reward_Rp;                                         // 0x0088(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ShowByTime;                                        // 0x008C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoFade;                                          // 0x008D(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_QuestCompleate_C_Show) == 0x000008, "Wrong alignment on WBP_QuestCompleate_C_Show");
static_assert(sizeof(WBP_QuestCompleate_C_Show) == 0x000090, "Wrong size on WBP_QuestCompleate_C_Show");
static_assert(offsetof(WBP_QuestCompleate_C_Show, Param_Show) == 0x000000, "Member 'WBP_QuestCompleate_C_Show::Param_Show' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, QuestName) == 0x000008, "Member 'WBP_QuestCompleate_C_Show::QuestName' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, QuestText) == 0x000020, "Member 'WBP_QuestCompleate_C_Show::QuestText' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, Reward_Items) == 0x000038, "Member 'WBP_QuestCompleate_C_Show::Reward_Items' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, Reward_Rp) == 0x000088, "Member 'WBP_QuestCompleate_C_Show::Reward_Rp' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, ShowByTime) == 0x00008C, "Member 'WBP_QuestCompleate_C_Show::ShowByTime' has a wrong offset!");
static_assert(offsetof(WBP_QuestCompleate_C_Show, AutoFade) == 0x00008D, "Member 'WBP_QuestCompleate_C_Show::AutoFade' has a wrong offset!");

}

