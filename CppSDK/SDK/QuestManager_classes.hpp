#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QuestManager

#include "Basic.hpp"

#include "SideQuestData_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "QuestData_0_structs.hpp"
#include "QuestType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass QuestManager.QuestManager_C
// 0x00D8 (0x0368 - 0x0290)
class AQuestManager_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	TArray<struct FQuestData>                     QuestsData;                                        // 0x02A0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<class UQuestV2_C*>                     Quests;                                            // 0x02B0(0x0010)(Edit, BlueprintVisible)
	class UQuestV2_C*                             CurrentQuest;                                      // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         StartQuest;                                        // 0x02C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQuestV2_C*                             PreviousQuest;                                     // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          HasLocalCompletedQuest;                            // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x7];                                      // 0x02D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      Player;                                            // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsAllQuestsDone;                                   // 0x02E8(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsFirstServerPlayerCalled;                         // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSideQuestData>                 SideQuestsData;                                    // 0x02F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	TMap<class FString, class USideQuests_C*>     SideQuests;                                        // 0x0300(0x0050)(Edit, BlueprintVisible)
	bool                                          IsOnSideQuest;                                     // 0x0350(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_351[0x3];                                      // 0x0351(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CurrentSideQuestID;                                // 0x0354(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMainQuests_C*                          MainQuests;                                        // 0x0358(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMainQuests_C*                          ActiveSideQuest;                                   // 0x0360(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void AddSideQuest(const class FString& ID, class USideQuests_C* SideQuest);
	void AksForHighlightableActorsWithTag(const class FString& Tag, TArray<TScriptInterface<class II_Highlightable_C>>* Result);
	void AskForHighlightableActors(TArray<TScriptInterface<class II_Highlightable_C>>* FoundActors);
	void ChangeQuestHint(const class FString& Hint);
	void ChangeQuestHintClientSide(const class FString& Hint);
	void CheckForStartSideQuest(const class FString& Trigger, bool* IsSideQuestTrigger, class USideQuests_C** SideQuest);
	void CreateQuestByQuestData(const struct FQuestData& QuestData, class UQuestV2_C** Quest);
	void CreateQuestByType(EQuestType QuestType, class UQuestV2_C** Result);
	void CreateTimeoutTrigger(const class FString& Trigger, double Duration);
	void ExecuteUbergraph_QuestManager(int32 EntryPoint);
	void InitializeQuests();
	void InitManager(class ASurvivalPlayer_C* Param_Player);
	void IsCanSwitchToNextQuest(class UQuestV2_C* CompletedQuest, bool* Result, int32* NextIndex);
	void OnCompleteCurrentQuest(int32 QuestID);
	void OnFillCarFuel();
	void OnImproveCar();
	void OnInventoryUpdated();
	void OnKillNPC();
	void OnPlaceBonfire();
	void OnPlayerDead(class ASurvivalPlayer_C* Param_Player);
	void OnQuestCompleted(class UQuestV2_C* CompletedQuest);
	void OnQuestEvent(const class FString& QuestEvent);
	void OnQuestEventServerSide(const class FString& Trigger);
	void ReceiveBeginPlay();
	void SetMarkers(const TArray<struct FVector>& Markers);
	void SetPlayer(class ASurvivalPlayer_C* Param_Player);
	void SwitchCurrentQuest(class UQuestV2_C* Quest);
	void SwitchQuestClientSide(int32 QuestID);
	void SwitchToMainQuest();
	void SwitchToSideQuest(const class FString& ID, class USideQuests_C* SideQuest);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QuestManager_C">();
	}
	static class AQuestManager_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AQuestManager_C>();
	}
};
static_assert(alignof(AQuestManager_C) == 0x000008, "Wrong alignment on AQuestManager_C");
static_assert(sizeof(AQuestManager_C) == 0x000368, "Wrong size on AQuestManager_C");
static_assert(offsetof(AQuestManager_C, UberGraphFrame) == 0x000290, "Member 'AQuestManager_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, DefaultSceneRoot) == 0x000298, "Member 'AQuestManager_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, QuestsData) == 0x0002A0, "Member 'AQuestManager_C::QuestsData' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, Quests) == 0x0002B0, "Member 'AQuestManager_C::Quests' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, CurrentQuest) == 0x0002C0, "Member 'AQuestManager_C::CurrentQuest' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, StartQuest) == 0x0002C8, "Member 'AQuestManager_C::StartQuest' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, PreviousQuest) == 0x0002D0, "Member 'AQuestManager_C::PreviousQuest' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, HasLocalCompletedQuest) == 0x0002D8, "Member 'AQuestManager_C::HasLocalCompletedQuest' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, Player) == 0x0002E0, "Member 'AQuestManager_C::Player' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, IsAllQuestsDone) == 0x0002E8, "Member 'AQuestManager_C::IsAllQuestsDone' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, IsFirstServerPlayerCalled) == 0x0002E9, "Member 'AQuestManager_C::IsFirstServerPlayerCalled' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, SideQuestsData) == 0x0002F0, "Member 'AQuestManager_C::SideQuestsData' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, SideQuests) == 0x000300, "Member 'AQuestManager_C::SideQuests' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, IsOnSideQuest) == 0x000350, "Member 'AQuestManager_C::IsOnSideQuest' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, CurrentSideQuestID) == 0x000354, "Member 'AQuestManager_C::CurrentSideQuestID' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, MainQuests) == 0x000358, "Member 'AQuestManager_C::MainQuests' has a wrong offset!");
static_assert(offsetof(AQuestManager_C, ActiveSideQuest) == 0x000360, "Member 'AQuestManager_C::ActiveSideQuest' has a wrong offset!");

}

