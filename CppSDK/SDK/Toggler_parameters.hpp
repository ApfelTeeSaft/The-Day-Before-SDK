#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Toggler

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "E_InteractType_structs.hpp"


namespace SDK::Params
{

// Function Toggler.Toggler_C.AddBlocker
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_AddBlocker final
{
public:
	class AElectricityBlocker_C*                  Blocker;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_AddBlocker) == 0x000008, "Wrong alignment on Toggler_C_AddBlocker");
static_assert(sizeof(Toggler_C_AddBlocker) == 0x000008, "Wrong size on Toggler_C_AddBlocker");
static_assert(offsetof(Toggler_C_AddBlocker, Blocker) == 0x000000, "Member 'Toggler_C_AddBlocker::Blocker' has a wrong offset!");

// Function Toggler.Toggler_C.AddListener
// 0x0018 (0x0018 - 0x0000)
struct Toggler_C_AddListener final
{
public:
	TScriptInterface<class ITogglerListener_C>    Listener;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_AddListener) == 0x000008, "Wrong alignment on Toggler_C_AddListener");
static_assert(sizeof(Toggler_C_AddListener) == 0x000018, "Wrong size on Toggler_C_AddListener");
static_assert(offsetof(Toggler_C_AddListener, Listener) == 0x000000, "Member 'Toggler_C_AddListener::Listener' has a wrong offset!");
static_assert(offsetof(Toggler_C_AddListener, CallFunc_Array_AddUnique_ReturnValue) == 0x000010, "Member 'Toggler_C_AddListener::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function Toggler.Toggler_C.CallListenerToggle
// 0x0030 (0x0030 - 0x0000)
struct Toggler_C_CallListenerToggle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class ITogglerListener_C>    CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_CallListenerToggle) == 0x000008, "Wrong alignment on Toggler_C_CallListenerToggle");
static_assert(sizeof(Toggler_C_CallListenerToggle) == 0x000030, "Wrong size on Toggler_C_CallListenerToggle");
static_assert(offsetof(Toggler_C_CallListenerToggle, Player) == 0x000000, "Member 'Toggler_C_CallListenerToggle::Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, Temp_int_Array_Index_Variable) == 0x000008, "Member 'Toggler_C_CallListenerToggle::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'Toggler_C_CallListenerToggle::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Toggler_C_CallListenerToggle::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, CallFunc_Array_Length_ReturnValue) == 0x000014, "Member 'Toggler_C_CallListenerToggle::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, CallFunc_Array_Get_Item) == 0x000018, "Member 'Toggler_C_CallListenerToggle::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Toggler_C_CallListenerToggle, CallFunc_Less_IntInt_ReturnValue) == 0x000028, "Member 'Toggler_C_CallListenerToggle::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function Toggler.Toggler_C.ExecuteUbergraph_Toggler
// 0x0128 (0x0128 - 0x0000)
struct Toggler_C_ExecuteUbergraph_Toggler final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_9;                             // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_8;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_7;                             // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_SitIndex;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_SkipAnimation;                        // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Player_6;                             // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_5;                             // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_4;                             // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_3;                             // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible_1;                            // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Visible;                              // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AElectricityBlocker_C*                  K2Node_Event_Blocker_1;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AElectricityBlocker_C*                  K2Node_Event_Blocker;                              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_Event_Player_2;                             // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player_1;                             // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IElectricityBlockerListener_C> CallFunc_AddListener_Listener_CastInput;           // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_CustomEvent_Player;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_Text;                           // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBlocker_Result;                        // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x2];                                       // 0x00B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AElectricityGenerator_C*                K2Node_Event_Generator;                            // 0x00B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IElectricityConsumer_C> CallFunc_AddListener_Listener_CastInput_1;         // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UFMODAudioComponent*                    CallFunc_FMODPlayEventAttached_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_Player;                               // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AElectricityBlocker_C*                  CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface;        // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GeneralInterface_C> K2Node_DynamicCast_AsBPI_General_Interface_1;      // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x3];                                      // 0x0119(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasBlocker_Result_1;                      // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_ExecuteUbergraph_Toggler) == 0x000008, "Wrong alignment on Toggler_C_ExecuteUbergraph_Toggler");
static_assert(sizeof(Toggler_C_ExecuteUbergraph_Toggler) == 0x000128, "Wrong size on Toggler_C_ExecuteUbergraph_Toggler");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, EntryPoint) == 0x000000, "Member 'Toggler_C_ExecuteUbergraph_Toggler::EntryPoint' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_FMODPlayEventAttached_ReturnValue) == 0x000008, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_FMODPlayEventAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_9) == 0x000010, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_9' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_8) == 0x000018, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_8' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_7) == 0x000020, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_7' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_SitIndex) == 0x000028, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_SitIndex' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_SkipAnimation) == 0x00002C, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_SkipAnimation' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_6) == 0x000030, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_6' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_5) == 0x000038, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_5' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_4) == 0x000040, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_4' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_3) == 0x000048, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_3' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Visible_1) == 0x000050, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Visible_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Visible) == 0x000051, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Visible' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Blocker_1) == 0x000058, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Blocker_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Blocker) == 0x000060, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Blocker' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_2) == 0x000068, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_2' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player_1) == 0x000070, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Array_AddUnique_ReturnValue) == 0x000078, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_AddListener_Listener_CastInput) == 0x000080, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_AddListener_Listener_CastInput' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Array_RemoveItem_ReturnValue) == 0x000090, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_CustomEvent_Player) == 0x000098, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_CustomEvent_Text) == 0x0000A0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_IsLocallyControlled_ReturnValue) == 0x0000B0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_HasBlocker_Result) == 0x0000B1, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_HasBlocker_Result' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'Toggler_C_ExecuteUbergraph_Toggler::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Generator) == 0x0000B8, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Generator' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_AddListener_Listener_CastInput_1) == 0x0000C0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_AddListener_Listener_CastInput_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_FMODPlayEventAttached_ReturnValue_1) == 0x0000D0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_FMODPlayEventAttached_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, Temp_int_Loop_Counter_Variable) == 0x0000D8, "Member 'Toggler_C_ExecuteUbergraph_Toggler::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Add_IntInt_ReturnValue) == 0x0000DC, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_Event_Player) == 0x0000E0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_Event_Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_DynamicCast_AsBPI_General_Interface) == 0x0000F0, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_DynamicCast_AsBPI_General_Interface' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_DynamicCast_AsBPI_General_Interface_1) == 0x000108, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_DynamicCast_AsBPI_General_Interface_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, K2Node_DynamicCast_bSuccess_1) == 0x000118, "Member 'Toggler_C_ExecuteUbergraph_Toggler::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Array_Length_ReturnValue) == 0x00011C, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_Less_IntInt_ReturnValue) == 0x000120, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_ExecuteUbergraph_Toggler, CallFunc_HasBlocker_Result_1) == 0x000121, "Member 'Toggler_C_ExecuteUbergraph_Toggler::CallFunc_HasBlocker_Result_1' has a wrong offset!");

// Function Toggler.Toggler_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct Toggler_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_GetActorType) == 0x000001, "Wrong alignment on Toggler_C_GetActorType");
static_assert(sizeof(Toggler_C_GetActorType) == 0x000001, "Wrong size on Toggler_C_GetActorType");
static_assert(offsetof(Toggler_C_GetActorType, ActorType) == 0x000000, "Member 'Toggler_C_GetActorType::ActorType' has a wrong offset!");

// Function Toggler.Toggler_C.HasBlocker
// 0x000C (0x000C - 0x0000)
struct Toggler_C_HasBlocker final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_HasBlocker) == 0x000004, "Wrong alignment on Toggler_C_HasBlocker");
static_assert(sizeof(Toggler_C_HasBlocker) == 0x00000C, "Wrong size on Toggler_C_HasBlocker");
static_assert(offsetof(Toggler_C_HasBlocker, Result) == 0x000000, "Member 'Toggler_C_HasBlocker::Result' has a wrong offset!");
static_assert(offsetof(Toggler_C_HasBlocker, CallFunc_Array_Length_ReturnValue) == 0x000004, "Member 'Toggler_C_HasBlocker::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_HasBlocker, CallFunc_Greater_IntInt_ReturnValue) == 0x000008, "Member 'Toggler_C_HasBlocker::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Toggler.Toggler_C.InteractClientSide
// 0x0018 (0x0018 - 0x0000)
struct Toggler_C_InteractClientSide final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Text;                                              // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_InteractClientSide) == 0x000008, "Wrong alignment on Toggler_C_InteractClientSide");
static_assert(sizeof(Toggler_C_InteractClientSide) == 0x000018, "Wrong size on Toggler_C_InteractClientSide");
static_assert(offsetof(Toggler_C_InteractClientSide, Player) == 0x000000, "Member 'Toggler_C_InteractClientSide::Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_InteractClientSide, Text) == 0x000008, "Member 'Toggler_C_InteractClientSide::Text' has a wrong offset!");

// Function Toggler.Toggler_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct Toggler_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_IsLocked_) == 0x000001, "Wrong alignment on Toggler_C_IsLocked_");
static_assert(sizeof(Toggler_C_IsLocked_) == 0x000001, "Wrong size on Toggler_C_IsLocked_");
static_assert(offsetof(Toggler_C_IsLocked_, Result) == 0x000000, "Member 'Toggler_C_IsLocked_::Result' has a wrong offset!");

// Function Toggler.Toggler_C.OnBeginInteract
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnBeginInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnBeginInteract) == 0x000008, "Wrong alignment on Toggler_C_OnBeginInteract");
static_assert(sizeof(Toggler_C_OnBeginInteract) == 0x000008, "Wrong size on Toggler_C_OnBeginInteract");
static_assert(offsetof(Toggler_C_OnBeginInteract, Player) == 0x000000, "Member 'Toggler_C_OnBeginInteract::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnBreakBlocker
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnBreakBlocker final
{
public:
	class AElectricityBlocker_C*                  Blocker;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnBreakBlocker) == 0x000008, "Wrong alignment on Toggler_C_OnBreakBlocker");
static_assert(sizeof(Toggler_C_OnBreakBlocker) == 0x000008, "Wrong size on Toggler_C_OnBreakBlocker");
static_assert(offsetof(Toggler_C_OnBreakBlocker, Blocker) == 0x000000, "Member 'Toggler_C_OnBreakBlocker::Blocker' has a wrong offset!");

// Function Toggler.Toggler_C.OnFocused
// 0x0058 (0x0058 - 0x0000)
struct Toggler_C_OnFocused final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 HighlightActor;                                    // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        HighlightActorComponent;                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_InteractType                                InteractType;                                      // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LateTime;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUIW_PlayerMain_C*                      CallFunc_GetGUI_GUI;                               // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnFocused) == 0x000008, "Wrong alignment on Toggler_C_OnFocused");
static_assert(sizeof(Toggler_C_OnFocused) == 0x000058, "Wrong size on Toggler_C_OnFocused");
static_assert(offsetof(Toggler_C_OnFocused, Player) == 0x000000, "Member 'Toggler_C_OnFocused::Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, HighlightActor) == 0x000008, "Member 'Toggler_C_OnFocused::HighlightActor' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, HighlightActorComponent) == 0x000010, "Member 'Toggler_C_OnFocused::HighlightActorComponent' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, InteractType) == 0x000018, "Member 'Toggler_C_OnFocused::InteractType' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, LateTime) == 0x000020, "Member 'Toggler_C_OnFocused::LateTime' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, CallFunc_GetPlayerController_ReturnValue) == 0x000028, "Member 'Toggler_C_OnFocused::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, CallFunc_GetHUD_ReturnValue) == 0x000030, "Member 'Toggler_C_OnFocused::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000038, "Member 'Toggler_C_OnFocused::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'Toggler_C_OnFocused::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnFocused, CallFunc_GetGUI_GUI) == 0x000050, "Member 'Toggler_C_OnFocused::CallFunc_GetGUI_GUI' has a wrong offset!");

// Function Toggler.Toggler_C.OnGeneratorEnabled
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnGeneratorEnabled final
{
public:
	class ASurvivalPlayer_C*                      Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnGeneratorEnabled) == 0x000008, "Wrong alignment on Toggler_C_OnGeneratorEnabled");
static_assert(sizeof(Toggler_C_OnGeneratorEnabled) == 0x000008, "Wrong size on Toggler_C_OnGeneratorEnabled");
static_assert(offsetof(Toggler_C_OnGeneratorEnabled, Player) == 0x000000, "Member 'Toggler_C_OnGeneratorEnabled::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnInteract
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnInteract) == 0x000008, "Wrong alignment on Toggler_C_OnInteract");
static_assert(sizeof(Toggler_C_OnInteract) == 0x000008, "Wrong size on Toggler_C_OnInteract");
static_assert(offsetof(Toggler_C_OnInteract, Player) == 0x000000, "Member 'Toggler_C_OnInteract::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnInteract2
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnInteract2 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnInteract2) == 0x000008, "Wrong alignment on Toggler_C_OnInteract2");
static_assert(sizeof(Toggler_C_OnInteract2) == 0x000008, "Wrong size on Toggler_C_OnInteract2");
static_assert(offsetof(Toggler_C_OnInteract2, Player) == 0x000000, "Member 'Toggler_C_OnInteract2::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnInteract3
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnInteract3 final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnInteract3) == 0x000008, "Wrong alignment on Toggler_C_OnInteract3");
static_assert(sizeof(Toggler_C_OnInteract3) == 0x000008, "Wrong size on Toggler_C_OnInteract3");
static_assert(offsetof(Toggler_C_OnInteract3, Player) == 0x000000, "Member 'Toggler_C_OnInteract3::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnInteractVehicle
// 0x0010 (0x0010 - 0x0000)
struct Toggler_C_OnInteractVehicle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         SitIndex;                                          // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SkipAnimation;                                     // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnInteractVehicle) == 0x000008, "Wrong alignment on Toggler_C_OnInteractVehicle");
static_assert(sizeof(Toggler_C_OnInteractVehicle) == 0x000010, "Wrong size on Toggler_C_OnInteractVehicle");
static_assert(offsetof(Toggler_C_OnInteractVehicle, Player) == 0x000000, "Member 'Toggler_C_OnInteractVehicle::Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnInteractVehicle, SitIndex) == 0x000008, "Member 'Toggler_C_OnInteractVehicle::SitIndex' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnInteractVehicle, SkipAnimation) == 0x00000C, "Member 'Toggler_C_OnInteractVehicle::SkipAnimation' has a wrong offset!");

// Function Toggler.Toggler_C.OnLocalInteract
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnLocalInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnLocalInteract) == 0x000008, "Wrong alignment on Toggler_C_OnLocalInteract");
static_assert(sizeof(Toggler_C_OnLocalInteract) == 0x000008, "Wrong size on Toggler_C_OnLocalInteract");
static_assert(offsetof(Toggler_C_OnLocalInteract, Player) == 0x000000, "Member 'Toggler_C_OnLocalInteract::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnLostFocus
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnLostFocus final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnLostFocus) == 0x000008, "Wrong alignment on Toggler_C_OnLostFocus");
static_assert(sizeof(Toggler_C_OnLostFocus) == 0x000008, "Wrong size on Toggler_C_OnLostFocus");
static_assert(offsetof(Toggler_C_OnLostFocus, Player) == 0x000000, "Member 'Toggler_C_OnLostFocus::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnSeen
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnSeen final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnSeen) == 0x000008, "Wrong alignment on Toggler_C_OnSeen");
static_assert(sizeof(Toggler_C_OnSeen) == 0x000008, "Wrong size on Toggler_C_OnSeen");
static_assert(offsetof(Toggler_C_OnSeen, Player) == 0x000000, "Member 'Toggler_C_OnSeen::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnStopInteract
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_OnStopInteract final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnStopInteract) == 0x000008, "Wrong alignment on Toggler_C_OnStopInteract");
static_assert(sizeof(Toggler_C_OnStopInteract) == 0x000008, "Wrong size on Toggler_C_OnStopInteract");
static_assert(offsetof(Toggler_C_OnStopInteract, Player) == 0x000000, "Member 'Toggler_C_OnStopInteract::Player' has a wrong offset!");

// Function Toggler.Toggler_C.OnToggle
// 0x0028 (0x0028 - 0x0000)
struct Toggler_C_OnToggle final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GS_TDB_C>         K2Node_DynamicCast_AsBPI_GS_TDB;                   // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_OnToggle) == 0x000008, "Wrong alignment on Toggler_C_OnToggle");
static_assert(sizeof(Toggler_C_OnToggle) == 0x000028, "Wrong size on Toggler_C_OnToggle");
static_assert(offsetof(Toggler_C_OnToggle, Player) == 0x000000, "Member 'Toggler_C_OnToggle::Player' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnToggle, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'Toggler_C_OnToggle::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnToggle, K2Node_DynamicCast_AsBPI_GS_TDB) == 0x000010, "Member 'Toggler_C_OnToggle::K2Node_DynamicCast_AsBPI_GS_TDB' has a wrong offset!");
static_assert(offsetof(Toggler_C_OnToggle, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'Toggler_C_OnToggle::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function Toggler.Toggler_C.Set3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct Toggler_C_Set3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_Set3DWidgetVisibility) == 0x000001, "Wrong alignment on Toggler_C_Set3DWidgetVisibility");
static_assert(sizeof(Toggler_C_Set3DWidgetVisibility) == 0x000001, "Wrong size on Toggler_C_Set3DWidgetVisibility");
static_assert(offsetof(Toggler_C_Set3DWidgetVisibility, Visible) == 0x000000, "Member 'Toggler_C_Set3DWidgetVisibility::Visible' has a wrong offset!");

// Function Toggler.Toggler_C.SetListener
// 0x0010 (0x0010 - 0x0000)
struct Toggler_C_SetListener final
{
public:
	TScriptInterface<class ITogglerListener_C>    Listener;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_SetListener) == 0x000008, "Wrong alignment on Toggler_C_SetListener");
static_assert(sizeof(Toggler_C_SetListener) == 0x000010, "Wrong size on Toggler_C_SetListener");
static_assert(offsetof(Toggler_C_SetListener, Listener) == 0x000000, "Member 'Toggler_C_SetListener::Listener' has a wrong offset!");

// Function Toggler.Toggler_C.SetTutorial3DWidgetVisibility
// 0x0001 (0x0001 - 0x0000)
struct Toggler_C_SetTutorial3DWidgetVisibility final
{
public:
	bool                                          Visible;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong alignment on Toggler_C_SetTutorial3DWidgetVisibility");
static_assert(sizeof(Toggler_C_SetTutorial3DWidgetVisibility) == 0x000001, "Wrong size on Toggler_C_SetTutorial3DWidgetVisibility");
static_assert(offsetof(Toggler_C_SetTutorial3DWidgetVisibility, Visible) == 0x000000, "Member 'Toggler_C_SetTutorial3DWidgetVisibility::Visible' has a wrong offset!");

// Function Toggler.Toggler_C.SubscribeToGenerator
// 0x0008 (0x0008 - 0x0000)
struct Toggler_C_SubscribeToGenerator final
{
public:
	class AElectricityGenerator_C*                Generator;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Toggler_C_SubscribeToGenerator) == 0x000008, "Wrong alignment on Toggler_C_SubscribeToGenerator");
static_assert(sizeof(Toggler_C_SubscribeToGenerator) == 0x000008, "Wrong size on Toggler_C_SubscribeToGenerator");
static_assert(offsetof(Toggler_C_SubscribeToGenerator, Generator) == 0x000000, "Member 'Toggler_C_SubscribeToGenerator::Generator' has a wrong offset!");

}

