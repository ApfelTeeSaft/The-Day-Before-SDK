#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MedicShop

#include "Basic.hpp"

#include "E_ActorType_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_MedicShop.BP_MedicShop_C.ExecuteUbergraph_BP_MedicShop
// 0x0020 (0x0020 - 0x0000)
struct BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0004(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop) == 0x000008, "Wrong alignment on BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop");
static_assert(sizeof(BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop) == 0x000020, "Wrong size on BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop");
static_assert(offsetof(BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop, EntryPoint) == 0x000000, "Member 'BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop, K2Node_CreateDelegate_OutputDelegate) == 0x000004, "Member 'BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BP_MedicShop_C_ExecuteUbergraph_BP_MedicShop::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BP_MedicShop.BP_MedicShop_C.GetActorType
// 0x0001 (0x0001 - 0x0000)
struct BP_MedicShop_C_GetActorType final
{
public:
	E_ActorType                                   ActorType;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MedicShop_C_GetActorType) == 0x000001, "Wrong alignment on BP_MedicShop_C_GetActorType");
static_assert(sizeof(BP_MedicShop_C_GetActorType) == 0x000001, "Wrong size on BP_MedicShop_C_GetActorType");
static_assert(offsetof(BP_MedicShop_C_GetActorType, ActorType) == 0x000000, "Member 'BP_MedicShop_C_GetActorType::ActorType' has a wrong offset!");

// Function BP_MedicShop.BP_MedicShop_C.IsLocked?
// 0x0001 (0x0001 - 0x0000)
struct BP_MedicShop_C_IsLocked_ final
{
public:
	bool                                          Result;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_MedicShop_C_IsLocked_) == 0x000001, "Wrong alignment on BP_MedicShop_C_IsLocked_");
static_assert(sizeof(BP_MedicShop_C_IsLocked_) == 0x000001, "Wrong size on BP_MedicShop_C_IsLocked_");
static_assert(offsetof(BP_MedicShop_C_IsLocked_, Result) == 0x000000, "Member 'BP_MedicShop_C_IsLocked_::Result' has a wrong offset!");

}

