#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StashTutorial

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass W_StashTutorial.W_StashTutorial_C
// 0x00D0 (0x0350 - 0x0280)
class UW_StashTutorial_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       IconsFadingAnim;                                   // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadingAnim;                                        // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Tutorial_Fade_Screen_Anim;                         // 0x0298(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Tutorial_Category_Fade_Out_Anim;                   // 0x02A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Tutorial_Category_Fade_In_Anim;                    // 0x02A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_FakePocket;                                 // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           Canvas_FakeStash;                                  // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_0;                                     // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_AttackButton;                          // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UCanvasPanel*                           CanvasPanel_MoveTip;                               // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_circle_2;                                    // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_DarkScreen;                                  // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_lmb;                                         // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_CategoryBar_C*                       W_CategoryBar;                                     // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ShortTip_C*                          W_ShortTip_CategoryHint;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ShortTip_C*                          W_ShortTip_CategoryHint_1;                         // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ShortTip_C*                          W_ShortTip_EquipItemHint;                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_ShortTip_C*                          W_ShortTip_MoveItemHint;                           // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        InventoryContainer;                                // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UJSIContainer_C*                        StashContainer;                                    // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_FakeItemSlot_C*                      CurrentFakeItem;                                   // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CurrentTimerHandler;                               // 0x0330(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsDone;                                            // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsStashEmpty;                                      // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsEquipHintPart;                                   // 0x033A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33B[0x5];                                      // 0x033B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	FMulticastInlineDelegateProperty_             IsTutorialDone;                                    // 0x0340(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)

public:
	void CategoryHint_Click();
	void CategoryHint_Click_2();
	void Construct();
	void CreateStashHighlightedItem();
	void Destruct();
	void EquipHint_Click();
	void ExecuteUbergraph_W_StashTutorial(int32 EntryPoint);
	void FadeIn();
	void FadeOut();
	void FakeItemFadeInTick();
	void FakeItemFadeOutTick();
	void FakeItemFading(class UW_FakeItemSlot_C* Item, bool IsFadeIn);
	void IsTutorialDone__DelegateSignature();
	void MoveHint_Click();
	void OnAddItemToInventory(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_);
	void SetInventoryContainer(class UJSIContainer_C* Container);
	void SetStashContainer(class UJSIContainer_C* Container);
	void ShowMoveHintAgain();
	void SolveZOrder();
	void StartTutorial();
	void StopTutorial();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"W_StashTutorial_C">();
	}
	static class UW_StashTutorial_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UW_StashTutorial_C>();
	}
};
static_assert(alignof(UW_StashTutorial_C) == 0x000008, "Wrong alignment on UW_StashTutorial_C");
static_assert(sizeof(UW_StashTutorial_C) == 0x000350, "Wrong size on UW_StashTutorial_C");
static_assert(offsetof(UW_StashTutorial_C, UberGraphFrame) == 0x000280, "Member 'UW_StashTutorial_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, IconsFadingAnim) == 0x000288, "Member 'UW_StashTutorial_C::IconsFadingAnim' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, FadingAnim) == 0x000290, "Member 'UW_StashTutorial_C::FadingAnim' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Tutorial_Fade_Screen_Anim) == 0x000298, "Member 'UW_StashTutorial_C::Tutorial_Fade_Screen_Anim' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Tutorial_Category_Fade_Out_Anim) == 0x0002A0, "Member 'UW_StashTutorial_C::Tutorial_Category_Fade_Out_Anim' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Tutorial_Category_Fade_In_Anim) == 0x0002A8, "Member 'UW_StashTutorial_C::Tutorial_Category_Fade_In_Anim' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Canvas_FakePocket) == 0x0002B0, "Member 'UW_StashTutorial_C::Canvas_FakePocket' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Canvas_FakeStash) == 0x0002B8, "Member 'UW_StashTutorial_C::Canvas_FakeStash' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, CanvasPanel_0) == 0x0002C0, "Member 'UW_StashTutorial_C::CanvasPanel_0' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, CanvasPanel_AttackButton) == 0x0002C8, "Member 'UW_StashTutorial_C::CanvasPanel_AttackButton' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, CanvasPanel_MoveTip) == 0x0002D0, "Member 'UW_StashTutorial_C::CanvasPanel_MoveTip' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Image_circle_2) == 0x0002D8, "Member 'UW_StashTutorial_C::Image_circle_2' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Image_DarkScreen) == 0x0002E0, "Member 'UW_StashTutorial_C::Image_DarkScreen' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, Image_lmb) == 0x0002E8, "Member 'UW_StashTutorial_C::Image_lmb' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, W_CategoryBar) == 0x0002F0, "Member 'UW_StashTutorial_C::W_CategoryBar' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, W_ShortTip_CategoryHint) == 0x0002F8, "Member 'UW_StashTutorial_C::W_ShortTip_CategoryHint' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, W_ShortTip_CategoryHint_1) == 0x000300, "Member 'UW_StashTutorial_C::W_ShortTip_CategoryHint_1' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, W_ShortTip_EquipItemHint) == 0x000308, "Member 'UW_StashTutorial_C::W_ShortTip_EquipItemHint' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, W_ShortTip_MoveItemHint) == 0x000310, "Member 'UW_StashTutorial_C::W_ShortTip_MoveItemHint' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, InventoryContainer) == 0x000318, "Member 'UW_StashTutorial_C::InventoryContainer' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, StashContainer) == 0x000320, "Member 'UW_StashTutorial_C::StashContainer' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, CurrentFakeItem) == 0x000328, "Member 'UW_StashTutorial_C::CurrentFakeItem' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, CurrentTimerHandler) == 0x000330, "Member 'UW_StashTutorial_C::CurrentTimerHandler' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, IsDone) == 0x000338, "Member 'UW_StashTutorial_C::IsDone' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, IsStashEmpty) == 0x000339, "Member 'UW_StashTutorial_C::IsStashEmpty' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, IsEquipHintPart) == 0x00033A, "Member 'UW_StashTutorial_C::IsEquipHintPart' has a wrong offset!");
static_assert(offsetof(UW_StashTutorial_C, IsTutorialDone) == 0x000340, "Member 'UW_StashTutorial_C::IsTutorialDone' has a wrong offset!");

}

