#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurvAnimInterface

#include "Basic.hpp"

#include "SurvAnimInterface_classes.hpp"
#include "SurvAnimInterface_parameters.hpp"


namespace SDK
{

// Function SurvAnimInterface.SurvAnimInterface_C.EndKnockDown
// (Public, BlueprintCallable, BlueprintEvent)

void ISurvAnimInterface_C::EndKnockDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "EndKnockDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetDriving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDriving                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetDriving(bool* IsDriving)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetDriving");

	Params::SurvAnimInterface_C_GetDriving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDriving != nullptr)
		*IsDriving = Parms.IsDriving;
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetFireSprayOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  SprayOffset                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetFireSprayOffset(double* SprayOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetFireSprayOffset");

	Params::SurvAnimInterface_C_GetFireSprayOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SprayOffset != nullptr)
		*SprayOffset = Parms.SprayOffset;
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetFPPTacticalGripOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       GripOffset                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetFPPTacticalGripOffset(struct FTransform* GripOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetFPPTacticalGripOffset");

	Params::SurvAnimInterface_C_GetFPPTacticalGripOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripOffset != nullptr)
		*GripOffset = std::move(Parms.GripOffset);
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetInteractAnim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    Sequence                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetInteractAnim(class UAnimSequence** Sequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetInteractAnim");

	Params::SurvAnimInterface_C_GetInteractAnim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Sequence != nullptr)
		*Sequence = Parms.Sequence;
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetInventoryLayerState
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Active_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetInventoryLayerState(bool* Active_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetInventoryLayerState");

	Params::SurvAnimInterface_C_GetInventoryLayerState Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Active_ != nullptr)
		*Active_ = Parms.Active_;
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetKneltTime
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetKneltTime(double* Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetKneltTime");

	Params::SurvAnimInterface_C_GetKneltTime Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Time != nullptr)
		*Time = Parms.Time;
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetTacticalGripOffset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       GripOffset                                             (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetTacticalGripOffset(struct FTransform* GripOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetTacticalGripOffset");

	Params::SurvAnimInterface_C_GetTacticalGripOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripOffset != nullptr)
		*GripOffset = std::move(Parms.GripOffset);
}


// Function SurvAnimInterface.SurvAnimInterface_C.GetTacticalGripPoses
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_WeaponGripType                GripPoses                                              (Parm, OutParm, HasGetValueTypeHash)

void ISurvAnimInterface_C::GetTacticalGripPoses(struct FS_WeaponGripType* GripPoses)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "GetTacticalGripPoses");

	Params::SurvAnimInterface_C_GetTacticalGripPoses Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GripPoses != nullptr)
		*GripPoses = std::move(Parms.GripPoses);
}


// Function SurvAnimInterface.SurvAnimInterface_C.InFlatSurface
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::InFlatSurface(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "InFlatSurface");

	Params::SurvAnimInterface_C_InFlatSurface Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvAnimInterface.SurvAnimInterface_C.IsInTurn
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::IsInTurn(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "IsInTurn");

	Params::SurvAnimInterface_C_IsInTurn Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvAnimInterface.SurvAnimInterface_C.IsJumpPrepare
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::IsJumpPrepare(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "IsJumpPrepare");

	Params::SurvAnimInterface_C_IsJumpPrepare Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvAnimInterface.SurvAnimInterface_C.IsReloading
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Param_IsReloading                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::IsReloading(bool* Param_IsReloading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "IsReloading");

	Params::SurvAnimInterface_C_IsReloading Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_IsReloading != nullptr)
		*Param_IsReloading = Parms.Param_IsReloading;
}


// Function SurvAnimInterface.SurvAnimInterface_C.IsRootRotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    RM                                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::IsRootRotation(bool* RM)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "IsRootRotation");

	Params::SurvAnimInterface_C_IsRootRotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (RM != nullptr)
		*RM = Parms.RM;
}


// Function SurvAnimInterface.SurvAnimInterface_C.IsSpineMontage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::IsSpineMontage(bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "IsSpineMontage");

	Params::SurvAnimInterface_C_IsSpineMontage Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetDash
// (Public, BlueprintCallable, BlueprintEvent)

void ISurvAnimInterface_C::SetDash()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetDash");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetDriving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    InCar                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Driver                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ECarTipe                                CarTipe                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   SitIndex                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetDriving(bool InCar, bool Driver, ECarTipe CarTipe, int32 SitIndex, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetDriving");

	Params::SurvAnimInterface_C_SetDriving Parms{};

	Parms.InCar = InCar;
	Parms.Driver = Driver;
	Parms.CarTipe = CarTipe;
	Parms.SitIndex = SitIndex;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetFireSprayOffset
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  SprayOffset                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetFireSprayOffset(double SprayOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetFireSprayOffset");

	Params::SurvAnimInterface_C_SetFireSprayOffset Parms{};

	Parms.SprayOffset = SprayOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetJumpPrepare
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetJumpPrepare(bool Value, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetJumpPrepare");

	Params::SurvAnimInterface_C_SetJumpPrepare Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetLeftHandVariant
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Variant                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetLeftHandVariant(double Variant, bool* Success)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetLeftHandVariant");

	Params::SurvAnimInterface_C_SetLeftHandVariant Parms{};

	Parms.Variant = Variant;

	UObject::ProcessEvent(Func, &Parms);

	if (Success != nullptr)
		*Success = Parms.Success;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetLootTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       TargetTransform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetLootTarget(const struct FTransform& TargetTransform, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetLootTarget");

	Params::SurvAnimInterface_C_SetLootTarget Parms{};

	Parms.TargetTransform = std::move(TargetTransform);

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetReloadingState
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReloading                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetReloadingState(bool IsReloading)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetReloadingState");

	Params::SurvAnimInterface_C_SetReloadingState Parms{};

	Parms.IsReloading = IsReloading;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetRubberDirection
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Direction                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetRubberDirection(double Direction, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetRubberDirection");

	Params::SurvAnimInterface_C_SetRubberDirection Parms{};

	Parms.Direction = Direction;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetSpineMotageBool
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Value                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Nothing                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetSpineMotageBool(bool Value, bool* Nothing)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetSpineMotageBool");

	Params::SurvAnimInterface_C_SetSpineMotageBool Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);

	if (Nothing != nullptr)
		*Nothing = Parms.Nothing;
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetThrowableHandPose
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimSequence*                    HandPose                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetThrowableHandPose(class UAnimSequence* HandPose)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetThrowableHandPose");

	Params::SurvAnimInterface_C_SetThrowableHandPose Parms{};

	Parms.HandPose = HandPose;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetUsableItemSettings
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_EatConfiguration              ItemSettings                                           (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetUsableItemSettings(const struct FS_EatConfiguration& ItemSettings)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetUsableItemSettings");

	Params::SurvAnimInterface_C_SetUsableItemSettings Parms{};

	Parms.ItemSettings = std::move(ItemSettings);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetWeaponAnims
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_PlayerWeaponAnim              WeaponAnims                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     HipFirePoseStand                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     HipFirePoseCrouch                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetWeaponAnims(const struct FS_PlayerWeaponAnim& WeaponAnims, class UAnimMontage* HipFirePoseStand, class UAnimMontage* HipFirePoseCrouch)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetWeaponAnims");

	Params::SurvAnimInterface_C_SetWeaponAnims Parms{};

	Parms.WeaponAnims = std::move(WeaponAnims);
	Parms.HipFirePoseStand = HipFirePoseStand;
	Parms.HipFirePoseCrouch = HipFirePoseCrouch;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.SetWeaponGripType
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           TacticalGripName                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ISurvAnimInterface_C::SetWeaponGripType(const class FString& TacticalGripName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "SetWeaponGripType");

	Params::SurvAnimInterface_C_SetWeaponGripType Parms{};

	Parms.TacticalGripName = std::move(TacticalGripName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurvAnimInterface.SurvAnimInterface_C.StartKnockdown
// (Public, BlueprintCallable, BlueprintEvent)

void ISurvAnimInterface_C::StartKnockdown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurvAnimInterface_C", "StartKnockdown");

	UObject::ProcessEvent(Func, nullptr);
}

}

