#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SurviveLocomotion

#include "Basic.hpp"

#include "SurviveLocomotion_classes.hpp"
#include "SurviveLocomotion_parameters.hpp"


namespace SDK
{

// Function SurviveLocomotion.SurviveLocomotion_C.AimToIdle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::AimToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AimToIdle");

	Params::SurviveLocomotion_C_AimToIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimGraph
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FPoseLink                        Param_AnimGraph                                        (Parm, OutParm, NoDestructor)

void USurviveLocomotion_C::AnimGraph(struct FPoseLink* Param_AnimGraph)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimGraph");

	Params::SurviveLocomotion_C_AnimGraph Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Param_AnimGraph != nullptr)
		*Param_AnimGraph = std::move(Parms.Param_AnimGraph);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_BrokenStrafe
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_BrokenStrafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_BrokenStrafe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_EnteredStrafe
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_EnteredStrafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_EnteredStrafe");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_MovingFullBlend
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_MovingFullBlend()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_MovingFullBlend");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_MovingStartEntered
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_MovingStartEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_MovingStartEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_MovingStateEntered
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_MovingStateEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_MovingStateEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_OnEnterWalk
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_OnEnterWalk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_OnEnterWalk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_OnIdleToMoving
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_OnIdleToMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_OnIdleToMoving");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_OnStartMoveTrasition
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_OnStartMoveTrasition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_OnStartMoveTrasition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_OnStopStateEntry
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_OnStopStateEntry()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_OnStopStateEntry");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_PivotBase
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_PivotBase()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_PivotBase");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_PivotEntered
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_PivotEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_PivotEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_StartEnded
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_StartEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_StartEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_StartToMoveTransitionEnded
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_StartToMoveTransitionEnded()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_StartToMoveTransitionEnded");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_StopStateEntered
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_StopStateEntered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_StopStateEntered");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.AnimNotify_StopStateLeft
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::AnimNotify_StopStateLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "AnimNotify_StopStateLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.BlueprintInitializeAnimation
// (Event, Public, BlueprintEvent)

void USurviveLocomotion_C::BlueprintInitializeAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "BlueprintInitializeAnimation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.BlueprintThreadSafeUpdateAnimation
// (Event, Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveLocomotion_C::BlueprintThreadSafeUpdateAnimation(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "BlueprintThreadSafeUpdateAnimation");

	Params::SurviveLocomotion_C_BlueprintThreadSafeUpdateAnimation Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirBack
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirBack()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirBack");

	Params::SurviveLocomotion_C_DirBack Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirBack_Pivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirBack_Pivot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirBack_Pivot");

	Params::SurviveLocomotion_C_DirBack_Pivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirForward
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirForward()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirForward");

	Params::SurviveLocomotion_C_DirForward Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirForward_Pivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirForward_Pivot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirForward_Pivot");

	Params::SurviveLocomotion_C_DirForward_Pivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirLeft
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirLeft");

	Params::SurviveLocomotion_C_DirLeft Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirLeft_Pivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirLeft_Pivot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirLeft_Pivot");

	Params::SurviveLocomotion_C_DirLeft_Pivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirRight
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirRight");

	Params::SurviveLocomotion_C_DirRight Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.DirRight_Pivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::DirRight_Pivot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "DirRight_Pivot");

	Params::SurviveLocomotion_C_DirRight_Pivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.ExecuteUbergraph_SurviveLocomotion
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveLocomotion_C::ExecuteUbergraph_SurviveLocomotion(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ExecuteUbergraph_SurviveLocomotion");

	Params::SurviveLocomotion_C_ExecuteUbergraph_SurviveLocomotion Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.FromPivotToMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::FromPivotToMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "FromPivotToMoving");

	Params::SurviveLocomotion_C_FromPivotToMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.FromPivotToStrafe
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::FromPivotToStrafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "FromPivotToStrafe");

	Params::SurviveLocomotion_C_FromPivotToStrafe Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.FromStartToMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::FromStartToMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "FromStartToMoving");

	Params::SurviveLocomotion_C_FromStartToMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.FromStopToIdle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::FromStopToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "FromStopToIdle");

	Params::SurviveLocomotion_C_FromStopToIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.HasMoveInput
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::HasMoveInput()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "HasMoveInput");

	Params::SurviveLocomotion_C_HasMoveInput Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IdleCrouchToStand
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IdleCrouchToStand()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IdleCrouchToStand");

	Params::SurviveLocomotion_C_IdleCrouchToStand Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IdleStandToCrouch
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IdleStandToCrouch()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IdleStandToCrouch");

	Params::SurviveLocomotion_C_IdleStandToCrouch Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IdleToAim
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IdleToAim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IdleToAim");

	Params::SurviveLocomotion_C_IdleToAim Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IdleToMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IdleToMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IdleToMoving");

	Params::SurviveLocomotion_C_IdleToMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IsAiming?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IsAiming_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IsAiming?");

	Params::SurviveLocomotion_C_IsAiming_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IsAimingMain
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IsAimingMain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IsAimingMain");

	Params::SurviveLocomotion_C_IsAimingMain Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.IsWalking?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::IsWalking_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "IsWalking?");

	Params::SurviveLocomotion_C_IsWalking_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.JogSlowRule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::JogSlowRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "JogSlowRule");

	Params::SurviveLocomotion_C_JogSlowRule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.MovingToIdle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::MovingToIdle()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "MovingToIdle");

	Params::SurviveLocomotion_C_MovingToIdle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.OnNewFunction
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void USurviveLocomotion_C::OnNewFunction(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "OnNewFunction");

	Params::SurviveLocomotion_C_OnNewFunction Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdatePivots
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void USurviveLocomotion_C::OnUpdatePivots(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "OnUpdatePivots");

	Params::SurviveLocomotion_C_OnUpdatePivots Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdateStartAnims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void USurviveLocomotion_C::OnUpdateStartAnims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "OnUpdateStartAnims");

	Params::SurviveLocomotion_C_OnUpdateStartAnims Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.OnUpdateStopAnims
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FAnimUpdateContext               Context                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// struct FAnimNodeReference               Node                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)

void USurviveLocomotion_C::OnUpdateStopAnims(const struct FAnimUpdateContext& Context, const struct FAnimNodeReference& Node)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "OnUpdateStopAnims");

	Params::SurviveLocomotion_C_OnUpdateStopAnims Parms{};

	Parms.Context = std::move(Context);
	Parms.Node = std::move(Node);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.ResetStartAnimTime
// (Public, BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::ResetStartAnimTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ResetStartAnimTime");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.ResetTimers
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::ResetTimers()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ResetTimers");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.SettingMoveStartPos
// (Public, BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::SettingMoveStartPos()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "SettingMoveStartPos");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.SMToStrafe
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::SMToStrafe()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "SMToStrafe");

	Params::SurviveLocomotion_C_SMToStrafe Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.StopCrouching
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::StopCrouching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "StopCrouching");

	Params::SurviveLocomotion_C_StopCrouching Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.StopFromSprint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::StopFromSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "StopFromSprint");

	Params::SurviveLocomotion_C_StopFromSprint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.StopStanding
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::StopStanding()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "StopStanding");

	Params::SurviveLocomotion_C_StopStanding Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.StrafeBlendOutTimer
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Time                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void USurviveLocomotion_C::StrafeBlendOutTimer(double Time)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "StrafeBlendOutTimer");

	Params::SurviveLocomotion_C_StrafeBlendOutTimer Parms{};

	Parms.Time = Time;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SurviveLocomotion.SurviveLocomotion_C.StrafeTimerExecute
// (BlueprintCallable, BlueprintEvent)

void USurviveLocomotion_C::StrafeTimerExecute()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "StrafeTimerExecute");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SurviveLocomotion.SurviveLocomotion_C.ToNormalMovement
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::ToNormalMovement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ToNormalMovement");

	Params::SurviveLocomotion_C_ToNormalMovement Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.ToPivot
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::ToPivot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ToPivot");

	Params::SurviveLocomotion_C_ToPivot Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.ToSprint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::ToSprint()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ToSprint");

	Params::SurviveLocomotion_C_ToSprint Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.ToStartMoving
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::ToStartMoving()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ToStartMoving");

	Params::SurviveLocomotion_C_ToStartMoving Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.ToStop
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::ToStop()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "ToStop");

	Params::SurviveLocomotion_C_ToStop Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function SurviveLocomotion.SurviveLocomotion_C.WalkRule
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool USurviveLocomotion_C::WalkRule()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SurviveLocomotion_C", "WalkRule");

	Params::SurviveLocomotion_C_WalkRule Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

