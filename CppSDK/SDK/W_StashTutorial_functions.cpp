#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_StashTutorial

#include "Basic.hpp"

#include "W_StashTutorial_classes.hpp"
#include "W_StashTutorial_parameters.hpp"


namespace SDK
{

// Function W_StashTutorial.W_StashTutorial_C.CategoryHint_Click
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::CategoryHint_Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "CategoryHint_Click");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.CategoryHint_Click_2
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::CategoryHint_Click_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "CategoryHint_Click_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_StashTutorial_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.CreateStashHighlightedItem
// (Public, BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::CreateStashHighlightedItem()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "CreateStashHighlightedItem");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_StashTutorial_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.EquipHint_Click
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::EquipHint_Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "EquipHint_Click");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.ExecuteUbergraph_W_StashTutorial
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StashTutorial_C::ExecuteUbergraph_W_StashTutorial(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "ExecuteUbergraph_W_StashTutorial");

	Params::W_StashTutorial_C_ExecuteUbergraph_W_StashTutorial Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StashTutorial.W_StashTutorial_C.FadeIn
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.FadeOut
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::FadeOut()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "FadeOut");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.FakeItemFadeInTick
// (Public, BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::FakeItemFadeInTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "FakeItemFadeInTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.FakeItemFadeOutTick
// (Public, BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::FakeItemFadeOutTick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "FakeItemFadeOutTick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.FakeItemFading
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_FakeItemSlot_C*                Item                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    IsFadeIn                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StashTutorial_C::FakeItemFading(class UW_FakeItemSlot_C* Item, bool IsFadeIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "FakeItemFading");

	Params::W_StashTutorial_C_FakeItemFading Parms{};

	Parms.Item = Item;
	Parms.IsFadeIn = IsFadeIn;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StashTutorial.W_StashTutorial_C.IsTutorialDone__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::IsTutorialDone__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "IsTutorialDone__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.MoveHint_Click
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::MoveHint_Click()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "MoveHint_Click");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.OnAddItemToInventory
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  From                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSIContainer_C*                  To                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      FromSlotRef                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class UJSI_Slot_C*                      ToSlotRef                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// bool                                    ToEmptySlot_                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    MovedAll_                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_StashTutorial_C::OnAddItemToInventory(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "OnAddItemToInventory");

	Params::W_StashTutorial_C_OnAddItemToInventory Parms{};

	Parms.From = From;
	Parms.To = To;
	Parms.FromSlotRef = FromSlotRef;
	Parms.ToSlotRef = ToSlotRef;
	Parms.ToEmptySlot_ = ToEmptySlot_;
	Parms.MovedAll_ = MovedAll_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StashTutorial.W_StashTutorial_C.SetInventoryContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_StashTutorial_C::SetInventoryContainer(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "SetInventoryContainer");

	Params::W_StashTutorial_C_SetInventoryContainer Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StashTutorial.W_StashTutorial_C.SetStashContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UJSIContainer_C*                  Container                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_StashTutorial_C::SetStashContainer(class UJSIContainer_C* Container)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "SetStashContainer");

	Params::W_StashTutorial_C_SetStashContainer Parms{};

	Parms.Container = Container;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_StashTutorial.W_StashTutorial_C.ShowMoveHintAgain
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::ShowMoveHintAgain()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "ShowMoveHintAgain");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.SolveZOrder
// (Public, BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::SolveZOrder()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "SolveZOrder");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.StartTutorial
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::StartTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "StartTutorial");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_StashTutorial.W_StashTutorial_C.StopTutorial
// (BlueprintCallable, BlueprintEvent)

void UW_StashTutorial_C::StopTutorial()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_StashTutorial_C", "StopTutorial");

	UObject::ProcessEvent(Func, nullptr);
}

}

