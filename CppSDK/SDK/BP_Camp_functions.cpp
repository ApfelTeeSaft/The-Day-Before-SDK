#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_Camp

#include "Basic.hpp"

#include "BP_Camp_classes.hpp"
#include "BP_Camp_parameters.hpp"


namespace SDK
{

// Function BP_Camp.BP_Camp_C.BndEvt__RemoveCamp_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              OverlappedComponent                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// int32                                   OtherBodyIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::BndEvt__RemoveCamp_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "BndEvt__RemoveCamp_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature");

	Params::BP_Camp_C_BndEvt__RemoveCamp_K2Node_ComponentBoundEvent_0_ComponentEndOverlapSignature__DelegateSignature Parms{};

	Parms.OverlappedComponent = OverlappedComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.OtherBodyIndex = OtherBodyIndex;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Camp.BP_Camp_C.BuildingStateUpd
// (BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::BuildingStateUpd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "BuildingStateUpd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.CampingBuildingState
// (BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::CampingBuildingState()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "CampingBuildingState");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.CampingBuilt
// (BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::CampingBuilt()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "CampingBuilt");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.CanBeRemoved
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Can                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::CanBeRemoved(bool* Can)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "CanBeRemoved");

	Params::BP_Camp_C_CanBeRemoved Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Can != nullptr)
		*Can = Parms.Can;
}


// Function BP_Camp.BP_Camp_C.ExecuteUbergraph_BP_Camp
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::ExecuteUbergraph_BP_Camp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "ExecuteUbergraph_BP_Camp");

	Params::BP_Camp_C_ExecuteUbergraph_BP_Camp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Camp.BP_Camp_C.GetChairs
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class ABP_CampChair_C*>          Result                                                 (Parm, OutParm)

void ABP_Camp_C::GetChairs(TArray<class ABP_CampChair_C*>* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "GetChairs");

	Params::BP_Camp_C_GetChairs Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Result != nullptr)
		*Result = std::move(Parms.Result);
}


// Function BP_Camp.BP_Camp_C.GetChildActorMeshes
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UChildActorComponent*             ChildActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// TArray<class UStaticMeshComponent*>     Param_Meshes                                           (Parm, OutParm, ContainsInstancedReference)

void ABP_Camp_C::GetChildActorMeshes(class UChildActorComponent* ChildActor, TArray<class UStaticMeshComponent*>* Param_Meshes)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "GetChildActorMeshes");

	Params::BP_Camp_C_GetChildActorMeshes Parms{};

	Parms.ChildActor = ChildActor;

	UObject::ProcessEvent(Func, &Parms);

	if (Param_Meshes != nullptr)
		*Param_Meshes = std::move(Parms.Param_Meshes);
}


// Function BP_Camp.BP_Camp_C.GetClosestPoint
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           Actor                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::GetClosestPoint(class AActor* Player, class AActor** Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "GetClosestPoint");

	Params::BP_Camp_C_GetClosestPoint Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Actor != nullptr)
		*Actor = Parms.Actor;
}


// Function BP_Camp.BP_Camp_C.GetFreeChair
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Found                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class ABP_CampChair_C*                  Chair                                                  (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::GetFreeChair(bool* Found, class ABP_CampChair_C** Chair)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "GetFreeChair");

	Params::BP_Camp_C_GetFreeChair Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found != nullptr)
		*Found = Parms.Found;

	if (Chair != nullptr)
		*Chair = Parms.Chair;
}


// Function BP_Camp.BP_Camp_C.OnRemoveCamp
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::OnRemoveCamp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "OnRemoveCamp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_Camp_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.RemoveSelf
// (BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::RemoveSelf()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "RemoveSelf");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.StoreAllMeshes
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_Camp_C::StoreAllMeshes()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "StoreAllMeshes");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_Camp.BP_Camp_C.TogglePlayerBonfireCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::TogglePlayerBonfireCamera(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "TogglePlayerBonfireCamera");

	Params::BP_Camp_C_TogglePlayerBonfireCamera Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Camp.BP_Camp_C.TogglePlayerCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::TogglePlayerCamera(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "TogglePlayerCamera");

	Params::BP_Camp_C_TogglePlayerCamera Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_Camp.BP_Camp_C.TogglePlayerChairCamera
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_Camp_C::TogglePlayerChairCamera(class APawn* Player)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_Camp_C", "TogglePlayerChairCamera");

	Params::BP_Camp_C_TogglePlayerChairCamera Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);
}

}

