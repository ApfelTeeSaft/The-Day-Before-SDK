#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerDeadBodyV2

#include "Basic.hpp"

#include "DefaultItemInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DropItemEntry_structs.hpp"
#include "EDeadBodyEnvType_structs.hpp"
#include "ContainerPickupsInfo_structs.hpp"
#include "EDeadBodyState_structs.hpp"
#include "EquipmentData_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.ActivateDeadBody
// 0x0060 (0x0060 - 0x0000)
struct PlayerDeadBodyV2_C_ActivateDeadBody final
{
public:
	TArray<struct FDropItemEntry>                 DroppedItems;                                      // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                HitVector;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnDeathVelocity;                                   // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Player;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Killer;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RadialDamage;                                      // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animed;                                            // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_ActivateDeadBody) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_ActivateDeadBody");
static_assert(sizeof(PlayerDeadBodyV2_C_ActivateDeadBody) == 0x000060, "Wrong size on PlayerDeadBodyV2_C_ActivateDeadBody");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, DroppedItems) == 0x000000, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::DroppedItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, HitVector) == 0x000010, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::HitVector' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, OnDeathVelocity) == 0x000028, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::OnDeathVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, HitBoneName) == 0x000040, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, Param_Player) == 0x000048, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, Killer) == 0x000050, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, RadialDamage) == 0x000058, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::RadialDamage' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ActivateDeadBody, Animed) == 0x000059, "Member 'PlayerDeadBodyV2_C_ActivateDeadBody::Animed' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.ApplyPhysics
// 0x0210 (0x0210 - 0x0000)
struct PlayerDeadBodyV2_C_ApplyPhysics final
{
public:
	struct FVector                                HitVector;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnDeathVelocity;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Killer;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RadialDamage;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Impulse;                                           // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78[0x8];                                       // 0x0078(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FQuat                                  CallFunc_Quat_FindBetweenVectors_ReturnValue;      // 0x0080(0x0020)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakQuat_X;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQuat_Y;                              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQuat_Z;                              // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakQuat_W;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x00D0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00E8(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetImpulse_Impulse;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue_1;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LimitPhysicsVelocity_ResultVelocity;      // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_Normal2D_ReturnValue;              // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_X_ImplicitCast;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Y_ImplicitCast;                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_ApplyPhysics) == 0x000010, "Wrong alignment on PlayerDeadBodyV2_C_ApplyPhysics");
static_assert(sizeof(PlayerDeadBodyV2_C_ApplyPhysics) == 0x000210, "Wrong size on PlayerDeadBodyV2_C_ApplyPhysics");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, HitVector) == 0x000000, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::HitVector' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, OnDeathVelocity) == 0x000018, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::OnDeathVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, HitBoneName) == 0x000030, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, Killer) == 0x000038, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, RadialDamage) == 0x000040, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::RadialDamage' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, Impulse) == 0x000048, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::Impulse' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_GetSocketLocation_ReturnValue) == 0x000060, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Quat_FindBetweenVectors_ReturnValue) == 0x000080, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Quat_FindBetweenVectors_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000A0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_BreakQuat_X) == 0x0000A4, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_BreakQuat_X' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_BreakQuat_Y) == 0x0000A8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_BreakQuat_Y' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_BreakQuat_Z) == 0x0000AC, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_BreakQuat_Z' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_BreakQuat_W) == 0x0000B0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_BreakQuat_W' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_MakeVector_ReturnValue) == 0x0000B8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, K2Node_CreateDelegate_OutputDelegate) == 0x0000D0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000E0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000E8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_GetImpulse_Impulse) == 0x0000F0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_GetImpulse_Impulse' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000F8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Conv_DoubleToVector_ReturnValue_1) == 0x000110, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Conv_DoubleToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_LimitPhysicsVelocity_ResultVelocity) == 0x000128, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_LimitPhysicsVelocity_ResultVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000140, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_ClampVectorSize_ReturnValue) == 0x000158, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000170, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000188, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Vector_Normal2D_ReturnValue) == 0x0001A0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Vector_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0001B8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0001D0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_MakeVector_X_ImplicitCast) == 0x0001E8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_MakeVector_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_MakeVector_Y_ImplicitCast) == 0x0001F0, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_MakeVector_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_MakeVector_Z_ImplicitCast) == 0x0001F8, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyPhysics, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x000200, "Member 'PlayerDeadBodyV2_C_ApplyPhysics::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.ApplyWaterFloatForce
// 0x001C (0x001C - 0x0000)
struct PlayerDeadBodyV2_C_ApplyWaterFloatForce final
{
public:
	class FName                                   Temp_name_Variable;                                // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable_1;                              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0014(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_ApplyWaterFloatForce) == 0x000004, "Wrong alignment on PlayerDeadBodyV2_C_ApplyWaterFloatForce");
static_assert(sizeof(PlayerDeadBodyV2_C_ApplyWaterFloatForce) == 0x00001C, "Wrong size on PlayerDeadBodyV2_C_ApplyWaterFloatForce");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyWaterFloatForce, Temp_name_Variable) == 0x000000, "Member 'PlayerDeadBodyV2_C_ApplyWaterFloatForce::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyWaterFloatForce, Temp_name_Variable_1) == 0x000008, "Member 'PlayerDeadBodyV2_C_ApplyWaterFloatForce::Temp_name_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyWaterFloatForce, Temp_bool_Variable) == 0x000010, "Member 'PlayerDeadBodyV2_C_ApplyWaterFloatForce::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ApplyWaterFloatForce, K2Node_Select_Default) == 0x000014, "Member 'PlayerDeadBodyV2_C_ApplyWaterFloatForce::K2Node_Select_Default' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature
// 0x0020 (0x0020 - 0x0000)
struct PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(sizeof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature) == 0x000020, "Wrong size on PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'PlayerDeadBodyV2_C_BndEvt__PlayerDeadBodyV2_WaterDetectionSphere_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.BodyWaterForce
// 0x0098 (0x0098 - 0x0000)
struct PlayerDeadBodyV2_C_BodyWaterForce final
{
public:
	class FName                                   InSocketName;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Force;                                             // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMass_ReturnValue;                      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_BodyWaterForce) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_BodyWaterForce");
static_assert(sizeof(PlayerDeadBodyV2_C_BodyWaterForce) == 0x000098, "Wrong size on PlayerDeadBodyV2_C_BodyWaterForce");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, InSocketName) == 0x000000, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::InSocketName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, Force) == 0x000008, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::Force' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, Temp_real_Variable) == 0x000010, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, Temp_real_Variable_1) == 0x000018, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, Temp_bool_Variable) == 0x000020, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_GetMass_ReturnValue) == 0x000024, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_GetMass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, K2Node_Select_Default) == 0x000030, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_MakeVector_ReturnValue) == 0x000040, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_GetSocketLocation_ReturnValue) == 0x000058, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_BreakVector_X) == 0x000070, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_BreakVector_Y) == 0x000078, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_BreakVector_Z) == 0x000080, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_BodyWaterForce, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'PlayerDeadBodyV2_C_BodyWaterForce::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.CopyMaterials
// 0x0060 (0x0060 - 0x0000)
struct PlayerDeadBodyV2_C_CopyMaterials final
{
public:
	class USkeletalMeshComponent*                 TargetMesh;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0010(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item;                           // 0x0028(0x0028)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_CopyMaterials) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_CopyMaterials");
static_assert(sizeof(PlayerDeadBodyV2_C_CopyMaterials) == 0x000060, "Wrong size on PlayerDeadBodyV2_C_CopyMaterials");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, TargetMesh) == 0x000000, "Member 'PlayerDeadBodyV2_C_CopyMaterials::TargetMesh' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, NewMesh) == 0x000008, "Member 'PlayerDeadBodyV2_C_CopyMaterials::NewMesh' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, CallFunc_GetMaterials_ReturnValue) == 0x000010, "Member 'PlayerDeadBodyV2_C_CopyMaterials::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, Temp_int_Array_Index_Variable) == 0x000020, "Member 'PlayerDeadBodyV2_C_CopyMaterials::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'PlayerDeadBodyV2_C_CopyMaterials::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, CallFunc_Array_Get_Item) == 0x000028, "Member 'PlayerDeadBodyV2_C_CopyMaterials::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, Temp_int_Loop_Counter_Variable) == 0x000050, "Member 'PlayerDeadBodyV2_C_CopyMaterials::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, CallFunc_Less_IntInt_ReturnValue) == 0x000054, "Member 'PlayerDeadBodyV2_C_CopyMaterials::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMaterials, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'PlayerDeadBodyV2_C_CopyMaterials::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.CopyMeshes
// 0x0040 (0x0040 - 0x0000)
struct PlayerDeadBodyV2_C_CopyMeshes final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(PlayerDeadBodyV2_C_CopyMeshes) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_CopyMeshes");
static_assert(sizeof(PlayerDeadBodyV2_C_CopyMeshes) == 0x000040, "Wrong size on PlayerDeadBodyV2_C_CopyMeshes");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, Param_Player) == 0x000000, "Member 'PlayerDeadBodyV2_C_CopyMeshes::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PlayerDeadBodyV2_C_CopyMeshes::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, K2Node_DynamicCast_AsSurvival_Player) == 0x000010, "Member 'PlayerDeadBodyV2_C_CopyMeshes::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PlayerDeadBodyV2_C_CopyMeshes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, K2Node_MakeArray_Array) == 0x000020, "Member 'PlayerDeadBodyV2_C_CopyMeshes::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopyMeshes, K2Node_MakeArray_Array_1) == 0x000030, "Member 'PlayerDeadBodyV2_C_CopyMeshes::K2Node_MakeArray_Array_1' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.CopySkeletal
// 0x0058 (0x0058 - 0x0000)
struct PlayerDeadBodyV2_C_CopySkeletal final
{
public:
	class USkeletalMeshComponent*                 TargetSkeletal;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 NewSkeletal;                                       // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInterface*>             CallFunc_GetMaterials_ReturnValue;                 // 0x0020(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_CopySkeletal) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_CopySkeletal");
static_assert(sizeof(PlayerDeadBodyV2_C_CopySkeletal) == 0x000058, "Wrong size on PlayerDeadBodyV2_C_CopySkeletal");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, TargetSkeletal) == 0x000000, "Member 'PlayerDeadBodyV2_C_CopySkeletal::TargetSkeletal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, NewSkeletal) == 0x000008, "Member 'PlayerDeadBodyV2_C_CopySkeletal::NewSkeletal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, Temp_int_Loop_Counter_Variable) == 0x000010, "Member 'PlayerDeadBodyV2_C_CopySkeletal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, Temp_int_Array_Index_Variable) == 0x000014, "Member 'PlayerDeadBodyV2_C_CopySkeletal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_GetMaterials_ReturnValue) == 0x000020, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_Array_Get_Item) == 0x000038, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000048, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_IsValid_ReturnValue_1) == 0x000050, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletal, CallFunc_BooleanAND_ReturnValue) == 0x000051, "Member 'PlayerDeadBodyV2_C_CopySkeletal::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.CopySkeletals
// 0x0058 (0x0058 - 0x0000)
struct PlayerDeadBodyV2_C_CopySkeletals final
{
public:
	TArray<class USkeletalMeshComponent*>         TargetSkeletal;                                    // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	TArray<class USkeletalMeshComponent*>         NewSkeletal;                                       // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_CopySkeletals) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_CopySkeletals");
static_assert(sizeof(PlayerDeadBodyV2_C_CopySkeletals) == 0x000058, "Wrong size on PlayerDeadBodyV2_C_CopySkeletals");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, TargetSkeletal) == 0x000000, "Member 'PlayerDeadBodyV2_C_CopySkeletals::TargetSkeletal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, NewSkeletal) == 0x000010, "Member 'PlayerDeadBodyV2_C_CopySkeletals::NewSkeletal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, Temp_int_Array_Index_Variable) == 0x000020, "Member 'PlayerDeadBodyV2_C_CopySkeletals::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_Get_Item) == 0x000028, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, Temp_int_Loop_Counter_Variable) == 0x000030, "Member 'PlayerDeadBodyV2_C_CopySkeletals::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_Length_ReturnValue_1) == 0x000048, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_Length_ReturnValue_2) == 0x00004C, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000050, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000051, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x000052, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_BooleanAND_ReturnValue) == 0x000053, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CopySkeletals, CallFunc_BooleanAND_ReturnValue_1) == 0x000054, "Member 'PlayerDeadBodyV2_C_CopySkeletals::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.Create Loot
// 0x03D0 (0x03D0 - 0x0000)
struct PlayerDeadBodyV2_C_Create_Loot final
{
public:
	TArray<struct FDropItemEntry>                 DroppedItems;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	class APawn*                                  Param_Player;                                      // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         B;                                                 // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rows;                                              // 0x001C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             DefaultLocation;                                   // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDefaultItemInfo>               DefaultItems;                                      // 0x0080(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Max_ReturnValue;                          // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   Temp_text_Variable;                                // 0x00B0(0x0018)(ConstParm)
	class ADeadBodyLootPoint_C*                   CallFunc_FinishSpawningActor_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDropItemEntry                         CallFunc_Array_Get_Item;                           // 0x00D8(0x0240)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x0340(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_SetFieldsInStruct_StructOut;                // 0x0388(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_Create_Loot) == 0x000010, "Wrong alignment on PlayerDeadBodyV2_C_Create_Loot");
static_assert(sizeof(PlayerDeadBodyV2_C_Create_Loot) == 0x0003D0, "Wrong size on PlayerDeadBodyV2_C_Create_Loot");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, DroppedItems) == 0x000000, "Member 'PlayerDeadBodyV2_C_Create_Loot::DroppedItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, Param_Player) == 0x000010, "Member 'PlayerDeadBodyV2_C_Create_Loot::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, B) == 0x000018, "Member 'PlayerDeadBodyV2_C_Create_Loot::B' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, Rows) == 0x00001C, "Member 'PlayerDeadBodyV2_C_Create_Loot::Rows' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, DefaultLocation) == 0x000020, "Member 'PlayerDeadBodyV2_C_Create_Loot::DefaultLocation' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, DefaultItems) == 0x000080, "Member 'PlayerDeadBodyV2_C_Create_Loot::DefaultItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_HasAuthority_ReturnValue) == 0x000090, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'PlayerDeadBodyV2_C_Create_Loot::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, Temp_int_Array_Index_Variable) == 0x00009C, "Member 'PlayerDeadBodyV2_C_Create_Loot::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Max_ReturnValue) == 0x0000A0, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Max_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000A8, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, Temp_text_Variable) == 0x0000B0, "Member 'PlayerDeadBodyV2_C_Create_Loot::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_FinishSpawningActor_ReturnValue) == 0x0000C8, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0000D0, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Array_Get_Item) == 0x0000D8, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Array_Length_ReturnValue) == 0x000318, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Less_IntInt_ReturnValue) == 0x00031C, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_BreakVector2D_X) == 0x000320, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_BreakVector2D_Y) == 0x000328, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_FTrunc_ReturnValue) == 0x000330, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_FTrunc_ReturnValue_1) == 0x000334, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Multiply_IntInt_ReturnValue) == 0x000338, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, K2Node_MakeStruct_DefaultItemInfo) == 0x000340, "Member 'PlayerDeadBodyV2_C_Create_Loot::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Add_IntInt_ReturnValue_1) == 0x000380, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, K2Node_SetFieldsInStruct_StructOut) == 0x000388, "Member 'PlayerDeadBodyV2_C_Create_Loot::K2Node_SetFieldsInStruct_StructOut' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Create_Loot, CallFunc_Array_Add_ReturnValue) == 0x0003C8, "Member 'PlayerDeadBodyV2_C_Create_Loot::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.CreateDropBox
// 0x03E0 (0x03E0 - 0x0000)
struct PlayerDeadBodyV2_C_CreateDropBox final
{
public:
	class APawn*                                  Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FContainerPickupsInfo>          ContainerItems;                                    // 0x0008(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	TArray<struct FDefaultItemInfo>               DefaultItems;                                      // 0x0018(0x0010)(Edit, BlueprintVisible, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0030(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_163[0x1];                                      // 0x0163(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x3];                                      // 0x0239(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FContainerPickupsInfo                  CallFunc_Array_Get_Item;                           // 0x0248(0x0068)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDefaultItemInfo                       K2Node_MakeStruct_DefaultItemInfo;                 // 0x02B8(0x0040)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue_1;           // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Temp_text_Variable;                                // 0x0318(0x0018)(ConstParm)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0338(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33C[0x4];                                      // 0x033C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_358[0x8];                                      // 0x0358(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0360(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ADropBox_LP_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_CreateDropBox) == 0x000010, "Wrong alignment on PlayerDeadBodyV2_C_CreateDropBox");
static_assert(sizeof(PlayerDeadBodyV2_C_CreateDropBox) == 0x0003E0, "Wrong size on PlayerDeadBodyV2_C_CreateDropBox");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, Param_Player) == 0x000000, "Member 'PlayerDeadBodyV2_C_CreateDropBox::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, ContainerItems) == 0x000008, "Member 'PlayerDeadBodyV2_C_CreateDropBox::ContainerItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, DefaultItems) == 0x000018, "Member 'PlayerDeadBodyV2_C_CreateDropBox::DefaultItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, Temp_int_Array_Index_Variable) == 0x000028, "Member 'PlayerDeadBodyV2_C_CreateDropBox::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, K2Node_MakeArray_Array) == 0x000030, "Member 'PlayerDeadBodyV2_C_CreateDropBox::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_HasAuthority_ReturnValue) == 0x000040, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_GetSocketLocation_ReturnValue) == 0x000048, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000060, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_LineTraceSingle_OutHit) == 0x000078, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_LineTraceSingle_ReturnValue) == 0x000160, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_bBlockingHit) == 0x000161, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_bInitialOverlap) == 0x000162, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_Time) == 0x000164, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_Distance) == 0x000168, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_Location) == 0x000170, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_ImpactPoint) == 0x000188, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_Normal) == 0x0001A0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_ImpactNormal) == 0x0001B8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_PhysMat) == 0x0001D0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_HitActor) == 0x0001D8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_HitComponent) == 0x0001E0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_HitBoneName) == 0x0001E8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_BoneName) == 0x0001F0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_HitItem) == 0x0001F8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_ElementIndex) == 0x0001FC, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_FaceIndex) == 0x000200, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_TraceStart) == 0x000208, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakHitResult_TraceEnd) == 0x000220, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000238, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, Temp_int_Loop_Counter_Variable) == 0x00023C, "Member 'PlayerDeadBodyV2_C_CreateDropBox::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Add_IntInt_ReturnValue) == 0x000240, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Array_Get_Item) == 0x000248, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Array_Length_ReturnValue) == 0x0002B0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Less_IntInt_ReturnValue) == 0x0002B4, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, K2Node_MakeStruct_DefaultItemInfo) == 0x0002B8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::K2Node_MakeStruct_DefaultItemInfo' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Array_Add_ReturnValue) == 0x0002F8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_Array_IsNotEmpty_ReturnValue_1) == 0x0002FC, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_Array_IsNotEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_GetSocketRotation_ReturnValue) == 0x000300, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, Temp_text_Variable) == 0x000318, "Member 'PlayerDeadBodyV2_C_CreateDropBox::Temp_text_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakRotator_Roll) == 0x000330, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakRotator_Pitch) == 0x000334, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BreakRotator_Yaw) == 0x000338, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_MakeRotator_ReturnValue) == 0x000340, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_MakeTransform_ReturnValue) == 0x000360, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0003C0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_FinishSpawningActor_ReturnValue) == 0x0003C8, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_CreateDropBox, CallFunc_IsValid_ReturnValue) == 0x0003D0, "Member 'PlayerDeadBodyV2_C_CreateDropBox::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.DelayedPhysics
// 0x0048 (0x0048 - 0x0000)
struct PlayerDeadBodyV2_C_DelayedPhysics final
{
public:
	struct FVector                                HitVector;                                         // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnDeathVelocity;                                   // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Killer;                                            // 0x0038(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RadialDamage;                                      // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animed;                                            // 0x0041(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_DelayedPhysics) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_DelayedPhysics");
static_assert(sizeof(PlayerDeadBodyV2_C_DelayedPhysics) == 0x000048, "Wrong size on PlayerDeadBodyV2_C_DelayedPhysics");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, HitVector) == 0x000000, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::HitVector' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, OnDeathVelocity) == 0x000018, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::OnDeathVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, HitBoneName) == 0x000030, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, Killer) == 0x000038, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, RadialDamage) == 0x000040, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::RadialDamage' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DelayedPhysics, Animed) == 0x000041, "Member 'PlayerDeadBodyV2_C_DelayedPhysics::Animed' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.DestroyBody
// 0x0002 (0x0002 - 0x0000)
struct PlayerDeadBodyV2_C_DestroyBody final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_DestroyBody) == 0x000001, "Wrong alignment on PlayerDeadBodyV2_C_DestroyBody");
static_assert(sizeof(PlayerDeadBodyV2_C_DestroyBody) == 0x000002, "Wrong size on PlayerDeadBodyV2_C_DestroyBody");
static_assert(offsetof(PlayerDeadBodyV2_C_DestroyBody, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'PlayerDeadBodyV2_C_DestroyBody::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_DestroyBody, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'PlayerDeadBodyV2_C_DestroyBody::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.Die
// 0x01E8 (0x01E8 - 0x0000)
struct PlayerDeadBodyV2_C_Die final
{
public:
	TArray<struct FDropItemEntry>                 DroppedItems;                                      // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                HitVector;                                         // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                OnDeathVelocity;                                   // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   HitBoneName;                                       // 0x0040(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Param_Player;                                      // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  Killer;                                            // 0x0050(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          RadialDamage;                                      // 0x0058(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Animed;                                            // 0x0059(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      SurvivalPlayer;                                    // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USurvMale_Ragdoll_C*                    K2Node_DynamicCast_AsSurv_Male_Ragdoll;            // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocation_SweepHitResult;       // 0x00F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocation_ReturnValue;          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_Die) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_Die");
static_assert(sizeof(PlayerDeadBodyV2_C_Die) == 0x0001E8, "Wrong size on PlayerDeadBodyV2_C_Die");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, DroppedItems) == 0x000000, "Member 'PlayerDeadBodyV2_C_Die::DroppedItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, HitVector) == 0x000010, "Member 'PlayerDeadBodyV2_C_Die::HitVector' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, OnDeathVelocity) == 0x000028, "Member 'PlayerDeadBodyV2_C_Die::OnDeathVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, HitBoneName) == 0x000040, "Member 'PlayerDeadBodyV2_C_Die::HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, Param_Player) == 0x000048, "Member 'PlayerDeadBodyV2_C_Die::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, Killer) == 0x000050, "Member 'PlayerDeadBodyV2_C_Die::Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, RadialDamage) == 0x000058, "Member 'PlayerDeadBodyV2_C_Die::RadialDamage' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, Animed) == 0x000059, "Member 'PlayerDeadBodyV2_C_Die::Animed' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, SurvivalPlayer) == 0x000060, "Member 'PlayerDeadBodyV2_C_Die::SurvivalPlayer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_IsValid_ReturnValue) == 0x000068, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, K2Node_DynamicCast_AsSurvival_Player) == 0x000070, "Member 'PlayerDeadBodyV2_C_Die::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'PlayerDeadBodyV2_C_Die::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_HasAuthority_ReturnValue) == 0x000079, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_GetAnimInstance_ReturnValue) == 0x000080, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, K2Node_DynamicCast_AsSurv_Male_Ragdoll) == 0x000088, "Member 'PlayerDeadBodyV2_C_Die::K2Node_DynamicCast_AsSurv_Male_Ragdoll' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'PlayerDeadBodyV2_C_Die::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000098, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000B0, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_MakeVector_ReturnValue) == 0x0000C0, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_Add_VectorVector_ReturnValue) == 0x0000D8, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_K2_SetActorLocation_SweepHitResult) == 0x0000F0, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_K2_SetActorLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_K2_SetActorLocation_ReturnValue) == 0x0001D8, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_K2_SetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Die, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0001E0, "Member 'PlayerDeadBodyV2_C_Die::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.Enable SMTicks
// 0x0001 (0x0001 - 0x0000)
struct PlayerDeadBodyV2_C_Enable_SMTicks final
{
public:
	bool                                          Enable;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_Enable_SMTicks) == 0x000001, "Wrong alignment on PlayerDeadBodyV2_C_Enable_SMTicks");
static_assert(sizeof(PlayerDeadBodyV2_C_Enable_SMTicks) == 0x000001, "Wrong size on PlayerDeadBodyV2_C_Enable_SMTicks");
static_assert(offsetof(PlayerDeadBodyV2_C_Enable_SMTicks, Enable) == 0x000000, "Member 'PlayerDeadBodyV2_C_Enable_SMTicks::Enable' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.ExecuteUbergraph_PlayerDeadBodyV2
// 0x0310 (0x0310 - 0x0000)
struct PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FDropItemEntry>                 K2Node_CustomEvent_DroppedItems;                   // 0x0010(0x0010)(ConstParm, ReferenceParm, ContainsInstancedReference)
	struct FVector                                K2Node_CustomEvent_HitVector_1;                    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_OnDeathVelocity_1;              // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_HitBoneName_1;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Player;                         // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Killer_1;                       // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RadialDamage_1;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Animed_1;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_DynamicCast_AsPlayer_Controller;            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameHUD_C>        K2Node_DynamicCast_AsBPI_Game_HUD;                 // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetDeathScreen__Widget__Widget;           // 0x00B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UWBP_NewDeathScreen_C*                  K2Node_DynamicCast_AsWBP_New_Death_Screen;         // 0x00B8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_HitVector;                      // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_CustomEvent_OnDeathVelocity;                // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_HitBoneName;                    // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_CustomEvent_Killer;                         // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_RadialDamage;                   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Animed;                         // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10A[0x6];                                      // 0x010A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        Temp_object_Variable;                              // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimationAsset*                        Temp_object_Variable_1;                            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Name;                           // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent_1;  // 0x0130(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0140(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex_1;       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0150(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0238(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0248(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_New_NV_Water_C*                     K2Node_DynamicCast_AsBP_New_NV_Water;              // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_262[0x6];                                      // 0x0262(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetComponentBounds_Origin;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetComponentBounds_BoxExtent;             // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetComponentBounds_SphereRadius;          // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DB[0x1];                                      // 0x02DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimationAsset*                        K2Node_Select_Default;                             // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2");
static_assert(sizeof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2) == 0x000310, "Wrong size on PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, EntryPoint) == 0x000000, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetController_ReturnValue) == 0x000008, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_DroppedItems) == 0x000010, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_DroppedItems' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_HitVector_1) == 0x000020, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_HitVector_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_OnDeathVelocity_1) == 0x000038, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_OnDeathVelocity_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_HitBoneName_1) == 0x000050, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Player) == 0x000058, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Killer_1) == 0x000060, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Killer_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_RadialDamage_1) == 0x000068, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_RadialDamage_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Animed_1) == 0x000069, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Animed_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_AsPlayer_Controller) == 0x000070, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_AsPlayer_Controller' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_bSuccess) == 0x000078, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetHUD_ReturnValue) == 0x000080, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_AsSurvival_Player) == 0x000088, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_AsBPI_Game_HUD) == 0x000098, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_AsBPI_Game_HUD' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_bSuccess_2) == 0x0000A8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetDeathScreen__Widget__Widget) == 0x0000B0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetDeathScreen__Widget__Widget' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_AsWBP_New_Death_Screen) == 0x0000B8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_AsWBP_New_Death_Screen' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_bSuccess_3) == 0x0000C0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_IsValid_ReturnValue) == 0x0000C1, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_HitVector) == 0x0000C8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_HitVector' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_OnDeathVelocity) == 0x0000E0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_OnDeathVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_HitBoneName) == 0x0000F8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_HitBoneName' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Killer) == 0x000100, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_RadialDamage) == 0x000108, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_RadialDamage' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Animed) == 0x000109, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Animed' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, Temp_object_Variable) == 0x000110, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, Temp_object_Variable_1) == 0x000118, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, Temp_bool_Variable) == 0x000120, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_CustomEvent_Name) == 0x000124, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_CustomEvent_Name' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OverlappedComponent_1) == 0x000130, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OverlappedComponent_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000138, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000140, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherBodyIndex_1) == 0x000148, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherBodyIndex_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_bFromSweep) == 0x00014C, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_SweepResult) == 0x000150, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000238, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherActor) == 0x000240, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherComp) == 0x000248, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000250, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_AsBP_New_NV_Water) == 0x000258, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_AsBP_New_NV_Water' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_DynamicCast_bSuccess_4) == 0x000260, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_IsDedicatedServer_ReturnValue) == 0x000261, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetComponentBounds_Origin) == 0x000268, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetComponentBounds_Origin' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetComponentBounds_BoxExtent) == 0x000280, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetComponentBounds_BoxExtent' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_GetComponentBounds_SphereRadius) == 0x000298, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_GetComponentBounds_SphereRadius' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_X) == 0x0002A0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_Y) == 0x0002A8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_Z) == 0x0002B0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_X_1) == 0x0002B8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_Y_1) == 0x0002C0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_BreakVector_Z_1) == 0x0002C8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002D0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_SwitchEnum_CmpSuccess) == 0x0002D8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_HasAuthority_ReturnValue) == 0x0002D9, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_SwitchEnum_CmpSuccess_1) == 0x0002DA, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_Event_DeltaSeconds) == 0x0002DC, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002E0, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0002E8, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000300, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2, K2Node_Select_Default) == 0x000308, "Member 'PlayerDeadBodyV2_C_ExecuteUbergraph_PlayerDeadBodyV2::K2Node_Select_Default' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.GetBoneName (Pelvis)
// 0x0008 (0x0008 - 0x0000)
struct PlayerDeadBodyV2_C_GetBoneName__Pelvis_ final
{
public:
	class FName                                   BoneName;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_GetBoneName__Pelvis_) == 0x000004, "Wrong alignment on PlayerDeadBodyV2_C_GetBoneName__Pelvis_");
static_assert(sizeof(PlayerDeadBodyV2_C_GetBoneName__Pelvis_) == 0x000008, "Wrong size on PlayerDeadBodyV2_C_GetBoneName__Pelvis_");
static_assert(offsetof(PlayerDeadBodyV2_C_GetBoneName__Pelvis_, BoneName) == 0x000000, "Member 'PlayerDeadBodyV2_C_GetBoneName__Pelvis_::BoneName' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.GetImpulse
// 0x0038 (0x0038 - 0x0000)
struct PlayerDeadBodyV2_C_GetImpulse final
{
public:
	class APawn*                                  Killer;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Impulse;                                           // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FuntionImpulse;                                    // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      K2Node_DynamicCast_AsSurvival_Player;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_GetImpulse) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_GetImpulse");
static_assert(sizeof(PlayerDeadBodyV2_C_GetImpulse) == 0x000038, "Wrong size on PlayerDeadBodyV2_C_GetImpulse");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, Killer) == 0x000000, "Member 'PlayerDeadBodyV2_C_GetImpulse::Killer' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, Impulse) == 0x000008, "Member 'PlayerDeadBodyV2_C_GetImpulse::Impulse' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, FuntionImpulse) == 0x000010, "Member 'PlayerDeadBodyV2_C_GetImpulse::FuntionImpulse' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, K2Node_DynamicCast_AsSurvival_Player) == 0x000018, "Member 'PlayerDeadBodyV2_C_GetImpulse::K2Node_DynamicCast_AsSurvival_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerDeadBodyV2_C_GetImpulse::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'PlayerDeadBodyV2_C_GetImpulse::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000022, "Member 'PlayerDeadBodyV2_C_GetImpulse::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, CallFunc_Map_Find_Value) == 0x000028, "Member 'PlayerDeadBodyV2_C_GetImpulse::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_GetImpulse, CallFunc_Map_Find_ReturnValue) == 0x000030, "Member 'PlayerDeadBodyV2_C_GetImpulse::CallFunc_Map_Find_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.LimitPhysicsVelocity
// 0x00A0 (0x00A0 - 0x0000)
struct PlayerDeadBodyV2_C_LimitPhysicsVelocity final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ResultVelocity;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CorrectedVelocity;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_LimitPhysicsVelocity) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_LimitPhysicsVelocity");
static_assert(sizeof(PlayerDeadBodyV2_C_LimitPhysicsVelocity) == 0x0000A0, "Wrong size on PlayerDeadBodyV2_C_LimitPhysicsVelocity");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, Velocity) == 0x000000, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::Velocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, ResultVelocity) == 0x000018, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::ResultVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CorrectedVelocity) == 0x000030, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CorrectedVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CallFunc_VSize_ReturnValue) == 0x000048, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000050, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CallFunc_Normal_ReturnValue) == 0x000058, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000070, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_LimitPhysicsVelocity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000088, "Member 'PlayerDeadBodyV2_C_LimitPhysicsVelocity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.OnToggleDeadBodyTimer
// 0x0018 (0x0018 - 0x0000)
struct PlayerDeadBodyV2_C_OnToggleDeadBodyTimer final
{
public:
	bool                                          NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue;       // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerPausedHandle_ReturnValue;       // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_IsTimerActiveHandle_ReturnValue_1;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_OnToggleDeadBodyTimer");
static_assert(sizeof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer) == 0x000018, "Wrong size on PlayerDeadBodyV2_C_OnToggleDeadBodyTimer");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, NewState) == 0x000000, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::NewState' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_HasAuthority_ReturnValue) == 0x000001, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue) == 0x000002, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_K2_IsTimerPausedHandle_ReturnValue) == 0x000003, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_K2_IsTimerPausedHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_K2_SetTimer_ReturnValue) == 0x000008, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_K2_IsTimerActiveHandle_ReturnValue_1) == 0x000010, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_K2_IsTimerActiveHandle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_OnToggleDeadBodyTimer, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000014, "Member 'PlayerDeadBodyV2_C_OnToggleDeadBodyTimer::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.Phase Shift
// 0x0018 (0x0018 - 0x0000)
struct PlayerDeadBodyV2_C_Phase_Shift final
{
public:
	class AActor*                                 Param_Player;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_V2_C*                   K2Node_DynamicCast_AsSurvival_Player_V2;           // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_Phase_Shift) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_Phase_Shift");
static_assert(sizeof(PlayerDeadBodyV2_C_Phase_Shift) == 0x000018, "Wrong size on PlayerDeadBodyV2_C_Phase_Shift");
static_assert(offsetof(PlayerDeadBodyV2_C_Phase_Shift, Param_Player) == 0x000000, "Member 'PlayerDeadBodyV2_C_Phase_Shift::Param_Player' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Phase_Shift, K2Node_DynamicCast_AsSurvival_Player_V2) == 0x000008, "Member 'PlayerDeadBodyV2_C_Phase_Shift::K2Node_DynamicCast_AsSurvival_Player_V2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_Phase_Shift, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'PlayerDeadBodyV2_C_Phase_Shift::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.PhysicsCorrection
// 0x0068 (0x0068 - 0x0000)
struct PlayerDeadBodyV2_C_PhysicsCorrection final
{
public:
	struct FVector                                CurrentVelocity;                                   // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LimitPhysicsVelocity_ResultVelocity;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_PhysicsCorrection) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_PhysicsCorrection");
static_assert(sizeof(PlayerDeadBodyV2_C_PhysicsCorrection) == 0x000068, "Wrong size on PlayerDeadBodyV2_C_PhysicsCorrection");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CurrentVelocity) == 0x000000, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CurrentVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_LimitPhysicsVelocity_ResultVelocity) == 0x000018, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_LimitPhysicsVelocity_ResultVelocity' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_VSize_ReturnValue) == 0x000030, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x000040, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_VSize_ReturnValue_1) == 0x000058, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_PhysicsCorrection, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'PlayerDeadBodyV2_C_PhysicsCorrection::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct PlayerDeadBodyV2_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_ReceiveTick) == 0x000004, "Wrong alignment on PlayerDeadBodyV2_C_ReceiveTick");
static_assert(sizeof(PlayerDeadBodyV2_C_ReceiveTick) == 0x000004, "Wrong size on PlayerDeadBodyV2_C_ReceiveTick");
static_assert(offsetof(PlayerDeadBodyV2_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'PlayerDeadBodyV2_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.SetCurrentEnvType
// 0x0002 (0x0002 - 0x0000)
struct PlayerDeadBodyV2_C_SetCurrentEnvType final
{
public:
	EDeadBodyEnvType                              NewEnvType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_SetCurrentEnvType) == 0x000001, "Wrong alignment on PlayerDeadBodyV2_C_SetCurrentEnvType");
static_assert(sizeof(PlayerDeadBodyV2_C_SetCurrentEnvType) == 0x000002, "Wrong size on PlayerDeadBodyV2_C_SetCurrentEnvType");
static_assert(offsetof(PlayerDeadBodyV2_C_SetCurrentEnvType, NewEnvType) == 0x000000, "Member 'PlayerDeadBodyV2_C_SetCurrentEnvType::NewEnvType' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_SetCurrentEnvType, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'PlayerDeadBodyV2_C_SetCurrentEnvType::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.SetCurrentState
// 0x0002 (0x0002 - 0x0000)
struct PlayerDeadBodyV2_C_SetCurrentState final
{
public:
	EDeadBodyState                                NewState;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_SetCurrentState) == 0x000001, "Wrong alignment on PlayerDeadBodyV2_C_SetCurrentState");
static_assert(sizeof(PlayerDeadBodyV2_C_SetCurrentState) == 0x000002, "Wrong size on PlayerDeadBodyV2_C_SetCurrentState");
static_assert(offsetof(PlayerDeadBodyV2_C_SetCurrentState, NewState) == 0x000000, "Member 'PlayerDeadBodyV2_C_SetCurrentState::NewState' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_SetCurrentState, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'PlayerDeadBodyV2_C_SetCurrentState::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.TakeOffClothes
// 0x0248 (0x0248 - 0x0000)
struct PlayerDeadBodyV2_C_TakeOffClothes final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FEquipmentData                         CallFunc_GetDataTableRowFromName_OutRow;           // 0x0008(0x0180)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh;                // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_1;              // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_2;              // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_3;              // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_DynamicCast_AsSkeletal_Mesh_4;              // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_1;       // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_2;       // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0229(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22A[0x6];                                      // 0x022A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_3;       // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue_4;       // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_3;    // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_4;    // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_TakeOffClothes) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_TakeOffClothes");
static_assert(sizeof(PlayerDeadBodyV2_C_TakeOffClothes) == 0x000248, "Wrong size on PlayerDeadBodyV2_C_TakeOffClothes");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, Param_Name) == 0x000000, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::Param_Name' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetDataTableRowFromName_OutRow) == 0x000008, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000188, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000190, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000198, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_AsSkeletal_Mesh) == 0x0001A0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_AsSkeletal_Mesh' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0001B0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0001B8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_AsSkeletal_Mesh_1) == 0x0001C0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_AsSkeletal_Mesh_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_bSuccess_1) == 0x0001C8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x0001D0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0001D8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_AsSkeletal_Mesh_2) == 0x0001E0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_AsSkeletal_Mesh_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_AsSkeletal_Mesh_3) == 0x0001F0, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_AsSkeletal_Mesh_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000200, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_AsSkeletal_Mesh_4) == 0x000208, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_AsSkeletal_Mesh_4' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, K2Node_DynamicCast_bSuccess_4) == 0x000210, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetSkeletalMeshAsset_ReturnValue_1) == 0x000218, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetSkeletalMeshAsset_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetSkeletalMeshAsset_ReturnValue_2) == 0x000220, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetSkeletalMeshAsset_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000228, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000229, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetSkeletalMeshAsset_ReturnValue_3) == 0x000230, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetSkeletalMeshAsset_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_GetSkeletalMeshAsset_ReturnValue_4) == 0x000238, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_GetSkeletalMeshAsset_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_EqualEqual_ObjectObject_ReturnValue_3) == 0x000240, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_EqualEqual_ObjectObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothes, CallFunc_EqualEqual_ObjectObject_ReturnValue_4) == 0x000241, "Member 'PlayerDeadBodyV2_C_TakeOffClothes::CallFunc_EqualEqual_ObjectObject_ReturnValue_4' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.TakeOffClothesMulti
// 0x0008 (0x0008 - 0x0000)
struct PlayerDeadBodyV2_C_TakeOffClothesMulti final
{
public:
	class FName                                   Param_Name;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_TakeOffClothesMulti) == 0x000004, "Wrong alignment on PlayerDeadBodyV2_C_TakeOffClothesMulti");
static_assert(sizeof(PlayerDeadBodyV2_C_TakeOffClothesMulti) == 0x000008, "Wrong size on PlayerDeadBodyV2_C_TakeOffClothesMulti");
static_assert(offsetof(PlayerDeadBodyV2_C_TakeOffClothesMulti, Param_Name) == 0x000000, "Member 'PlayerDeadBodyV2_C_TakeOffClothesMulti::Param_Name' has a wrong offset!");

// Function PlayerDeadBodyV2.PlayerDeadBodyV2_C.UpdateMeshView
// 0x0070 (0x0070 - 0x0000)
struct PlayerDeadBodyV2_C_UpdateMeshView final
{
public:
	class USkeletalMeshComponent*                 EquipmentSlot;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          NewMesh;                                           // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterial*                              NewMaterial;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0028(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item;                           // 0x0040(0x0028)(NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PlayerDeadBodyV2_C_UpdateMeshView) == 0x000008, "Wrong alignment on PlayerDeadBodyV2_C_UpdateMeshView");
static_assert(sizeof(PlayerDeadBodyV2_C_UpdateMeshView) == 0x000070, "Wrong size on PlayerDeadBodyV2_C_UpdateMeshView");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, EquipmentSlot) == 0x000000, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::EquipmentSlot' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, NewMesh) == 0x000008, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::NewMesh' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, NewMaterial) == 0x000010, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::NewMaterial' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, Temp_int_Array_Index_Variable) == 0x000018, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_IsValid_ReturnValue) == 0x000024, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_GetMaterials_ReturnValue) == 0x000028, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_Array_Get_Item) == 0x000040, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerDeadBodyV2_C_UpdateMeshView, CallFunc_Less_IntInt_ReturnValue) == 0x000068, "Member 'PlayerDeadBodyV2_C_UpdateMeshView::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

