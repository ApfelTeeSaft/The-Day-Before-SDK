#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BreathSystemInterface

#include "Basic.hpp"

#include "BreathSystemInterface_classes.hpp"
#include "BreathSystemInterface_parameters.hpp"


namespace SDK
{

// Function BreathSystemInterface.BreathSystemInterface_C.CallBreathStateChange
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateMachineStruct        NewState                                               (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// double                                  CurrentStamina                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagedChest                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DamagedBelly                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Painkiller                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void IBreathSystemInterface_C::CallBreathStateChange(const struct FBreathStateMachineStruct& NewState, double CurrentStamina, bool DamagedChest, bool DamagedBelly, bool Painkiller)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreathSystemInterface_C", "CallBreathStateChange");

	Params::BreathSystemInterface_C_CallBreathStateChange Parms{};

	Parms.NewState = std::move(NewState);
	Parms.CurrentStamina = CurrentStamina;
	Parms.DamagedChest = DamagedChest;
	Parms.DamagedBelly = DamagedBelly;
	Parms.Painkiller = Painkiller;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BreathSystemInterface.BreathSystemInterface_C.OnBreathStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FBreathStateChangedStruct        State                                                  (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)

void IBreathSystemInterface_C::OnBreathStateChanged(const struct FBreathStateChangedStruct& State)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BreathSystemInterface_C", "OnBreathStateChanged");

	Params::BreathSystemInterface_C_OnBreathStateChanged Parms{};

	Parms.State = std::move(State);

	UObject::ProcessEvent(Func, &Parms);
}

}

