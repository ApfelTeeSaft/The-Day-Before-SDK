#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CutsceneTriggerVolume

#include "Basic.hpp"

#include "E_InteractType_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "E_ActorType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass CutsceneTriggerVolume.CutsceneTriggerVolume_C
// 0x0080 (0x0310 - 0x0290)
class ACutsceneTriggerVolume_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       TutorialPoint3D;                                   // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBoxComponent*                          Box;                                               // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	float                                         Move_NewTrack_0_3EE7216041283F3241011E96EE460A90;  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETimelineDirection                            Move__Direction_3EE7216041283F3241011E96EE460A90;  // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     Move;                                              // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         SequenceToPlay;                                    // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          AlreadyPlayed;                                     // 0x02C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    LSPlayer;                                          // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             OverlappedChar;                                    // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Interier_Toggler_C*>         HUBInterTogglers;                                  // 0x02E0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class AActor*                                 ZeroPoint;                                         // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 ZeroPoint_2;                                       // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_Interier_Toggler_C*>         ActiveTogglersAfterCT;                             // 0x0300(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void BndEvt__CutsceneTriggerVolume_Box_K2Node_ComponentBoundEvent_0_ComponentBeginOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex, bool bFromSweep, const struct FHitResult& SweepResult);
	void BndEvt__CutsceneTriggerVolume_Box_K2Node_ComponentBoundEvent_1_ComponentEndOverlapSignature__DelegateSignature(class UPrimitiveComponent* OverlappedComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, int32 OtherBodyIndex);
	void CallCutscene();
	void CutsceneEnded();
	void DestroyInteractable();
	void ExecuteUbergraph_CutsceneTriggerVolume(int32 EntryPoint);
	void GetActorType(E_ActorType* ActorType);
	void IsLocked_(bool* Result);
	void Move__FinishedFunc();
	void Move__UpdateFunc();
	void OnBeginInteract(class APawn* Player);
	void OnFocused(class APawn* Player, class AActor* HighlightActor, class UActorComponent* HighlightActorComponent, E_InteractType* InteractType, double* LateTime);
	void OnInteract(class APawn* Player);
	void OnInteract2(class APawn* Player);
	void OnInteract3(class APawn* Player);
	void OnInteractVehicle(class APawn* Player, int32 SitIndex, bool SkipAnimation);
	void OnLocalInteract(class APawn* Player);
	void OnLostFocus(class APawn* Player);
	void OnSeen(class APawn* Player);
	void OnSquadCheckComplete();
	void OnStopInteract(class APawn* Player);
	void ReceiveBeginPlay();
	void Run_Lockpicking();
	void Set3DWidgetVisibility(bool Visible);
	void SetTutorial3DWidgetVisibility(bool Visible);
	void ShowLocationNotification();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CutsceneTriggerVolume_C">();
	}
	static class ACutsceneTriggerVolume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACutsceneTriggerVolume_C>();
	}
};
static_assert(alignof(ACutsceneTriggerVolume_C) == 0x000008, "Wrong alignment on ACutsceneTriggerVolume_C");
static_assert(sizeof(ACutsceneTriggerVolume_C) == 0x000310, "Wrong size on ACutsceneTriggerVolume_C");
static_assert(offsetof(ACutsceneTriggerVolume_C, UberGraphFrame) == 0x000290, "Member 'ACutsceneTriggerVolume_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, TutorialPoint3D) == 0x000298, "Member 'ACutsceneTriggerVolume_C::TutorialPoint3D' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, Box) == 0x0002A0, "Member 'ACutsceneTriggerVolume_C::Box' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, DefaultSceneRoot) == 0x0002A8, "Member 'ACutsceneTriggerVolume_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, Move_NewTrack_0_3EE7216041283F3241011E96EE460A90) == 0x0002B0, "Member 'ACutsceneTriggerVolume_C::Move_NewTrack_0_3EE7216041283F3241011E96EE460A90' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, Move__Direction_3EE7216041283F3241011E96EE460A90) == 0x0002B4, "Member 'ACutsceneTriggerVolume_C::Move__Direction_3EE7216041283F3241011E96EE460A90' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, Move) == 0x0002B8, "Member 'ACutsceneTriggerVolume_C::Move' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, SequenceToPlay) == 0x0002C0, "Member 'ACutsceneTriggerVolume_C::SequenceToPlay' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, AlreadyPlayed) == 0x0002C8, "Member 'ACutsceneTriggerVolume_C::AlreadyPlayed' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, LSPlayer) == 0x0002D0, "Member 'ACutsceneTriggerVolume_C::LSPlayer' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, OverlappedChar) == 0x0002D8, "Member 'ACutsceneTriggerVolume_C::OverlappedChar' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, HUBInterTogglers) == 0x0002E0, "Member 'ACutsceneTriggerVolume_C::HUBInterTogglers' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, ZeroPoint) == 0x0002F0, "Member 'ACutsceneTriggerVolume_C::ZeroPoint' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, ZeroPoint_2) == 0x0002F8, "Member 'ACutsceneTriggerVolume_C::ZeroPoint_2' has a wrong offset!");
static_assert(offsetof(ACutsceneTriggerVolume_C, ActiveTogglersAfterCT) == 0x000300, "Member 'ACutsceneTriggerVolume_C::ActiveTogglersAfterCT' has a wrong offset!");

}

