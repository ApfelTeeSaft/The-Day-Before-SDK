#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InGameContainerWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "JSItemType_structs.hpp"
#include "Survival_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass InGameContainerWidget.InGameContainerWidget_C
// 0x00A0 (0x0320 - 0x0280)
class UInGameContainerWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       FadeOut_Anim;                                      // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       FadeIn_Anim;                                       // 0x0290(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_124;                                        // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UJSIContainer_C*                        MainInventoryContainer;                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UScrollBox*                             ScrollBox_Items;                                   // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               SizeBox_0;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UUMG_LabelText_C*                       UMG_LabelText_226;                                 // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Scroller_C*                        WBP_InventoryScroller;                             // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_StashTutorial_C*                     StashTutorialWidget;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UMPInGameInventory_C*                   InventoryRef;                                      // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ABP_Stash_C*                            BP_Stash;                                          // 0x02D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        ScrollBarOpacity;                                  // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UScrollBox*                             Scroll_Box_Widget_Ref;                             // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           ScrollBarOpacityTimer;                             // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvivalPlayer_C*                      Player_Ref;                                        // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class ASurvPC_C*                              As_Surv_PC;                                        // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             StashUpdatDispatcher;                              // 0x0308(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	int32                                         Columns;                                           // 0x0318(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void BndEvt__InGameContainerWidget_Button_124_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__InGameContainerWidget_MainInventoryContainer_K2Node_ComponentBoundEvent_0_OnSlotMouseButtonDown__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__InGameContainerWidget_MainInventoryContainer_K2Node_ComponentBoundEvent_12_DragEnd__DelegateSignature();
	void BndEvt__InGameContainerWidget_MainInventoryContainer_K2Node_ComponentBoundEvent_2_OnSlotDoubleClick__DelegateSignature(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void BndEvt__InGameContainerWidget_MainInventoryContainer_K2Node_ComponentBoundEvent_4_DropInfo_ContainerToContainer__DelegateSignature(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_);
	void BndEvt__InGameContainerWidget_MainInventoryContainer_K2Node_ComponentBoundEvent_5_OnContainerUpdate__DelegateSignature();
	void BndEvt__InGameContainerWidget_ScrollBox_68_K2Node_ComponentBoundEvent_3_OnUserScrolledEvent__DelegateSignature(float CurrentOffset);
	void CanAddItem(class UJSIContainer_C* ContainerRef, class UJSI_Slot_C* SlotRef, bool* Result);
	bool CheckInventoryContainer(class UObject* StashContainer);
	void Construct();
	void Destruct();
	void EquipItem(class UJSIContainer_C* Container_Ref, class UJSI_Slot_C* Slot_Ref, bool* Equipped);
	void ExecuteUbergraph_InGameContainerWidget(int32 EntryPoint);
	void FilterItems(EItemType Type);
	void FromInventoryDropInfo(class UJSIContainer_C* From, class UJSIContainer_C* To, class UJSI_Slot_C* FromSlotRef, class UJSI_Slot_C* ToSlotRef, bool ToEmptySlot_, bool MovedAll_);
	double GetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef);
	void Hide();
	void InGameContainerWidget_AutoGenFunc(class UJSIContainer_C* FromContainer, class UJSIContainer_C* ToContainer, class UJSI_Slot_C* SlotReceiver, class UJSI_Slot_C* SlotDropped, bool SlotDroppedRemoved_);
	void MoveItemToInventory(class UJSIContainer_C* Container_Ref, class UJSI_Slot_C* Slot_Ref);
	void MoveItemToStash();
	void OnContainerUpdate_Event();
	void OnInventoryDoubleClick(class UJSIContainer_C* Container, class UJSI_Slot_C* SlotRef, const struct FKey& Button);
	void PlayScrollBarOpacityAnim(double Opacity, class UScrollBox* ScrollBoxWidgetRef);
	void PreConstruct(bool IsDesignTime);
	void ScrollBarOpacityAnimTick();
	void SetContainerRowsNumber(int32 SlotsNumber);
	void SetScrollBarRenderOpacity(class UScrollBox* ScrollBoxWidgetRef, double Opacity, const struct FLinearColor& TinpColor);
	void SetStashTutorialWidget(class UW_StashTutorial_C* TutorialWidget);
	void Show();
	void StashUpdatDispatcher__DelegateSignature();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"InGameContainerWidget_C">();
	}
	static class UInGameContainerWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UInGameContainerWidget_C>();
	}
};
static_assert(alignof(UInGameContainerWidget_C) == 0x000008, "Wrong alignment on UInGameContainerWidget_C");
static_assert(sizeof(UInGameContainerWidget_C) == 0x000320, "Wrong size on UInGameContainerWidget_C");
static_assert(offsetof(UInGameContainerWidget_C, UberGraphFrame) == 0x000280, "Member 'UInGameContainerWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, FadeOut_Anim) == 0x000288, "Member 'UInGameContainerWidget_C::FadeOut_Anim' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, FadeIn_Anim) == 0x000290, "Member 'UInGameContainerWidget_C::FadeIn_Anim' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, Button_124) == 0x000298, "Member 'UInGameContainerWidget_C::Button_124' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, MainInventoryContainer) == 0x0002A0, "Member 'UInGameContainerWidget_C::MainInventoryContainer' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, ScrollBox_Items) == 0x0002A8, "Member 'UInGameContainerWidget_C::ScrollBox_Items' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, SizeBox_0) == 0x0002B0, "Member 'UInGameContainerWidget_C::SizeBox_0' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, UMG_LabelText_226) == 0x0002B8, "Member 'UInGameContainerWidget_C::UMG_LabelText_226' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, WBP_InventoryScroller) == 0x0002C0, "Member 'UInGameContainerWidget_C::WBP_InventoryScroller' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, StashTutorialWidget) == 0x0002C8, "Member 'UInGameContainerWidget_C::StashTutorialWidget' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, InventoryRef) == 0x0002D0, "Member 'UInGameContainerWidget_C::InventoryRef' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, BP_Stash) == 0x0002D8, "Member 'UInGameContainerWidget_C::BP_Stash' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, ScrollBarOpacity) == 0x0002E0, "Member 'UInGameContainerWidget_C::ScrollBarOpacity' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, Scroll_Box_Widget_Ref) == 0x0002E8, "Member 'UInGameContainerWidget_C::Scroll_Box_Widget_Ref' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, ScrollBarOpacityTimer) == 0x0002F0, "Member 'UInGameContainerWidget_C::ScrollBarOpacityTimer' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, Player_Ref) == 0x0002F8, "Member 'UInGameContainerWidget_C::Player_Ref' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, As_Surv_PC) == 0x000300, "Member 'UInGameContainerWidget_C::As_Surv_PC' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, StashUpdatDispatcher) == 0x000308, "Member 'UInGameContainerWidget_C::StashUpdatDispatcher' has a wrong offset!");
static_assert(offsetof(UInGameContainerWidget_C, Columns) == 0x000318, "Member 'UInGameContainerWidget_C::Columns' has a wrong offset!");

}

