#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_D2S_Glass

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_D2S_Glass.BP_D2S_Glass_C
// 0x00A0 (0x0330 - 0x0290)
class ABP_D2S_Glass_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UStaticMeshComponent*                   Main_plane_Small;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Main_plane_DDecal;                                 // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Glass_Impact_2;                                 // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UNiagaraComponent*                      NS_Glass_Impact;                                   // 0x02B0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Main_plane;                                        // 0x02B8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Hole_Plane;                                        // 0x02C0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Old;                                               // 0x02C8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02D0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	int32                                         ID;                                                // 0x02D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_D2S_Manager_C*                      Manager;                                           // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        ParentMesh;                                        // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           SmallGlassTimer;                                   // 0x02F0(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           BigGlassTimer;                                     // 0x02F8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	float                                         SmallGlassDelay;                                   // 0x0300(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         BigGlassDelay;                                     // 0x0304(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SmallGlassIsStopped;                               // 0x0308(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BigGlassIsStopped;                                 // 0x0309(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_30A[0x6];                                      // 0x030A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallbackPosition;                                  // 0x0310(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          DDecal_Hole_;                                      // 0x0328(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Small_Hole_;                                       // 0x0329(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_D2S_Glass(int32 EntryPoint);
	void Initialize(class USceneComponent* Mesh);
	void OnBigGlassHit(const struct FVector& SoundLocation);
	void OnSmallGlassHit(const struct FVector& SoundLocation);
	void ReceiveBeginPlay();
	void ReceiveParticleData(const TArray<struct FBasicParticleData>& Data, class UNiagaraSystem* NiagaraSystem, const struct FVector& SimulationPositionOffset);
	void ResetBigGlass();
	void ResetSmallGlass();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_D2S_Glass_C">();
	}
	static class ABP_D2S_Glass_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_D2S_Glass_C>();
	}
};
static_assert(alignof(ABP_D2S_Glass_C) == 0x000008, "Wrong alignment on ABP_D2S_Glass_C");
static_assert(sizeof(ABP_D2S_Glass_C) == 0x000330, "Wrong size on ABP_D2S_Glass_C");
static_assert(offsetof(ABP_D2S_Glass_C, UberGraphFrame) == 0x000290, "Member 'ABP_D2S_Glass_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Main_plane_Small) == 0x000298, "Member 'ABP_D2S_Glass_C::Main_plane_Small' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Main_plane_DDecal) == 0x0002A0, "Member 'ABP_D2S_Glass_C::Main_plane_DDecal' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, NS_Glass_Impact_2) == 0x0002A8, "Member 'ABP_D2S_Glass_C::NS_Glass_Impact_2' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, NS_Glass_Impact) == 0x0002B0, "Member 'ABP_D2S_Glass_C::NS_Glass_Impact' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Main_plane) == 0x0002B8, "Member 'ABP_D2S_Glass_C::Main_plane' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Hole_Plane) == 0x0002C0, "Member 'ABP_D2S_Glass_C::Hole_Plane' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Old) == 0x0002C8, "Member 'ABP_D2S_Glass_C::Old' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, DefaultSceneRoot) == 0x0002D0, "Member 'ABP_D2S_Glass_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, ID) == 0x0002D8, "Member 'ABP_D2S_Glass_C::ID' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Manager) == 0x0002E0, "Member 'ABP_D2S_Glass_C::Manager' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, ParentMesh) == 0x0002E8, "Member 'ABP_D2S_Glass_C::ParentMesh' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, SmallGlassTimer) == 0x0002F0, "Member 'ABP_D2S_Glass_C::SmallGlassTimer' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, BigGlassTimer) == 0x0002F8, "Member 'ABP_D2S_Glass_C::BigGlassTimer' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, SmallGlassDelay) == 0x000300, "Member 'ABP_D2S_Glass_C::SmallGlassDelay' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, BigGlassDelay) == 0x000304, "Member 'ABP_D2S_Glass_C::BigGlassDelay' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, SmallGlassIsStopped) == 0x000308, "Member 'ABP_D2S_Glass_C::SmallGlassIsStopped' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, BigGlassIsStopped) == 0x000309, "Member 'ABP_D2S_Glass_C::BigGlassIsStopped' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, CallbackPosition) == 0x000310, "Member 'ABP_D2S_Glass_C::CallbackPosition' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, DDecal_Hole_) == 0x000328, "Member 'ABP_D2S_Glass_C::DDecal_Hole_' has a wrong offset!");
static_assert(offsetof(ABP_D2S_Glass_C, Small_Hole_) == 0x000329, "Member 'ABP_D2S_Glass_C::Small_Hole_' has a wrong offset!");

}

